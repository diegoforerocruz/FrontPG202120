{"version":3,"sources":["data/nacimientovars.js","components/groupdetail.js","components/groupDetailSidebar.js","data/enviromentvarsdata.js","data/analisisvarsdata.js","components/groupManage.js","services/variablesUtils.js","components/variables/VariableFilter.js","components/variables/VariablesList.js","components/variables/VariableEdit.js","components/variableManage.js","services/temasUtils.js","components/temas/TemasList.js","components/TemasManage.js","components/sidebar/groupform.js","services/gruposUtils.js","components/sidebar/groupsItem.js","components/sidebar/sidebarContent.js","components/tree/ConditionPanelCrearGrupo.js","components/tree/createGroupTree.js","components/tree/faseSettingsModal.js","components/tree/TreeClass.js","components/tree/tree.js","components/tree/GrupoTreeDetail.js","components/inicio.js","assets/index.less","App.js","index.js"],"names":["nacimientoVars","value","label","csvData","Groupdetail","props","useState","groupInfo","undefined","Object","keys","info","headers","setheaders","groupsInfo","setgroupsInfo","dataToGraph","setdataToGraph","dataToGraphlvl2","setdataToGraphlvl2","labelsTG","setlabelsTG","selectedBar","setselectedBar","analisisVars","setanalisisVars","dataToDownload","setdataToDownload","resumenDownload","setresumenDownload","additionalVars","setadditionalVars","avtg","setavtg","handleBarSelection","etapa","grupo","arr","nombre","formatjson","grupos","grupos2","map","item","includes","labels","push","name","arrporgrupo","jsonobj","x","y","count","group","formatjsonlevel2","backresponse","etapasGrupos","datos","sort","defaultArr","i","index","j","length","etapanum","split","v","additional","list","summary","alert","handleGroupHistory","a","fetch","join","response","json","jsonData","console","error","message","handleAnalisisVars","header","startsWith","myArray","handleDeleteGroup","method","window","location","reload","useEffect","className","visibility","numberLimit","av","theme","VictoryTheme","material","domainPadding","height","width","style","tickLabels","angle","dependentAxis","title","centerTitle","orientation","gutter","border","stroke","colorScale","data","horizontal","offset","dtg","barWidth","events","target","eventHandlers","onClick","mutation","fill","datum","isMulti","options","defaultValue","classNamePrefix","onChange","values","selectItem","type","id","filename","fixLabelOverlap","tickCount","eval","labelComponent","addv","avl","artg","avli","entries","entry","parseFloat","barRatio","GroupDetailSidebar","sidebarOpen","setsidebarOpen","groupDetail","setGroupDetail","onSetSidebarOpen","open","handleUpdate","cambio1","cambio2","document","getElementById","etapas","aux","calculateDetail","sidebar","scope","element","min","max","xmlns","viewBox","fillRule","d","onSetOpen","styles","background","pullRight","envaroptions","analisisvars","populationList","tipo","populationVarList","standardPopulationVarList","analisisList","analisisVarList","standardAnalisisVarList","GroupManage","setGrupos","grupoClicked","setgrupoClicked","selectValue","setSelectValue","inputCatFields","setInputCatFields","setCalculatedCluster","handleChange","getnumfieldsdata","down","up","parseInt","jobj","variable","limiteinf","limitesup","igual","field","ng","cNum","variablesanalisisarr","postbody","nombregrupo","variables","analisis","clusterNum","body","JSON","stringify","getGruposCluster","htmlFor","placeholder","vname","temp","find","isClearable","valor","handleChangeCat","inputId","tabIndex","pvariable","indexOf","handleVarAddingPopulation","arr2","handleVarDeletingPopulation","handleVarAddingAnalisis","handleVarDeletingAnalisis","API_URL","ALL_URL","DELETE_URL","gId","CREATE_URL","getVariables","then","res","deleteVariable","status","updateVariable","nombre_variable","catch","createVariable","ok","Promise","reject","VariableFilter","text","tipo1","tipo2","tiempo","filterData","setFilterData","filt","textoCond","f","toLowerCase","nombre_real","unidad","etiqueta","nombre_general","evento","evento_inicial","evento_final","tipoCond","tiempoCond","reales","newArr","assign","rta","copia","filter","setVariables","s","filtradas","onSubmit","o","initialValues","handleSubmit","errors","setFieldValue","Form","noValidate","Row","Group","as","controlId","Col","sm","Control","onKeyPress","event","key","VariablesList","clon","titl","clon2","deleted","newObj","vvv","r","criteria","reduce","acc","currentValue","groupBy","hasOwnProperty","etap","g","t","Container","fluid","md","Accordion","val","Item","eventKey","Header","Body","Table","bordered","hover","Button","handleShow","VariableEdit","toString","etiquetas","setEtiquetas","significados","setSignificados","valor_db","valor_traducido","sigact","setSigAct","addSignificado","modifySignificado","sig","modifySignificadoActual","getOptionsEtapas","defaultVal","selectvalue","pName","Select","selected","enableReinitialize","temptag","tempvalordb","tempvalortrad","acumulado","modifyInitials","Label","column","Check","checked","disabled","splice","removeSignificado","et","Alert","variant","removeEtiqueta","tag","replace","span","dir","notify","unSelectItem","handleButtonClick","VariableManage","selectedItem","setSelectedItem","hide","setHide","setAux","setDeleted","variableitem","show","setShow","handleClose","funcion","setFuncion","createdItem","setCreatedItem","varInfo","log","m","toast","success","funcc","Modal","onHide","closeButton","Title","Footer","getTemas","TemasList","temas","setTemas","res2","TemasManage","colourOptions","originalState","fullList","standardVars","Groupform","fList","setFList","handleVarAdding","handleVarDeleting","CLUSTERALL_URL","BINS_URL","bins","grupoescogido","getGrupos","deleteGrupo","gID","deleteGrupoCluster","getBins","conditions","createGroup","updateGroup","GroupsItem","setSelected","selectedEdit","removeGroupFromnTree","groupsCluster","setGroupsCluster","removeGroupFromDatabase","eliminarFunc","handleClick","SidebarContent","grupos_cluster","updateGrupos","groupCreated","edited","removeFromOriginalList","ConditionPanelCrearGrupo","useReducer","forceUpdate","Range","createSliderWithTooltip","Slider","changeSelect","varSelect","vSelect","setGrupo","condiciones","getSelect","listaCondiciones","seleccionado","getSliders","nombre_final","etapa_final","data_real","lissta","allowCross","step","onAfterChange","changeRange","size","getInputText","p","sigs","p2","found","transformToSelect","sigs2","transformToSelect2","c","CreateGroupTree","request","datasource","test","setGroupCreated","estadisticas","conteo","percentage","toFixed","required","FaseSettingsModal","setListaOpciones","fase","estructura_grupo","changeEstructuraGrupo","changeTipoDivision","fases","tipodivision","setFases","ltemp","chosen","limit","resta","obj","numerogrupo","numero_bins","estructura_grupos","defaultChecked","maxLength","changeBins","foo","variable_real","buildArbol","TreeClass","root","this","tipo_arbol","node","condition","action","children","lista","findChildren","uid","n","oculto","_children","child","cleanTree","temprta","getNodesInLevel","Tree","d3ToPng","require","flag","listaTrees","setListaTrees","listaTreesC","setListaTreesC","zip","photoZip","folder","customStyles","control","provided","state","borderColor","minHeight","boxShadow","isFocused","valueContainer","padding","input","margin","indicatorSeparator","display","indicatorsContainer","customStylesEtapas","fase0","setFase0","lista_etapas","showFaseSettings","setShowFaseSettings","canvas","useRef","canvasDownload","geteventosTemporales","updateFase","convertToTree","parent","meaning","parse","cleanRequest","Date","now","Math","random","substr","color","floor","traduccion","getColor","convertConditionsToRequest","condiciones_previas","downloadZip","generateAsync","content","saveAs","source","pFase","pVariable","pEtapa","tapas","variables_real","clickMinus","hideChildren","redrawTree","addGroup","selectedGroup","significado","clickCancel","deleteNode","graphDownload","rot","svgid","highlight","marginLeft","xScale","yScale","descXScale","class_name","depthScale","dx","dy","treeLink","d3","tre","nodeSize","each","depth","x0","Infinity","x1","svg","current","append","attr","selectAll","enter","desc","links","descendants","nodeEnter","on","graph","select","remove","h","getRoot","recursiveBins","numFaseActual","pBins","pVar","pTipo","pGrupoNodoPadre","pEstructuraGrupo","pDataSource","pPadre","pIndex","pRoot","pTipoArbol","varObject","listaNewNodos","nodo","listaigual","itemigual","tempRoots","addChildren","nextFase","faseFound","tempArr","faseComienzo","numFaseComienzo","slice","tArr","gr","indx","gr_item2","gr_item","refRoot","hojas","hoja","fase1temp","refHoja","scale","format","quality","ignore","download","cssinline","fileData","file","base64","downloadSVG","typr","newFase","addFase","ref","GrupoTreeDetail","setBody","conds","testCondiciones","setEdited","Inicio","setState","getEtapa","transformToSelectEtapas","App","to","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"gHAAA,kCAAO,IAAMA,EAAiB,CAC5B,CACEC,MAAO,UACPC,MAAO,cAET,CACED,MAAO,WACPC,MAAO,QAET,CACED,MAAO,YACPC,MAAO,SAET,CACED,MAAO,SACPC,MAAO,4BAET,CACED,MAAO,iBACPC,MAAO,kBAET,CACED,MAAO,sBACPC,MAAO,uBAET,CACED,MAAO,wBACPC,MAAO,yBAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,qBACPC,MAAO,wBAET,CACED,MAAO,oBACPC,MAAO,iCAET,CACED,MAAO,WACPC,MAAO,QAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,YACPC,MAAO,oBAET,CACED,MAAO,YACPC,MAAO,oBAET,CACED,MAAO,WACPC,MAAO,4BAET,CACED,MAAO,KACPC,MAAO,wBAET,CACED,MAAO,YACPC,MAAO,wCAET,CACED,MAAO,sBACPC,MAAO,wCAET,CACED,MAAO,YACPC,MAAO,oBAET,CACED,MAAO,cACPC,MAAO,iBAET,CACED,MAAO,YACPC,MAAO,kBAET,CACED,MAAO,eACPC,MAAO,uBAET,CACED,MAAO,cACPC,MAAO,uDAET,CACED,MAAO,WACPC,MAAO,kCAET,CACED,MAAO,UACPC,MAAO,mCAET,CACED,MAAO,cACPC,MAAO,8BAET,CACED,MAAO,UACPC,MAAO,uCAET,CACED,MAAO,eACPC,MAAO,uCAET,CACED,MAAO,aACPC,MAAO,UAET,CACED,MAAO,MACPC,MAAO,oBAET,CACED,MAAO,SACPC,MAAO,uB,q1ECxHLC,QAAU,CACd,CAAC,YAAa,WAAY,SAC1B,CAAC,QAAS,OAAQ,qBAClB,CAAC,OAAQ,QAAS,qBAClB,CAAC,QAAS,UAAW,sBAGjBC,YAAc,SAAdA,YAAeC,OACnB,cAA8BC,oDACT,MAAnBD,MAAME,gBAAwCC,GAAnBH,MAAME,UAC7BE,OAAOC,KAAKL,MAAME,UAAUI,KAAK,IACjC,IAHN,2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O,wCAET,CACEC,MAAO,QACPD,MAAO,SAET,CACEC,MAAO,cACPD,MAAO,eAET,CACEC,MAAO,SACPD,MAAO,UAET,CACEC,MAAO,YACPD,MAAO,aAET,CACEC,MAAO,mBACPD,MAAO,oBAET,CACEC,MAAO,OACPD,MAAO,QAET,CACEC,MAAO,qCACPD,MAAO,sCAET,CACEC,MAAO,cACPD,MAAO,eAET,CACEC,MAAO,4BACPD,MAAO,6BAET,CACEC,MAAO,uCACPD,MAAO,wCAET,CACEC,MAAO,uBACPD,MAAO,wBAET,CACEC,MAAO,eACPD,MAAO,gBAET,CACEC,MAAO,kBACPD,MAAO,mBAET,CACEC,MAAO,2BACPD,MAAO,4BAET,CACEC,MAAO,wBACPD,MAAO,yBAET,CACEC,MAAO,mCACPD,MAAO,qC,OC3EP+K,EAAc,YFRY,CAC5B,CACE9K,MAAO,sBACPD,MAAO,kBACPgL,KAAM,GAER,CACE/K,MAAO,mBACPD,MAAO,mBACPgL,KAAM,GAER,CACE/K,MAAO,oBACPD,MAAO,uBACPgL,KAAM,GAER,CACE/K,MAAO,6BACPD,MAAO,4BACPgL,KAAM,GAER,CACE/K,MAAO,oBACPD,MAAO,uBACPgL,KAAM,GAER,CACE/K,MAAO,6BACPD,MAAO,4BACPgL,KAAM,GAER,CACE/K,MAAO,kBACPD,MAAO,qBACPgL,KAAM,GAER,CACE/K,MAAO,qBACPD,MAAO,wBACPgL,KAAM,GAER,CACE/K,MAAO,gDACPD,MAAO,yBACPgL,KAAM,GAER,CACE/K,MAAO,wBACPD,MAAO,mBACPgL,KAAM,GAER,CACE/K,MAAO,mBACPD,MAAO,sBACPgL,KAAM,GAER,CACE/K,MAAO,uBACPD,MAAO,uBACPgL,KAAM,GAER,CACE/K,MAAO,mBACPD,MAAO,eACPgL,KAAM,GAER,CACE/K,MAAO,oBACPD,MAAO,gBACPgL,KAAM,GAER,CACE/K,MAAO,iBACPD,MAAO,eACPgL,KAAM,GAER,CACE/K,MAAO,kBACPD,MAAO,gBACPgL,KAAM,GAER,CACE/K,MAAO,gDACPD,MAAO,oBACPgL,KAAM,GAER,CACE/K,MAAO,qBACPD,MAAO,YACPgL,KAAM,GAER,CACE/K,MAAO,0BACPD,MAAO,cACPgL,KAAM,GAER,CACE/K,MAAO,4BACPD,MAAO,wBACPgL,KAAM,GAER,CACE/K,MAAO,4BACPD,MAAO,wBACPgL,KAAM,GAER,CACE/K,MAAO,eACPD,MAAO,iBACPgL,KAAM,GAER,CACE/K,MAAO,2BACPD,MAAO,aACPgL,KAAM,GAER,CACE/K,MAAO,mBACPD,MAAO,SACPgL,KAAM,GAER,CACE/K,MAAO,oCACPD,MAAO,eACPgL,KAAM,GAER,CACE/K,MAAO,sBACPD,MAAO,aACPgL,KAAM,GAER,CACE/K,MAAO,2BACPD,MAAO,kBACPgL,KAAM,GAER,CACE/K,MAAO,iCACPD,MAAO,cACPgL,KAAM,GAER,CACE/K,MAAO,6BACPD,MAAO,gBACPgL,KAAM,GAER,CACE/K,MAAO,0BACPD,MAAO,eACPgL,KAAM,GAER,CACE/K,MAAO,0BACPD,MAAO,eACPgL,KAAM,GAER,CACE/K,MAAO,8CACPD,MAAO,gBACPgL,KAAM,GAER,CACE/K,MAAO,yCACPD,MAAO,SACPgL,KAAM,GAER,CACE/K,MAAO,2BACPD,MAAO,oBACPgL,KAAM,GAER,CACE/K,MAAO,gCACPD,MAAO,yBACPgL,KAAM,KErKNC,EAAiB,YAAOF,GACxBG,EAA4B,GAC5BC,EAAY,YAAOL,GACnBM,EAAe,YAAOD,GACtBE,EAA0B,GAsoBfC,EApoBK,WAClB,MAA4BjL,mBAAS,IAArC,mBAAOkC,EAAP,KAAegJ,EAAf,KACA,EAAwClL,mBAAS,MAAjD,mBAAOmL,EAAP,KAAqBC,EAArB,KACA,EAAsCpL,mBAAS,MAA/C,mBAAOqL,EAAP,KAAoBC,EAApB,KACA,EAA4CtL,mBAAS,IAArD,mBAAOuL,EAAP,KAAuBC,EAAvB,KACA,EAAkDxL,mBAAS,IAA3D,mBAA0ByL,GAA1B,WAEMC,EAAe,SAAC/L,GACpB2L,EAAe3L,IAmHXgM,EAAgB,uCAAG,0CAAAzH,EAAA,6DACnBnC,EAAM,GACV8I,EAA0BzI,KAAI,SAACC,GAC7B,IAAIuJ,EACAC,EACJ,GAAiB,GAAbxJ,EAAKsI,KAAW,EAClBiB,EAAOE,SACLxC,SAASC,eAAT,oBAAqClH,EAAKzC,QAASD,SAEzCiM,IACVA,EAAO,OAGTC,EAAKC,SAASxC,SAASC,eAAT,oBAAqClH,EAAKzC,QAASD,SAEvDkM,IACRA,EAAK,MAGP,IAAIE,EAAO,CACTC,SAAU3J,EAAK1C,MACfsM,UAAWL,EACXM,UAAWL,EACXM,MAAO,KACPxB,KAAM,GAEE,MAANkB,GAAsB,MAARD,GAChB7J,EAAIS,KAAKuJ,OAIfR,EAAenJ,KAAI,SAACgK,GAClBrK,EAAIS,KAAK4J,MAGD,KADNC,EAAK/C,SAASC,eAAe,WAAW5J,SAE1C0M,EAAK,oBAIK,KADRC,EAAOhD,SAASC,eAAe,uBAAuB5J,SAExD2M,EAAO,KAELC,EAAuB,GAC3BvB,EAAwB5I,KAAI,SAACC,GAC3BkK,EAAqB/J,KAAKH,EAAK1C,UAE7B6M,EAAW,CACbC,YAAaJ,EACbK,UAAW3K,EACX4K,SAAU,CACRC,WAAYd,SAASQ,GACrBI,UAAWH,IAIf3B,EAAiB,YAAOF,GACxBG,EAA4B,GAC5BW,EAAkB,IA1DK,UA4DfqB,EAAOL,EA5DQ,UA6DErI,MACrB,wDACA,CACEa,OAAQ,OACR1E,QAAS,CAAE,eAAgB,oBAC3BuM,KAAMC,KAAKC,UAAUF,KAlEJ,eA6DfxI,EA7De,iBAqEEA,EAASC,OArEX,QAqEfC,EArEe,OAuErBkH,EAAqB,YAAIlH,IAEzByI,IACAhJ,MAAM,2CA1Ee,mDA4ErBQ,QAAQC,MAAM,KAAIC,SA5EG,2DAAH,qDAgFhBsI,EAAgB,uCAAG,8BAAA9I,EAAA,+EAEEC,MACrB,4DAHmB,cAEfE,EAFe,gBAKEA,EAASC,OALX,OAKfC,EALe,OAOrB2G,EAAU,YAAI3G,EAAQ,QAPD,kDASrBC,QAAQC,MAAM,KAAIC,SATG,0DAAH,qDAgBtB,OAHAU,qBAAU,WACR4H,MACC,IAED,sBAAK3H,UAAU,YAAf,UACE,qBAAKA,UAAU,oCAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,oBACA,wBACEwC,KAAK,SACLxC,UAAU,wBACV6B,QAAS,WACPkE,EAAgB,OAJpB,sBAUF,qBAAK/F,UAAU,iBAAf,SACGnD,EAAOE,KAAI,SAACN,GACX,OACE,qBAAKuD,UAAU,wBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,wBACEA,UAAU,6BACV6B,QAAS,WACPkE,EAAgBtJ,IAHpB,SAMGA,EAAME,YAR+BF,EAAME,kBAiB5D,qBAAKqD,UAAU,wBAAf,SACE,qBAAKA,UAAU,YAAf,SACmB,MAAhB8F,EAEC,gCACE,6CACA,iCACE,sBAAK9F,UAAU,WAAf,UACE,uBAAO4H,QAAQ,UAAU5H,UAAU,uBAAnC,6BAGA,qBAAKA,UAAU,SAAf,SACE,uBACEwC,KAAK,OACLxC,UAAU,eACVyC,GAAG,UACHoF,YAAY,kCAIlB,uBACA,gCACE,wDACA,sBAAK7H,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,wBACEwC,KAAK,SACLxC,UAAU,iBACV,iBAAe,QACf,iBAAe,6BAJjB,wBASF,qBAAKA,UAAU,SAAf,SACE,wBACEwC,KAAK,SACLxC,UAAU,kBACV,iBAAe,QACf,iBAAe,0BAJjB,2BAUJ,8BACGwF,EAA0BzI,KAAI,SAAC+K,GAC9B,GAAkB,GAAdA,EAAMxC,KACR,OACE,sBAAKtF,UAAU,OAAf,UACE,8BACE,6BAAK8H,EAAMvN,UAEb,sBAAKyF,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,mBAAGA,UAAU,eAAb,sBAEF,qBAAKA,UAAU,SAAf,SACE,uBACEwC,KAAK,SACLC,GAAE,oBAAeqF,EAAMvN,OACvByF,UAAU,eACV,mBAAiB,iBAGrB,qBAAKA,UAAU,SAAf,SACE,mBAAGA,UAAU,eAAb,sBAEF,qBAAKA,UAAU,SAAf,SACE,uBACEwC,KAAK,SACLC,GAAE,oBAAeqF,EAAMvN,OACvByF,UAAU,eACV,mBAAiB,oBAIvB,yBA5ByB8H,EAAMvN,OAgCnC,IAAIwN,EAAO5C,EAAa6C,MACtB,SAACxD,GAAD,OAAaA,EAAQ7H,QAAUmL,EAAMxN,SAEvC,OACE,sBAAK0F,UAAU,OAAf,UACE,8BACE,6BAAK8H,EAAMvN,UAEb,cAAC,IAAD,CACE0N,aAAa,EACb5F,SAAU,SAAC/H,IA/Uf,SAAC8C,EAAM9C,GAC7B,IAMI4N,EANAxL,EAAM,GACVwJ,EAAenJ,KAAI,SAACgK,GACdA,EAAMJ,UAAYvJ,GACpBV,EAAIS,KAAK4J,MAKXmB,EADW,MAAT5N,EACM,KAEAA,EAAMA,MAEhB6L,EAAkB,GAAD,OACZzJ,EADY,CAEf,CACEiK,SAAUvJ,EACVwJ,UAAW,KACXC,UAAW,KACXC,MAAOoB,EACP5C,KAAM,MA4TkB6C,CAAgBL,EAAMxN,MAAOA,IAE/B,kBAAgB,aAChB8N,QAAQ,qBACRhL,KAAK,kBACL8E,QAAS6F,EAAK7F,UAEhB,yBAdyB4F,EAAMvN,eAqB3C,uBACA,gCACE,sDACA,sBAAKyF,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,wBACEwC,KAAK,SACLxC,UAAU,iBACV,iBAAe,QACf,iBAAe,2BAJjB,wBASF,qBAAKA,UAAU,SAAf,SACE,wBACEwC,KAAK,SACLxC,UAAU,kBACV,iBAAe,QACf,iBAAe,wBAJjB,2BAUJ,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,QAAf,SACE,6BACG2F,EAAwB5I,KAAI,SAAC+K,GAC5B,OACE,oBAEErF,GAAE,2BAAsBqF,EAAMvN,OAC9ByF,UAAU,mBAHZ,SAKG8H,EAAMvN,OALT,uBACuBuN,EAAMvN,eAUrC,qBAAKyF,UAAU,QAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBACE4H,QAAQ,sBACR5H,UAAU,uBAFZ,mCAMA,qBAAKA,UAAU,QAAf,SACE,uBACEwC,KAAK,SACLxC,UAAU,eACVyC,GAAG,qCAOf,wBACED,KAAK,SACLxC,UAAU,kBACV6B,QAAS,WACPyE,KAJJ,+BAUF,cAAC,IAAD,CAAa1L,UAAWkL,EAAc7F,WAAY,WAElD,0BAIF,cAAC,IAAD,CAAarF,UAAWkL,EAAc7F,WAAY,SAUxD,qBACED,UAAU,aACVyC,GAAG,yBACH4F,SAAS,KACT,kBAAgB,8BAChB,cAAY,OALd,SAOE,qBAAKrI,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAcyC,GAAG,8BAA/B,+BAGA,wBACED,KAAK,SACLxC,UAAU,YACV,kBAAgB,QAChB,aAAW,aAGf,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CACEiI,aAAa,EACb5F,SAAU,SAAC/H,GACT+L,EAAa/L,IAEf,kBAAgB,aAChB8N,QAAQ,qBACRhL,KAAK,kBACL8E,QAASqD,EACT9C,GAAG,6BAGP,qBAAKzC,UAAU,eAAf,SACE,wBACEwC,KAAK,SACL,kBAAgB,QAChBxC,UAAU,kBACV6B,QAAS,YAjcW,SAACyG,GACjC,GAAiB,MAAbA,EAAmB,CACrB,IAAIpK,EACJqH,EAAkBxI,KAAI,SAACC,GACjBsL,EAAUhO,OAAS0C,EAAK1C,QAC1BkL,EAA0BrI,KAAKmL,GAC/BpK,EAAQqH,EAAkBgD,QAAQD,GAClCrC,EAAe,UAInB,IADA,IAAIvJ,EAAM,GACDuB,EAAI,EAAGA,EAAIsH,EAAkBnH,OAAQH,IACxCA,GAAKC,GACPxB,EAAIS,KAAKoI,EAAkBtH,IAG/BsH,EAAoB7I,GAkbR8L,CAA0BxC,IAL9B,8BAeR,qBACEhG,UAAU,aACVyC,GAAG,4BACH4F,SAAS,KACT,kBAAgB,iCAChB,cAAY,OALd,SAOE,qBAAKrI,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAcyC,GAAG,iCAA/B,8BAGA,wBACED,KAAK,SACLxC,UAAU,YACV,kBAAgB,QAChB,aAAW,aAGf,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CACEiI,aAAa,EACb5F,SAAU,SAAC/H,GACT+L,EAAa/L,IAEf,kBAAgB,aAChB8N,QAAQ,qBACRhL,KAAK,kBACL8E,QAASsD,MAGb,qBAAKxF,UAAU,eAAf,SACE,wBACEwC,KAAK,SACL,kBAAgB,QAChBxC,UAAU,kBACV6B,QAAS,YA7da,SAACyG,GACnC,GAAiB,MAAbA,EAAmB,CACrB,IAOIpK,EAPAuK,EAAO,GACXvC,EAAenJ,KAAI,SAACgK,GACdA,EAAMJ,UAAY2B,EAAU/N,OAC9BkO,EAAKtL,KAAK4J,MAGdZ,EAAkBsC,GAElBjD,EAA0BzI,KAAI,SAACC,GACzBsL,EAAUhO,OAAS0C,EAAK1C,QAC1BiL,EAAkBpI,KAAKmL,GACvBpK,EAAQsH,EAA0B+C,QAAQD,GAC1CrC,EAAe,UAInB,IADA,IAAIvJ,EAAM,GACDuB,EAAI,EAAGA,EAAIuH,EAA0BpH,OAAQH,IAChDA,GAAKC,GACPxB,EAAIS,KAAKqI,EAA0BvH,IAGvCuH,EAA4B9I,GAuchBgM,CAA4B1C,IALhC,8BAeR,qBACEhG,UAAU,aACVyC,GAAG,uBACH4F,SAAS,KACT,kBAAgB,4BAChB,cAAY,OALd,SAOE,qBAAKrI,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAcyC,GAAG,4BAA/B,+BAGA,wBACED,KAAK,SACLxC,UAAU,YACV,kBAAgB,QAChB,aAAW,aAGf,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CACEiI,aAAa,EACb5F,SAAU,SAAC/H,GACT+L,EAAa/L,IAEf,kBAAgB,aAChB8N,QAAQ,qBACRhL,KAAK,kBACL8E,QAASwD,EACTjD,GAAG,2BAGP,qBAAKzC,UAAU,eAAf,SACE,wBACEwC,KAAK,SACL,kBAAgB,QAChBxC,UAAU,kBACV6B,QAAS,YAnfS,SAACyG,GAC/B,GAAiB,MAAbA,EAAmB,CACrB,IAAIpK,EACJwH,EAAgB3I,KAAI,SAACC,GACfsL,EAAUhO,OAAS0C,EAAK1C,QAC1BqL,EAAwBxI,KAAKmL,GAC7BpK,EAAQwH,EAAgB6C,QAAQD,GAChCrC,EAAe,UAInB,IADA,IAAIvJ,EAAM,GACDuB,EAAI,EAAGA,EAAIyH,EAAgBtH,OAAQH,IACtCA,GAAKC,GACPxB,EAAIS,KAAKuI,EAAgBzH,IAG7ByH,EAAkBhJ,GAoeNiM,CAAwB3C,IAL5B,8BAeR,qBACEhG,UAAU,aACVyC,GAAG,0BACH4F,SAAS,KACT,kBAAgB,+BAChB,cAAY,OALd,SAOE,qBAAKrI,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAcyC,GAAG,+BAA/B,8BAGA,wBACED,KAAK,SACLxC,UAAU,YACV,kBAAgB,QAChB,aAAW,aAGf,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CACEiI,aAAa,EACb5F,SAAU,SAAC/H,GACT+L,EAAa/L,IAEf,kBAAgB,aAChB8N,QAAQ,qBACRhL,KAAK,kBACL8E,QAASyD,MAGb,qBAAK3F,UAAU,eAAf,SACE,wBACEwC,KAAK,SACL,kBAAgB,QAChBxC,UAAU,kBACV6B,QAAS,YA/gBW,SAACyG,GACjC,GAAiB,MAAbA,EAAmB,CACrB,IAAIpK,EACJyH,EAAwB5I,KAAI,SAACC,GACvBsL,EAAUhO,OAAS0C,EAAK1C,QAC1BoL,EAAgBvI,KAAKmL,GACrBpK,EAAQyH,EAAwB4C,QAAQD,GACxCrC,EAAe,UAInB,IADA,IAAIvJ,EAAM,GACDuB,EAAI,EAAGA,EAAI0H,EAAwBvH,OAAQH,IAC9CA,GAAKC,GACPxB,EAAIS,KAAKwI,EAAwB1H,IAGrC0H,EAA0BjJ,GAggBdkM,CAA0B5C,IAL9B,kC,qECjoBR6C,EAAU,wCACVC,EAAO,UAAMD,EAAN,QACPE,EAAa,SAACC,GAAD,gBAAYH,EAAZ,mBAA8BG,IAE3CC,EAAU,UAAMJ,EAAN,WAEHK,EAAY,uCAAG,sBAAArK,EAAA,+EACnBC,MAAMgK,GAASK,MAAK,SAACC,GAC1B,OAAOA,EAAInK,WAFa,2CAAH,qDAMZoK,EAAc,uCAAG,WAAOL,GAAP,SAAAnK,EAAA,+EACrBC,MAAMiK,EAAWC,GAAK,CAC3BrJ,OAAQ,SACR1E,QAAS,CACP,eAAgB,sBAEjBkO,KAAKG,GAAQH,MAAK,SAACC,GACpB,OAAOA,EAAInK,WAPe,2CAAH,sDAWdsK,EAAc,uCAAG,WAAOnM,EAAKoK,GAAZ,SAAA3I,EAAA,+EACrBC,OArBW0K,EAqBMpM,EArBP,UAAwByL,EAAxB,mBAA0CW,IAqB5B,CAC7B7J,OAAQ,MACR1E,QAAS,CACP,eAAgB,oBAElBuM,KAAMC,KAAKC,UAAUF,KACpB2B,KAAKG,GACLH,MAAK,SAAAC,GAAG,OAAIA,EAAInK,UAChBwK,OAAM,SAASrK,GACZ,OAAOA,MAVe,iCApBX,IAACoK,IAoBU,OAAH,wDAcdE,EAAc,uCAAG,WAAOlC,GAAP,SAAA3I,EAAA,+EACrBC,MAAMmK,EAAY,CACvBtJ,OAAQ,OACR1E,QAAS,CACP,eAAgB,oBAElBuM,KAAMC,KAAKC,UAAUF,KACpB2B,KAAKG,GACLH,MAAK,SAAAC,GAAG,OAAIA,EAAInK,UAChBwK,OAAM,SAASrK,GACZ,OAAOA,MAVe,2CAAH,sDAc3B,SAASkK,EAAOtK,GACd,OAAIA,EAAS2K,GACJ3K,EAEFA,EAASC,OAAOkK,MAAK,SAACC,GAAD,OAASQ,QAAQC,OAAOT,M,sCCmDvCU,EAjGQ,SAACpP,GAEpB,MAAoCC,mBAAS,CAACoP,KAAK,GAAGC,MAAM,EAAEC,MAAM,EAAEC,OAAQ,KAA9E,mBAAOC,EAAP,KAAmBC,EAAnB,KAGMC,EAAO,SAACvF,GACV,GAAGA,EAAE,CACL,IAAIwF,GAAY,EAChB,GAAuB,KAApBH,EAAWJ,KAAY,CACtB,IAAIQ,EAAIJ,EAAWJ,KAAKS,cACxBF,EAAYxF,EAAE2F,YAAY3F,EAAE2F,YAAYD,cAAcvN,SAASsN,GAAYzF,EAAE4F,OAAQ5F,EAAE4F,OAAOF,cAAcvN,SAASsN,GAAYzF,EAAE6F,SAAS7F,EAAE6F,SAASH,cAAcvN,SAASsN,GAAYzF,EAAE8F,eAAe9F,EAAE8F,eAAeJ,cAAcvN,SAASsN,GAAYzF,EAAEtI,MAAMsI,EAAEtI,MAAMgO,cAAcvN,SAASsN,GAAYzF,EAAE+F,OAAO/F,EAAE+F,OAAOL,cAAcvN,SAASsN,GAAYzF,EAAEgG,eAAehG,EAAEgG,eAAeN,cAAcvN,SAASsN,KAAYzF,EAAEiG,cAAajG,EAAEiG,aAAaP,cAAcvN,SAASsN,GAEre,IAAIS,GAAW,EACS,IAArBb,EAAWH,QACVgB,EAAgC,IAArBvE,SAAS3B,EAAEQ,OAE1B,IAAI2F,GAAa,EAIjB,MAHyB,KAAtBd,EAAWD,SACVe,EAAanG,EAAEtI,QAAU2N,EAAWD,QAAWpF,EAAE+F,SAAWV,EAAWD,QAAUpF,EAAEgG,iBAAmBX,EAAWD,QAAUpF,EAAEiG,eAAiBZ,EAAWD,QAEtJI,GAAaU,GAAYC,IAIpClL,qBAAU,WACN,GAAGrF,EAAMwQ,OAAO,CAGZ,IAFA,IAAIC,EAASrQ,OAAOsQ,OAAO,GAAI1Q,EAAMwQ,QACjCG,EAAM,GACDpN,EAAI,EAAGA,EAAIkN,EAAO/M,OAAQH,IAC/B,GAAGkN,EAAOlN,GAAGqE,OAAO,CAChB,IAAIgJ,EAAQxQ,OAAOsQ,OAAOD,EAAOlN,GAAGqE,QACjCgJ,IACCA,EAAQA,EAAMC,OAAOlB,IACXjM,OAAS,IACf+M,EAAOlN,GAAGqE,OAASgJ,EACnBD,EAAIlO,KAAKgO,EAAOlN,KAKhCvD,EAAM8Q,cAAa,SAACC,GAAD,mBAAC,eAASA,GAAV,IAAYC,UAAUL,UAGjD,CAAClB,IAqBD,OACI,8BACI,cAAC,IAAD,CACIwB,SALS,SAACrJ,EAAOrE,EAAE2N,KAMnBC,cAAe,CACf7B,MAAO,EACPC,MAAM,GAJV,SAOG,gBAAG6B,EAAH,EAAGA,aAAH,EAAiBzF,aAAjB,EAA+B/D,OAA/B,EAAuCyJ,OAAvC,EAA+CC,cAA/C,OACC,cAACC,EAAA,EAAD,CAAMC,YAAU,EAACP,SAAUG,EAA3B,SACI,cAACK,EAAA,EAAD,UACI,cAACF,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,8BAAhD,SACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACA,cAACP,EAAA,EAAKQ,QAAN,CACAjK,KAAK,OACLpF,KAAK,iBACLsP,WAAY,SAACC,GACS,UAAdA,EAAMC,KACNxC,GAAc,SAACqB,GAAD,mBAAC,eAASA,GAAV,IAAY1B,KAAK4C,EAAMhL,OAAOrH,YAGpDuN,YAAa,yBC+G1BgF,EAnMO,SAACnS,GAEnB,MAAkCC,mBAAS,CAACuQ,OAAO,GAAGQ,UAAU,GAAGvH,OAAO,KAA1E,mBAAOkD,EAAP,KAAkBmE,EAAlB,KA2HA,OAzHAzL,qBAAU,WACN,GAAGrF,EAAM0J,KACF1J,EAAM0J,IAAIqG,YAAY,CACrB,IADqB,EACjBqC,EAAOzF,EAAU6D,OADA,cAEL4B,GAFK,IAErB,IAAI,EAAJ,qBACI,IADkB,IAAdC,EAAa,QACT5O,EAAE,EAAEA,EAAG4O,EAAKzK,OAAOlE,OAAQD,IAC/B,GAAI4O,EAAKzK,OAAOnE,GAAGsM,cAAc/P,EAAM0J,IAAIqG,YAAY,CACnDsC,EAAKzK,OAAOnE,GAAKzD,EAAM0J,IACvB,OANS,8BAUrB,IAVqB,EAUjB4I,EAAQ3F,EAAUqE,UAVD,cAWJsB,GAXI,IAWrB,IAAI,EAAJ,qBACI,IADoB,IAAhBlM,EAAe,QACX7C,EAAE,EAAGA,EAAG6C,EAAMwB,OAAOlE,OAAQH,IACjC,GAAI6C,EAAMwB,OAAOrE,GAAGwM,cAAc/P,EAAM0J,IAAIqG,YAAY,CACpD3J,EAAMwB,OAAOrE,GAAKvD,EAAM0J,IACxB,OAfS,8BAmBrBoH,GAAa,SAACC,GAAD,mBAAC,eAASA,GAAV,IAAaC,UAAUsB,EAAM9B,OAAO4B,UAG3D,CAACpS,EAAM0J,MAsCTrE,qBAAU,WACHrF,EAAMuS,SACFvS,EAAMuS,QAAQrC,gBACbvB,EAAe3O,EAAMuS,QAAQxC,aAAatB,MAAK,SAACC,GAC5C,GAAgB,iCAAbA,EAAG,IAAyC,CAC3C,IAD2C,EACvC8D,EAASpS,OAAOsQ,OAAO,GAAG/D,GADa,cAG3B6F,EAAOxB,WAHoB,IAG3C,2BAAiC,CAAC,IAAzByB,EAAwB,QAC7B,GAAGA,EAAIrM,QAAUpG,EAAMuS,QAAQrC,eAAe,CAC1CuC,EAAI7K,OAAS6K,EAAI7K,OAAOiJ,QAAO,SAAAzG,GAAC,OAAIA,EAAE2F,cAAe/P,EAAMuS,QAAQxC,eACnE,QANmC,8BAS3Ce,EAAa0B,SAMjC,CAACxS,EAAMuS,UAaPlN,qBAAU,WACNmJ,IAAeC,MAAK,SAACC,GACjB,IAAIgE,EAbZ,SAAiB1Q,EAAK2Q,GAQtB,OAPmB3Q,EAAI4Q,QAAO,SAAUC,EAAKC,GAKzC,OAJKD,EAAIC,EAAaH,MAClBE,EAAIC,EAAaH,IAAa,IAElCE,EAAIC,EAAaH,IAAWlQ,KAA5B,2BAAqCqQ,GAArC,IAAmDpQ,KAAMoQ,EAAY,eAAmB,IAAIA,EAAY,UACjGD,IACR,IAMaE,CAAQrE,EAAK,kBACjB1M,EAAM,GACV,IAAK,IAAIkQ,KAAOQ,EACRA,EAAEM,eAAed,IACrBlQ,EAAIS,KAAM,CACN2D,MAAO8L,EAAItK,OAAQ8K,EAAER,KAG7B,IATyB,EASrBe,EAAO,GATc,cAUXvE,GAVW,IAUzB,2BAAkB,CAAC,IAAVwE,EAAS,QACVA,EAAE/C,OACF8C,EAAKC,EAAE/C,QAAU+C,EAAE/C,OAEf+C,EAAEpR,QACNmR,EAAKC,EAAEpR,OAASoR,EAAEpR,QAfD,8BAkBzBgP,GAAa,SAACC,GAAD,mBAAC,eAASA,GAAV,IAAYP,OAAOxO,EAAIgP,UAAUhP,EAAIyH,OAAOrJ,OAAOC,KAAK4S,GAAM5Q,KAAI,SAAA8Q,GAC3E,MAAO,CAAEvT,MAAOuT,EAAGtT,MAAOsT,gBAIpC,IAIE,qBAAK7N,UAAU,kBAAf,SACA,cAAC8N,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,eAAC5B,EAAA,EAAD,WACI,eAACI,EAAA,EAAD,CAAKyB,GAAI,EAAT,UACA,uBAAK,uBACL,oDACA,uBAAK,uBACD,cAACC,EAAA,EAAD,UAEA5G,EAAUqE,UAAUrE,EAAUqE,UAAU3O,KACpC,SAAAmR,GACA,OAAO,eAACD,EAAA,EAAUE,KAAX,CAAgBC,SAAUF,EAAIpN,MAA9B,UACP,cAACmN,EAAA,EAAUI,OAAX,UACI,qBAAKrO,UAAU,QAAf,SACI,qBAAKA,UAAU,UAAf,SAA0BkO,EAAIpN,YAGtC,cAACmN,EAAA,EAAUK,KAAX,UACI,eAACC,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAArB,UACI,gCACI,+BACI,uBACA,uBACA,6CACA,wCACA,sCACA,wCACA,0CACA,gDACA,8CACA,4CAGR,gCACKP,EAAI5L,OAAQ4L,EAAI5L,OAAOvF,KAAI,SAAA4J,GAC5B,OAAO,+BACH,6BAAI,cAAC+H,EAAA,EAAD,CAAQ7M,QAAS,kBAAMnH,EAAMiU,WAAWhI,IAAxC,SAAmD,cAAC,IAAD,QACvD,6BAAI,cAAC+H,EAAA,EAAD,CAAQ7M,QAAS,kBAAMnH,EAAM6H,WAAWoE,IAAxC,SAAmD,cAAC,IAAD,QACvD,6BAAKA,EAAS8D,cACd,6BAAK9D,EAASkE,SACK,IAAlBlE,EAASrB,KAAY,6CAAkB,+CACxC,6BAAKqB,EAAS+D,SACd,6BAAK/D,EAASgE,WACd,6BAAKhE,EAASmE,iBACd,6BAAKnE,EAASoE,eACd,6BAAKpE,EAASnK,cAEf,cApCkC0R,EAAIpN,UAyCtD,UAGP,eAACyL,EAAA,EAAD,CAAKyB,GAAI,EAAT,UACI,uBAAK,uBACL,yCACA,uBAAK,uBACL,cAAC,EAAD,CAAgB7J,OAAQkD,EAAUlD,OAAQ+G,OAAQ7D,EAAU6D,OAAQ7D,UAAWA,EAAWmE,aAAcA,IACxG,uBAAK,uBACL,eAACkD,EAAA,EAAD,CAAQ7M,QAAS,kBAAMnH,EAAMgP,kBAA7B,UAA+C,cAAC,IAAD,IAA/C,kC,0BCmQLkF,EA/bM,SAAClU,GAElB,MAAkCC,mBAASD,EAAMsC,KAAK2N,SAAUjQ,EAAMsC,KAAK2N,SAAUkE,WAAWvQ,MAAM,KAAK,IAA3G,mBAAOwQ,EAAP,KAAkBC,EAAlB,KACA,EAAwCpU,mBAASD,EAAMsC,KAAKgS,aAAatU,EAAMsC,KAAKgS,aAAa,IAAjG,mBAAOA,EAAP,KAAqBC,EAArB,KACA,EAA4BtU,mBAAS,CAACuU,SAAS,GAAGC,gBAAgB,KAAlE,mBAAOC,EAAP,KAAeC,EAAf,KAGMC,EAAiB,WACnBL,EAAgB,GAAD,mBAAKD,GAAL,CAAkBI,MAGrCrP,qBAAU,cACR,CAACiP,IAGH,IAAMO,EAAoB,SAAC3C,EAAI4C,EAAIvR,GAC/B,IAAIkN,EAASrQ,OAAOsQ,OAAO,GAAG4D,GAClB,aAARpC,IAAoBzB,EAAOlN,GAAGiR,SAAWzI,SAAS+I,IAC1C,oBAAR5C,IAA2BzB,EAAOlN,GAAGkR,gBAAkBK,GAC3DP,EAAgB9D,IAGdsE,EAA0B,SAAC7C,EAAI4C,GACjC,IAAIzH,EAAOjN,OAAOsQ,OAAO,GAAGgE,GACjB,aAARxC,EAAoB7E,EAAKmH,SAASzI,SAAS+I,GAC9B,oBAAR5C,IAA2B7E,EAAKoH,gBAAgBK,GACxDH,EAAUtH,IAoEdhI,qBAAU,WACNgP,EAAarU,EAAMsC,KAAK2N,SAAUjQ,EAAMsC,KAAK2N,SAAUkE,WAAWvQ,MAAM,KAAK,IAC7E2Q,EAAgBvU,EAAMsC,KAAKgS,aAAatU,EAAMsC,KAAKgS,aAAa,MAClE,CAACtU,EAAMsC,OAET,IAAM0S,EAAmB,SAACC,EAAYC,EAAavJ,EAAcwJ,GAC7D,OACA,eAAC5D,EAAA,EAAK6D,OAAN,CAAa1S,KAAMyS,EAAO1N,aAAcwN,EAAYrV,MAAOsV,EAAavN,SAAUgE,EAAlF,UACI,wBAAQ0J,SAAyB,OAAfJ,EAAqBrV,MAAO,OAC9C,wBAAQyV,SAAyB,YAAfJ,EAA0BrV,MAAO,UAAnD,qBACA,wBAAQyV,SAAyB,uBAAfJ,EAAqCrV,MAAO,qBAA9D,gCACA,wBAAQyV,SAAyB,eAAfJ,EAA6BrV,MAAO,aAAtD,wBACA,wBAAQyV,SAAyB,8BAAfJ,EAAyCrV,MAAO,4BAAlE,uCACA,wBAAQyV,SAAyB,6BAAfJ,EAA2CrV,MAAO,2BAApE,sCACA,wBAAQyV,SAAyB,cAAfJ,EAA4BrV,MAAO,YAArD,uBACA,wBAAQyV,SAAyB,UAAfJ,EAAwBrV,MAAO,QAAjD,mBACA,wBAAQyV,SAAyB,UAAfJ,EAAwBrV,MAAO,QAAjD,mBACA,wBAAQyV,SAAyB,UAAfJ,EAAwBrV,MAAO,QAAjD,mBACA,wBAAQyV,SAAyB,WAAfJ,EAAyBrV,MAAO,SAAlD,oBACA,wBAAQyV,SAAyB,gCAAfJ,EAA2CrV,MAAO,8BAApE,yCACA,wBAAQyV,SAAyB,+BAAfJ,EAA0CrV,MAAO,6BAAnE,4CAiBR,OACI,cAAC,IAAD,CACI0V,oBAAkB,EAClBrE,SA7Fa,SAACrJ,KA8FduJ,cAhBe,WACnB,IAAItO,EAAC,2BAAO7C,EAAMsC,MAAb,IACD6Q,EAAEnT,EAAMmQ,OAAO,SAAS,QACxBoF,QAAQ,GACRC,YAAY,KACZC,cAAc,KAIlB,OAFA5S,EAAE+H,KAAF,UAAY/H,EAAE+H,MACd/H,EAAE6S,UAA4B,IAAhB7S,EAAE6S,UAAgB,KAAK,KAC9B7S,EAOY8S,GAHnB,SAMC,gBAAGvE,EAAH,EAAGA,aAAczF,EAAjB,EAAiBA,aAAc2F,EAA/B,EAA+BA,cAAe1J,EAA9C,EAA8CA,OAA9C,EAAsDyJ,OAAtD,OACD,eAACE,EAAA,EAAD,CAAMC,YAAU,EAACP,SAAUG,EAA3B,UACI,6BAAKpR,EAAMoG,QACX,eAACmL,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,8BAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,4BAGA,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACA,cAACP,EAAA,EAAKQ,QAAN,CACAjK,KAAK,OACLlI,MAAOgI,EAAOsI,eACdxN,KAAK,iBACLiF,SAAUgE,EACVwB,YAAavF,EAAOsI,eAAetI,EAAOsI,eAAe,iCAI7D,eAACqB,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,2BAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,yBAGA,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACA,cAACP,EAAA,EAAKQ,QAAN,CACAjK,KAAK,OACLpF,KAAK,cACLiF,SAAUgE,EACV/L,MAAOgI,EAAOmI,YACd5C,YAAavF,EAAOmI,YAAYnI,EAAOmI,YAAY,8BAIvD,eAACwB,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,0BAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,uBAGA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACP,EAAA,EAAKuE,MAAN,CACAhO,KAAK,QACLjI,MAAM,QACN6C,KAAK,YACL9C,MAAO,KACPmW,QAA4B,OAAnBnO,EAAO8N,UAChB3N,GAAG,+BACHJ,SAAUgE,IAEV,cAAC4F,EAAA,EAAKuE,MAAN,CACAhO,KAAK,QACLjI,MAAM,KACN6C,KAAK,YACL9C,MAAO,KACPmW,QAA4B,OAAnBnO,EAAO8N,UAChB3N,GAAG,+BACHJ,SAAUgE,UAKlB,eAAC4F,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,uBAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,oBAGA,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACA,cAACP,EAAA,EAAKQ,QAAN,CAAcjK,KAAK,OACnBlI,MAAOgI,EAAOoI,OACdtN,KAAK,SACLiF,SAAUgE,EACVwB,YAAavF,EAAOoI,OAAOpI,EAAOoI,OAAO,yBAI7C,eAACuB,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,qBAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,2CAGA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACP,EAAA,EAAKuE,MAAN,CACAhO,KAAK,QACLjI,MAAM,SACN6C,KAAK,IACL9C,MAAO,SACPmW,QAAoB,WAAXnO,EAAOuL,EAChBpL,GAAG,6BACHJ,SAAUgE,IAEV,cAAC4F,EAAA,EAAKuE,MAAN,CACAhO,KAAK,QACLlI,MAAO,QACP8C,KAAK,IACL7C,MAAM,QACNkW,QAAoB,UAAXnO,EAAOuL,EAChBpL,GAAG,6BACHJ,SAAUgE,UAKJ,WAAb/D,EAAOuL,EACJ,eAAC5B,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,gBAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,SAA0B,8CAC1B,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SAEIkD,EAAiBpN,EAAOuI,OAAOvI,EAAOuI,OAAO,GAAGvI,EAAOuI,OAAQxE,EAAa,eAInF,KAGS,UAAb/D,EAAOuL,EACR,gCACA,eAAC5B,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAQsM,UAAU,gBAAjD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,SAA0B,sDAC1B,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SAEKkD,EAAiBpN,EAAOwI,eAAexI,EAAOwI,eAAe,GAAGxI,EAAOwI,eAAezE,EAAa,uBAK5G,eAAC4F,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,gBAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,SAA0B,oDAC1B,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SAEKkD,EAAiBpN,EAAOyI,aAAazI,EAAOyI,aAAa,GAAGzI,EAAOyI,aAAa1E,EAAa,qBAKtG,eAAC4F,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,sBAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,SACI,6CAEJ,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACA,cAACP,EAAA,EAAKQ,QAAN,CAAcjK,KAAK,OACnBH,SAAUgE,EACVjJ,KAAK,QACLyK,YAAavF,EAAO9F,MAAM8F,EAAO9F,MAAM,2BAGpC,KAGP,eAACyP,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,sBAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYjE,GAAG,SAASkE,QAAM,EAAC/D,GAAI,EAAnC,kBAGA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACP,EAAA,EAAKuE,MAAN,CACAhO,KAAK,QACLjI,MAAM,cACN6C,KAAK,OACL9C,MAAO,IACPmW,QAAyB,MAAhBnO,EAAOgD,KAChB7C,GAAG,yBACHJ,SAAUgE,IAEV,cAAC4F,EAAA,EAAKuE,MAAN,CACAhO,KAAK,QACLH,SAAUgE,EACVjJ,KAAK,OACL7C,MAAM,gBACND,MAAO,IACPmI,GAAG,2BACHgO,QAAyB,MAAhBnO,EAAOgD,OAEhB,cAAC2G,EAAA,EAAKuE,MAAN,CACAhO,KAAK,QACLlI,MAAO,IACPC,MAAM,QACN8H,SAAUgE,EACVjJ,KAAK,OACLqF,GAAG,4BACHgO,QAAyB,MAAhBnO,EAAOgD,aAKP,MAAhBhD,EAAOgD,KACR,eAAC2G,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,0BAAhD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,IACT,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAAC+B,EAAA,EAAD,WACI,gCACI,+BACI,wDACA,6CACA,4BAGR,kCACCS,EAAajS,KAAI,SAACQ,EAAEU,GACjB,OACI,mCACA,+BACI,6BACI,cAACgO,EAAA,EAAKQ,QAAN,CACAjK,KAAK,SACLlI,MAAOiD,EAAE2R,SACTxC,WAAY,SAACC,GACS,UAAdA,EAAMC,KACN2C,EAAkB,WAAW5C,EAAMhL,OAAOrH,MAAM2D,IAGxDoE,SAAUgE,EACVwB,YAAatK,EAAE2R,SAAW3R,EAAE2R,SAAS,UAEzC,6BACI,cAACjD,EAAA,EAAKQ,QAAN,CAAcjK,KAAK,OACnBkK,WAAY,SAACC,GACS,UAAdA,EAAMC,KACN2C,EAAkB,kBAAkB5C,EAAMhL,OAAOrH,MAAM2D,IAG/D4J,YAAatK,EAAE4R,gBAAkB5R,EAAE4R,gBAAgB,MACnDuB,UAAQ,MAEZ,6BACI,cAAChC,EAAA,EAAD,CAAQ1O,UAAU,iBAAiB6B,QAAS,kBAtUtD,SAAC5D,GACvB,IAAIkN,EAASrQ,OAAOsQ,OAAO,GAAG4D,GAC9B7D,EAAOwF,OAAO1S,EAAE,GAChBgR,EAAgB9D,GAmUkEyF,CAAkB3S,IAApE,SAAyE,cAAC,IAAD,UAxBxEV,EAAE2R,eA8BnB,+BACI,6BACI,cAACjD,EAAA,EAAKQ,QAAN,CACAjK,KAAK,SACLpF,KAAK,cACLiF,SAAU,SAACsK,GACP8C,EAAwB,WAAW9C,EAAMhL,OAAOrH,OAChD+L,EAAasG,IAEjBrS,MAAOgI,EAAO4N,YACdrI,YAAY,qBAEhB,6BACI,cAACoE,EAAA,EAAKQ,QAAN,CACAC,WAAY,SAACC,GACS,UAAdA,EAAMC,MACN0C,IACAtD,EAAc,gBAAiB,IAAI,GACnCA,EAAc,cAAe,IAAI,KAGzCxJ,KAAK,OACLpF,KAAK,gBACLiF,SAAU,SAACsK,GACP8C,EAAwB,kBAAkB9C,EAAMhL,OAAOrH,OACvD+L,EAAasG,IAEjBrS,MAAOgI,EAAO6N,cACdtI,YAAY,2BAEhB,6BACI,cAAC6G,EAAA,EAAD,CAAQ1O,UAAU,cAAc6B,QAAS,WACrCyN,IACAtD,EAAc,gBAAiB,IAAI,GACnCA,EAAc,cAAe,IAAI,IAHrC,SAKC,cAAC,IAAD,UApCA,mBA0CP,KAEd,eAACC,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,yBAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,sBAGA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACCsC,EAAU/R,KAAI,SAAC8T,EAAG5S,GACf,OACI,eAAC6S,EAAA,EAAD,CAAeC,QAAQ,UAAvB,UACKF,EACD,sBAAM7Q,UAAU,kBAAkB6B,QAAS,YA3X5C,SAAC5D,GACpB,IAAIkN,EAASrQ,OAAOsQ,OAAO,GAAG0D,GAC9B3D,EAAOwF,OAAO1S,EAAE,GAChB8Q,EAAa5D,GAwXuD6F,CAAe/S,IAA/D,SAAoE,4BAAG,cAAC,IAAD,UAF/DA,MAOpB,cAACgO,EAAA,EAAKQ,QAAN,CACAjK,KAAK,OACLkK,WAAY,SAACC,GAhaL,IAACsE,EAiaa,UAAdtE,EAAMC,KACoC,KAAvCD,EAAMhL,OAAOrH,MAAM4W,QAAQ,IAAI,MAlajCD,EAmaetE,EAAMhL,OAAOrH,MAnanByU,EAAa,GAAD,mBAAKD,GAAL,CAAemC,KAoajCjF,EAAc,UAAW,IAAI,KAIzC5O,KAAK,UACL9C,MAAOgI,EAAO2N,QACd5N,SAAUgE,EACVwB,YAAY,kCAIhB,cAACoE,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAA/B,SACI,cAACuM,EAAA,EAAD,CAAKC,GAAI,CAAE2E,KAAM,GAAI5P,OAAQ,GAA7B,SACA,cAACmN,EAAA,EAAD,CAAQlM,KAAK,SAASX,QAAS,kBA3YjB,SAACS,GACvB,IAAI8O,EAAM,CACN3G,YAAYnI,EAAOmI,YACnBI,OAAmB,WAAXvI,EAAOuL,EAAavL,EAAOuI,OAAO,KAC1CF,SAAUmE,EAAU/P,KAAK,KACzBvC,MAAmB,UAAX8F,EAAOuL,EAAYvL,EAAO9F,MAAM,KACxCsO,eAA2B,UAAXxI,EAAOuL,EAAYvL,EAAOwI,eAAe,KACzDC,aAAyB,UAAXzI,EAAOuL,EAAYvL,EAAOyI,aAAa,KACrDH,eAAetI,EAAOsI,eACtBtF,KAAMmB,SAASnE,EAAOgD,MACtBoF,OAAOpI,EAAOoI,OACd0F,UAA8B,OAAnB9N,EAAO8N,UAAkB,GAAI9N,EAAO8N,UAAkB,GACjEpB,aAA2B,MAAd1M,EAAOgD,KAAW0J,EAAa,GAC5CvK,IAAInC,EAAOmC,IACXC,IAAIpC,EAAOoC,KAEW,OAAvB0M,EAAIxG,gBACwC,KAAvCwG,EAAIxG,eAAesG,QAAQ,IAAI,IADRxW,EAAM2W,OAAO,QAAQ,4CAG7B,WAAhB3W,EAAMoG,MACLyI,EAAe7O,EAAMsC,KAAKyN,YAAY2G,GAAKjI,MAAK,SAACC,GAC1CA,IACIA,EAAG,MACF1O,EAAM2W,OAAO,QAAQjI,EAAG,MAAU8H,QAAQ,kBAAkB,MAG5DxW,EAAM4W,aAAalI,EAAI,UACvB1O,EAAM2W,OAAO,UAAU,sCAKf,mBAAhB3W,EAAMoG,QACVsQ,EAAI3M,IAAM,EACV2M,EAAI1M,IAAM,IACVgF,EAAe0H,GAAKjI,MAAK,SAACC,GACnBA,IACIA,EAAG,MACF1O,EAAM2W,OAAO,QAAQjI,EAAG,MAAU8H,QAAQ,kBAAkB,MAG5DxW,EAAM4W,aAAalI,EAAI,kBACvB1O,EAAM2W,OAAO,UAAU,sCAiWEE,CAAkBjP,IAAvD,SAAiE5H,EAAMoG,mB,SC9WxE0Q,GAzEQ,WAEnB,MAAwC7W,mBAAS,IAAjD,mBAAO8W,EAAP,KAAqBC,EAArB,KACA,EAAwB/W,mBAAS,IAAjC,mBAAOgX,EAAP,KAAaC,EAAb,KACA,EAAsBjX,mBAAS,IAA/B,mBAAOyJ,EAAP,KAAYyN,EAAZ,KACA,EAA8BlX,mBAAS,IAAvC,mBAAOsS,EAAP,KAAgB6E,EAAhB,KACA,EAAwBnX,mBAAS,CAACL,OAAM,EAAMyX,aAAa,KAA3D,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,EAAQ,CAAC3X,OAAM,EAAMyX,aAAa,MAE5D,EAA6BpX,mBAAS,IAAtC,mBAAOwX,EAAP,KAAeC,EAAf,KACA,EAAsCzX,mBAAS,MAA/C,mBAAO0X,EAAP,KAAoBC,EAApB,KA8BA,OACI,sBAAKtS,UAAU,eAAf,UACI,cAAC,EAAD,CAAeqS,YAAaA,EAAa3I,eAjB1B,WACnBgI,EAAgB,CAAC7G,OAAO,GAAGJ,YAAY,GAAGG,eAAe,GAAGF,OAAO,GAAGpF,KAAK,EAAE8K,UAAU,OACvFgC,EAAW,kBACXR,EAAQ,oBAcqE3E,QAASA,EAAS0B,WAlChF,SAAC4D,GAAD,OAAaN,EAAQ,CAAC3X,OAAM,EAAKyX,aAAaQ,KAkC2DV,OAAQA,EAAQzN,IAAKA,EAAK7B,WAxBpI,SAACvF,GACfmC,QAAQqT,IAAI,oBAAoBL,GAChCT,EAAgB1U,GAChBoV,EAAW,UACXR,EAAQ,sBAqBJ,qBAAK5R,UAAW,kBAAkB2R,EAAlC,SACI,sBAAK3R,UAAW,qCAAsC2R,EAAtD,UACI,wBAAQ9P,QAAS,kBAAM+P,EAAQ,KAAK5R,UAAU,mBAA9C,eACA,qBAAKA,UAAU,qBAAf,SACA,cAAC,EAAD,CAAcqR,OAnCf,SAACoB,EAAE3N,GACP,UAAJ2N,EAAYC,IAAMtT,MAAM0F,GACf,YAAJ2N,EAAcC,IAAMC,QAAQ7N,GAC/B4N,YAAM5N,IAgC+BhE,MAAOqR,EAAStH,OAAQ4G,EAAa5G,OAAQ7N,KAAMyU,EAAcH,aAhB3F,SAACtU,EAAK4V,GACX,WAARA,EAAiBf,EAAO7U,GACX,mBAAR4V,GACJN,EAAetV,GAEnB0U,EAAgB,IAChBE,EAAQ,KAU+HF,gBAAiBA,WAIpJ,eAACmB,EAAA,EAAD,CAAOb,KAAMA,EAAK1X,MAAOwY,OAAQZ,EAAjC,UACI,cAACW,EAAA,EAAMxE,OAAP,CAAc0E,aAAW,EAAzB,SACA,cAACF,EAAA,EAAMG,MAAP,kCAEA,eAACH,EAAA,EAAMvE,KAAP,oEAA6D0D,EAAKD,aAAatH,YAA/E,OACA,eAACoI,EAAA,EAAMI,OAAP,WACA,cAACvE,EAAA,EAAD,CAAQqC,QAAQ,YAAYlP,QAASqQ,EAArC,sBAGA,cAACxD,EAAA,EAAD,CAAQqC,QAAQ,SAASlP,QAAS,WAC9BiQ,EAAWE,EAAKD,cAChBG,KAFJ,qCAQJ,cAAC,IAAD,QC7ENrJ,GAAU,oCACVC,GAAO,UAAMD,GAAN,QASAqK,IARI,UAAMrK,GAAN,iBAQI,uCAAG,sBAAAhK,EAAA,+EACfC,MAAMgK,IAASK,MAAK,SAACC,GAC1B,OAAOA,EAAInK,WAFS,2CAAH,sDCgENkU,GArEG,SAACzY,GAEf,MAA0BC,mBAAS,IAAnC,mBAAOyY,EAAP,KAAcC,EAAd,KAwBA,OANAtT,qBAAU,WACFmT,KAAW/J,MAAK,SAACmK,GACbD,EAASC,QAEnB,IAGE,cAACxF,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,eAAC5B,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,CAAKyB,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,UAEAmF,EAAMrW,KACF,SAAAmR,GACA,OAAO,eAACD,EAAA,EAAUE,KAAX,CAAgBC,SAAUF,EAAIvR,OAA9B,UACP,cAACsR,EAAA,EAAUI,OAAX,UACI,qBAAKrO,UAAU,QAAf,SACI,qBAAKA,UAAU,UAAf,SAA0BkO,EAAIvR,aAGtC,cAACsR,EAAA,EAAUK,KAAX,UACI,eAACC,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAArB,UACI,gCACI,+BACI,oBAAIzO,UAAU,iBACd,qDAGR,gCACKkO,EAAI7G,UAAUtK,KAAI,SAAA4J,GACnB,OAAO,+BACH,oBAAI3G,UAAU,eAAd,SAA6B,cAAC0O,EAAA,EAAD,CAAQqC,QAAQ,QAAQlP,QAAS,kBAAMnH,EAAM6H,WAAWoE,IAAxD,SAAmE,cAAC,IAAD,QAChG,6BAAKA,EAASiE,wCAUtC,cAAC2B,EAAA,EAAD,CAAKyB,GAAI,UCzCVuF,GApBK,WAChB,MAAwC5Y,mBAAS,IAAjD,mBAAqB+W,GAArB,WACA,EAAwB/W,mBAAS,IAAjC,mBAAOgX,EAAP,KAAaC,EAAb,KAOA,OACI,sBAAK5R,UAAU,eAAf,UACI,cAAC,GAAD,CAAWuC,WAPD,SAACvF,GACf0U,EAAgB1U,GAChB4U,EAAQ,sBAMJ,qBAAK5R,UAAU,iBAAf,SACA,qBAAKA,UAAW,qCAAsC2R,UCd5D6B,GAAgB,CACpB,CAAElZ,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,WAGxBkZ,GAAgB,CAClB,CAAEnZ,MAAO,OAAQC,MAAO,OAAQ+K,KAAM,KACtC,CAAEhL,MAAO,MAAOC,MAAO,MAAO+K,KAAM,KACpC,CAAEhL,MAAO,WAAYC,MAAO,WAAY+K,KAAM,KAC9C,CAAEhL,MAAO,KAAMC,MAAO,KAAM+K,KAAM,KAClC,CAAEhL,MAAO,OAAQC,MAAO,OAAQ+K,KAAM,KACtC,CAAEhL,MAAO,QAASC,MAAO,QAAS+K,KAAM,KACxC,CAAEhL,MAAO,MAAOC,MAAO,MAAO+K,KAAM,MAGlCoO,GAAQ,UAAOD,IAEfE,GAAe,GA4VJC,GA1VG,WAChB,MAAsCjZ,mBAAS,MAA/C,mBAAOqL,EAAP,KAAoBC,EAApB,KACA,EAA0BtL,mBAAS+Y,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4CnZ,mBAAS,IAArD,mBAAOuL,EAAP,KAAuBC,EAAvB,KAEME,EAAe,SAAC/L,GACpB2L,EAAe3L,IAgIjB,OAFAyF,qBAAU,cAAU,IAGlB,gCACE,qBAAKC,UAAU,GAAf,SACE,+CAEF,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,wBACEwC,KAAK,SACLxC,UAAU,iBACV,iBAAe,QACf,iBAAe,iBAJjB,wBASF,qBAAKA,UAAU,SAAf,SACE,wBACEwC,KAAK,SACLxC,UAAU,kBACV,iBAAe,QACf,iBAAe,gBAJjB,2BAWJ,+BACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,kDACA,uBACEA,UAAU,eACVwC,KAAK,OACLC,GAAG,UACH,mBAAiB,iBAGpBkR,GAAa5W,KAAI,SAAC+K,GACjB,MAAkB,KAAdA,EAAMxC,KAEN,sBAAKtF,UAAU,OAAf,UACE,8BACE,6BAAK8H,EAAMvN,UAEb,sBAAKyF,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,mBAAGA,UAAU,eAAb,sBAEF,qBAAKA,UAAU,SAAf,SACE,uBACEwC,KAAK,SACLC,GAAE,oBAAeqF,EAAMvN,OACvByF,UAAU,eACV,mBAAiB,iBAGrB,qBAAKA,UAAU,SAAf,SACE,mBAAGA,UAAU,eAAb,sBAEF,qBAAKA,UAAU,SAAf,SACE,uBACEwC,KAAK,SACLC,GAAE,oBAAeqF,EAAMvN,OACvByF,UAAU,eACV,mBAAiB,oBAIvB,yBA5ByB8H,EAAMvN,OAiCjC,sBAAKyF,UAAU,OAAf,UACE,8BACE,6BAAK8H,EAAMvN,UAEb,cAAC,IAAD,CACE0N,aAAa,EACb5F,SAAU,SAAC/H,IA/MP,SAAC8C,EAAM9C,GAC7B,IAMI4N,EANAxL,EAAM,GACVwJ,EAAenJ,KAAI,SAACgK,GACdA,EAAMJ,UAAYvJ,GACpBV,EAAIS,KAAK4J,MAKXmB,EADW,MAAT5N,EACM,KAEAA,EAAMA,MAEhB6L,EAAkB,GAAD,OACZzJ,EADY,CAEf,CACEiK,SAAUvJ,EACVwJ,UAAW,KACXC,UAAW,KACXC,MAAOoB,EACP5C,KAAM,QA4LU6C,CAAgBL,EAAMvN,MAAOD,IAE/B,kBAAgB,aAChB8N,QAAQ,qBACRhL,KAAK,kBACL8E,QAASsR,KAEX,yBAdyB1L,EAAMvN,iBAsB7C,wBACEiI,KAAK,GACLxC,UAAU,kBACV6B,QAAS,YAvJU,WACvB,IAAInF,EAAM,GACViX,GAAa5W,KAAI,SAACC,GAChB,IAAIuJ,EACAC,EACJ,GAAiB,KAAbxJ,EAAKsI,KAAa,EACpBiB,EAAOE,SACLxC,SAASC,eAAT,oBAAqClH,EAAKzC,QAASD,SAEzCiM,IACVA,EAAO,OAGTC,EAAKC,SAASxC,SAASC,eAAT,oBAAqClH,EAAKzC,QAASD,SAEvDkM,IACRA,EAAK,MAGP,IAAIE,EAAO,CACTC,SAAU3J,EAAKzC,MACfqM,UAAWL,EACXM,UAAWL,EACXM,MAAO,KACPxB,KAAM,KAEE,MAANkB,GAAsB,MAARD,GAChB7J,EAAIS,KAAKuJ,OAIfR,EAAenJ,KAAI,SAACgK,GAClBrK,EAAIS,KAAK4J,MAEX,IAAIC,EAAK/C,SAASC,eAAe,WAAW5J,MAClC,IAAN0M,IACFA,EAAK,oBAMP/C,SAASC,eAAe,WAAW5J,MAAQ,GAC3CoZ,GAAQ,UAAOD,IACfK,EAASJ,IACTC,GAAe,GA2GTrN,IAJJ,oBAcA,qBACEtG,UAAU,aACVyC,GAAG,eACH4F,SAAS,KACT,kBAAgB,oBAChB,cAAY,OALd,SAOE,qBAAKrI,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAcyC,GAAG,oBAA/B,+BAGA,wBACED,KAAK,SACLxC,UAAU,YACV,kBAAgB,QAChB,aAAW,aAGf,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CACEiI,aAAa,EACb5F,SAAU,SAAC/H,GACT+L,EAAa/L,IAEf,kBAAgB,aAChB8N,QAAQ,qBACRhL,KAAK,kBACL8E,QAAS2R,EACTpR,GAAG,4BAGP,qBAAKzC,UAAU,eAAf,SACE,wBACEwC,KAAK,SACL,kBAAgB,QAChBxC,UAAU,kBACV6B,QAAS,YA1PC,SAACyG,GACvB,GAAiB,MAAbA,EAAmB,CACrB,IAAIpK,EACJ2V,EAAM9W,KAAI,SAACC,GACLsL,EAAUhO,OAAS0C,EAAK1C,QAC1BqZ,GAAaxW,KAAKmL,GAClBpK,EAAQ2V,EAAMtL,QAAQD,GACtBrC,EAAe,MAEf6N,EAASJ,QAIb,IADA,IAAIhX,EAAM,GACDuB,EAAI,EAAGA,EAAI4V,EAAMzV,OAAQH,IAC5BA,GAAKC,GACPxB,EAAIS,KAAK0W,EAAM5V,IAGnB6V,EAASpX,IAyOGqX,CAAgB/N,IALpB,8BAeR,qBACEhG,UAAU,aACVyC,GAAG,gBACH4F,SAAS,KACT,kBAAgB,oBAChB,cAAY,OALd,SAOE,qBAAKrI,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAcyC,GAAG,oBAA/B,8BAGA,wBACED,KAAK,SACLxC,UAAU,YACV,kBAAgB,QAChB,aAAW,aAGf,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CACEiI,aAAa,EACb5F,SAAU,SAAC/H,GACT+L,EAAa/L,IAEf,kBAAgB,aAChB8N,QAAQ,qBACRhL,KAAK,kBACL8E,QAASyR,OAGb,qBAAK3T,UAAU,eAAf,SACE,wBACEwC,KAAK,SACL,kBAAgB,QAChBxC,UAAU,kBACV6B,QAAS,YApRG,SAACyG,GACzB,GAAiB,MAAbA,EAAmB,CACrB,IAOIpK,EAPAuK,EAAO,GACXvC,EAAenJ,KAAI,SAACgK,GACdA,EAAMJ,UAAY2B,EAAU/N,OAC9BkO,EAAKtL,KAAK4J,MAGdZ,EAAkBsC,GAElBkL,GAAa5W,KAAI,SAACC,GACZsL,EAAUhO,OAAS0C,EAAK1C,QAC1BuZ,EAAM1W,KAAKmL,GAEXpK,EAAQyV,GAAapL,QAAQD,GAC7BrC,EAAe,UAInB,IADA,IAAIvJ,EAAM,GACDuB,EAAI,EAAGA,EAAI0V,GAAavV,OAAQH,IACnCA,GAAKC,GACPxB,EAAIS,KAAKwW,GAAa1V,IAG1B0V,GAAejX,GA6PHsX,CAAkBhO,IALtB,kCCxWR6C,GAAU,qCACVC,GAAO,UAAMD,GAAN,QACPoL,GAAc,UAAMpL,GAAN,eACdI,GAAU,UAAMJ,GAAN,WAIVqL,GAAW,SAACC,EAAMxN,EAAUrB,EAAM8O,GAAvB,gBACZvL,GADY,kBACKsL,EADL,YACaxN,EADb,YACyBrB,EADzB,YACiC8O,IAErCzM,GAAgB,uCAAG,sBAAA9I,EAAA,+EACvBC,MAAMmV,IAAgB9K,MAAK,SAACC,GACjC,OAAOA,EAAInK,WAFiB,2CAAH,qDAMhBoV,GAAS,uCAAG,sBAAAxV,EAAA,+EAChBC,MAAMgK,IAASK,MAAK,SAACC,GAC1B,OAAOA,EAAInK,WAFU,2CAAH,qDAMTqV,GAAW,uCAAG,WAAOtL,GAAP,SAAAnK,EAAA,+EAClBC,OAlBWyV,EAkBMvL,EAlBP,UAAYH,GAAZ,mBAA8B0L,IAkBjB,CAC5B5U,OAAQ,SACR1E,QAAS,CACP,eAAgB,sBAGjBkO,KAAKG,IACLH,MAAK,SAACC,GACL,OAAOA,EAAInK,WATU,iCAjBR,IAACsV,IAiBO,OAAH,sDAaXC,GAAkB,uCAAG,WAAOxL,GAAP,SAAAnK,EAAA,+EACzBC,OA9BmByV,EA8BMvL,EA9BP,UAAYH,GAAZ,0BAAqC0L,IA8BxB,CACpC5U,OAAQ,SACR1E,QAAS,CACP,eAAgB,sBAGjBkO,KAAKG,IACLH,MAAK,SAACC,GACL,OAAOA,EAAInK,WATiB,iCA7BP,IAACsV,IA6BM,OAAH,sDAalBE,GAAO,uCAAG,WACrBN,EACAxN,EACArB,EACAoP,EACAN,GALqB,SAAAvV,EAAA,+EAOdC,MAAMoV,GAASC,EAAMxN,EAAUrB,EAAM8O,GAAgB,CAC1DzU,OAAQ,OACR1E,QAAS,CACP,eAAgB,oBAElBuM,KAAMC,KAAKC,UAAUgN,KAEpBvL,KAAKG,IACLH,MAAK,SAACC,GAAD,OAASA,EAAInK,UAClBwK,OAAM,SAAUrK,GACfD,QAAQqT,IAAI,QAASpT,OAjBJ,2CAAH,8DAqBPuV,GAAW,uCAAG,WAAOD,GAAP,SAAA7V,EAAA,+EAClBC,MAAMmK,GAAY,CACvBtJ,OAAQ,OACR1E,QAAS,CACP,eAAgB,oBAElBuM,KAAMC,KAAKC,UAAUgN,KACpBvL,MAAK,SAACC,GACP,OAAOA,EAAInK,WARY,2CAAH,sDAYX2V,GAAW,uCAAG,WAAOnS,EAAG+E,GAAV,SAAA3I,EAAA,+EAClBC,OA9EWyV,EA8EM9R,EA9EP,UAAYoG,GAAZ,mBAA8B0L,IA8ElB,CAC3B5U,OAAQ,MACR1E,QAAS,CACP,eAAgB,oBAElBuM,KAAMC,KAAKC,UAAUF,KACpB2B,MAAK,SAACC,GACP,OAAOA,EAAInK,WARY,iCA7ER,IAACsV,IA6EO,OAAH,wDAcxB,SAASjL,GAAOtK,GACZ,OAAIA,EAAS2K,GACF3K,EAEJA,EAASC,OAAOkK,MAAK,SAAAC,GAAG,OAAIQ,QAAQC,OAAOT,MC3FtD,IAgIeyL,GAhII,SAACna,GAClB,MAAgCC,oBAAS,GAAzC,mBAAOoV,EAAP,KAAiB+E,EAAjB,KACA,EAAwCna,oBAAS,GAAjD,mBAAOoa,EAAP,KAEMC,GAFN,KAE6B,WAC3BF,GAAY,GACZ,IAAI3J,EAASrQ,OAAOsQ,OAAO,GAAG1Q,EAAMua,eACpC9J,EAASA,EAAOI,QAAO,SAACzG,GAAD,OAAMA,EAAErC,KAAO/H,EAAM+H,IAAMqC,EAAEnI,SAAWjC,EAAM0C,QACrE1C,EAAMwa,iBAAiB/J,KAGzBpL,qBAAU,WACLrF,EAAMuS,QAAQtQ,SAAWjC,EAAME,UAAU+B,QAAUjC,EAAMuS,QAAQxK,KAAO/H,EAAME,UAAU6H,KACtFsN,GACDiF,IAEFG,OAED,CAACza,EAAMuS,UAuBV,IAAMkI,EAA0B,WACb,WAAdza,EAAM4K,MACPwP,GAAY,GACZR,GAAY5Z,EAAM+H,IAAI0G,MAAK,SAACC,GACV,8BAAbA,EAAG,KACJ1O,EAAM0a,aAAa1a,EAAM+H,GAAG/H,EAAM0C,KAAK1C,EAAM4K,UAO7B,YAAd5K,EAAM4K,OACZwP,GAAY,GACZN,GAAmB9Z,EAAM+H,IAAI0G,MAAK,SAACC,GACjB,8BAAbA,EAAG,KACJ1O,EAAM0a,aAAa1a,EAAM+H,GAAG/H,EAAM0C,KAAK1C,EAAM4K,WASrD,OACE,qBAAKtF,UAAU,wBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,wBACAA,UAAU,gBACVc,MAAM,iBACNe,QAAS,WACPnH,EAAMiU,WAAWjU,EAAME,YAJzB,SAME,cAAC,IAAD,MAEa,YAAdF,EAAM4K,KAAkB,KACzB,wBACAtF,UAAW+U,EAAc,kBAAkB,gBAC3CjU,MAAM,eACNe,QAAS,WAUJnH,EAAMoL,aACJpL,EAAMoL,aAAanJ,SAAWjC,EAAM0C,KACrC1C,EAAM2a,YAAY,CAAC1Y,OAAO,KAG1BjC,EAAM2a,YAAY3a,EAAME,WAI1BF,EAAM2a,YAAY,CAAC1Y,OAAO,MAtB9B,SA2BE,cAAC,IAAD,MAGF,yBACAmE,MAAM,qBACNd,UAAW+P,EAAU,8BAA8B,6BACnDlO,QAAS,WACJkO,EACDiF,KAGAF,GAAY,GACZpa,EAAMwa,kBAAiB,SAAAzJ,GAAC,4BAAOA,GAAP,CAAS/Q,EAAME,iBAT3C,UAaGF,EAAM0C,KAAM,IAAK2S,EAAW,cAAC,IAAD,IAAa,cAAC,IAAD,WAtDJrV,EAAM0C,OCoCvCkY,GAxGQ,SAAC5a,GACtB,MAAwCC,mBAAS,CAACgC,OAAO,KAAzD,mBAAOmJ,EAAP,KAAqBC,EAArB,KACA,EAA2BpL,mBAAS,CAACkC,OAAO,GAAG0Y,eAAe,KAA9D,mBAAO1Y,EAAP,KAAcgJ,EAAd,KAEM2P,EAAe,WACnBnB,KAAYlL,MAAK,SAACC,GAChBvD,GAAU,SAAA4F,GAAC,kCAASA,GAAT,IAAY5O,OAAQuM,UAEjCzB,KAAmBwB,MAAK,SAACC,GACvBvD,GAAU,SAAA4F,GAAC,kCAASA,GAAT,IAAY8J,eAAgBnM,WAI3CrJ,qBAAU,WACLrF,EAAM+a,cACP5P,GAAU,SAAA4F,GAAC,kCAASA,GAAT,IAAY5O,OAAO,GAAD,mBAAM4O,EAAE5O,QAAR,CAAenC,EAAM+a,sBAEpD,CAAC/a,EAAM+a,eAET1V,qBAAU,WACRyV,MACC,IAEHzV,qBAAU,WACLrF,EAAMgb,QAAOF,MACf,CAAC9a,EAAMgb,SAEV,IAAMC,EAAyB,SAAClT,EAAGrF,EAAKkI,GACtC,GAAU,WAAPA,EAAgB,CACjB,IAAI6F,EAASrQ,OAAOsQ,OAAO,GAAGvO,EAAOA,QACrCsO,EAASA,EAAOI,QAAO,SAACzG,GAAD,OAAMA,EAAErC,KAAOA,GAAMqC,EAAEnI,SAAWS,KACzDyI,GAAU,SAAA4F,GAAC,kCAASA,GAAT,IAAY5O,OAAQsO,YAE5B,GAAU,YAAP7F,EAAiB,CACvB,IAAI6F,EAASrQ,OAAOsQ,OAAO,GAAGvO,EAAO0Y,gBACrCpK,EAASA,EAAOI,QAAO,SAACzG,GAAD,OAAMA,EAAErC,KAAOA,GAAMqC,EAAEnI,SAAWS,KACzDyI,GAAU,SAAA4F,GAAC,kCAASA,GAAT,IAAY8J,eAAgBpK,SAIrCkK,EAAc,SAAC5Y,GAChBqJ,EAAanJ,SAAWF,EAAME,QAAyB,KAAfF,EAAME,QAC/CoJ,EAAgB,CAACpJ,OAAO,KACxBjC,EAAM6H,YAAW,SAACkJ,GAAD,MAAM,CAAC9O,OAAO,SAG/BoJ,EAAgBtJ,GAChB/B,EAAM6H,YAAW,SAACkJ,GAAD,OAAMhP,OAI3B,OACE,qBAAKuD,UAAU,8BAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,sBAEF,sBAAKA,UAAU,aAAf,UACE,mBAAGA,UAAU,kBAAb,wCACCnD,EAAOA,OAAOE,KAAI,SAACN,GAClB,OACE,cAAC,GAAD,CACEwY,cAAeva,EAAMua,cACrBC,iBAAkBxa,EAAMwa,iBACxB9X,KAAMX,EAAME,OACZ8F,GAAIhG,EAAMgG,GAEV4S,YAAaA,EACbvP,aAAcA,EACdlL,UAAW6B,EACXwQ,QAASvS,EAAMuS,QACf0B,WAAYjU,EAAMiU,WAClBrJ,KAAM,SACN8P,aAAcO,GAPTlZ,EAAME,WAWjB,mBAAGqD,UAAU,kBAAb,yCACCnD,EAAO0Y,eAAexY,KAAI,SAACN,GAC1B,OACE,cAAC,GAAD,CACEwY,cAAeva,EAAMua,cACrBC,iBAAkBxa,EAAMwa,iBACxB9X,KAAMX,EAAME,OACZgS,WAAYjU,EAAMiU,WAClB0G,YAAaA,EACbvP,aAAcA,EACdrD,GAAIhG,EAAMgG,GACVwK,QAASvS,EAAMuS,QACf3H,KAAM,UAEN1K,UAAW6B,EACX2Y,aAAcO,GAFTlZ,EAAME,cAOnB,uBACA,cAAC,GAAD,U,4CCqFOiZ,GArLkB,SAAClb,GAE9B,MAA+Bmb,sBAAW,SAAAtY,GAAC,OAAIA,EAAI,IAAG,GAAtD,mBAAgBuY,GAAhB,WAEMC,EAAQC,aAAwBC,KAAOF,OAU7ChW,qBAAU,WACN+V,MACD,CAACpb,EAAM2G,OAEV,IAAM6U,EAAe,SAAC3Y,EAAEU,EAAEkY,GACtB,IAAIhL,EAASrQ,OAAOsQ,OAAO,GAAG1Q,EAAM2G,MAChC+U,EAAUjL,EAAOI,QAAO,SAACzG,GAAD,OAAMA,EAAE6B,WAAWwP,KAAY,GAC3D,GAAGC,EAAQ,CACP,IAAIrO,EAAOxK,EAAER,KAAI,SAAAS,GAAM,OAAQA,EAAElD,MAAOuU,cAAa9P,KAAK,KAC1DqX,EAAQtP,MAAe,KAAPiB,EAAU,KAAKA,EAEnCrN,EAAM2b,UAAS,SAAC5K,GAAD,mBAAC,eAASA,GAAV,IAAY6K,YAAYnL,QAarCoL,EAAY,SAACC,EAAkBC,EAAaP,EAAaC,EAAU1T,GAErE,OADAtD,QAAQqT,IAAI,eAAeiE,EAAahU,GAEtC,cAAC,IAAD,CACER,SAAS,EAETI,SAAU,SAAC9E,EAAEU,GAAH,OAAOiY,EAAa3Y,EAAEU,EAAEkY,IAClCnW,UAAU,kBACViI,aAAa,EACb,kBAAgB,aAChBG,QAAQ,qBACRhL,KAAK,kBACL+E,aAAcsU,EACdvU,QAASsU,GAVX,iBAEiB/T,KAcjBiU,EAAa,SAAC9P,EAAWC,EAAWC,EAAOnK,GAC7C,IAAIga,EAAeha,EACfia,EAAc,GAClB,GAAGlc,EAAMmc,UAAU,CACf,IAAIC,EAASpc,EAAMmc,UAAUtL,QAAO,SAACzG,GAAD,OAAMA,EAAE2F,cAAgB9N,KACzDma,EAAO,KACNH,EAAeG,EAAO,GAAGlM,eACzBgM,EAAcE,EAAO,GAAGjM,OAAOiM,EAAO,GAAGjM,OAAOiM,EAAO,GAAGta,OAGlE,OAAGsK,GAAUD,GAAaD,EAElB,eAACqF,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,uBAAhD,UACI,eAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,UACI,mBAAGxM,UAAU,UAAb,SAAwB2W,IACxB,mBAAG3W,UAAU,YAAb,SAA0B4W,OAE9B,eAACrK,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACL,EAAA,EAAD,UACI,cAAC4J,EAAD,CAAOgB,YAAY,EACnB5U,aAAc,CAAC2E,GAAYF,EAAWE,GAAYD,GAClDpC,IAAKqC,EAAMA,EAAM,IAAID,EAAU,IAC/BnC,IAAKoC,EAAMA,EAAM,GAAGD,EAAU,GAC9B6J,UAAU,EACVsG,KAAM,EACN3U,SAAU,aACV4U,cAAe,SAAA3c,IAvDnB,SAACiD,EAAE4Y,GACnB,IAAIhL,EAASrQ,OAAOsQ,OAAO,GAAG1Q,EAAM2G,MAChC+U,EAAUjL,EAAOI,QAAO,SAACzG,GAAD,OAAMA,EAAE6B,WAAWwP,KAAY,GACxDC,IACCA,EAAQxP,UAAYrJ,EAAE,GACtB6Y,EAAQvP,UAAYtJ,EAAE,IAE1B7C,EAAM2b,UAAS,SAAC5K,GAAD,mBAAC,eAASA,GAAV,IAAY6K,YAAYnL,OAgDM+L,CAAY5c,EAAMqC,QAG/C,cAACwP,EAAA,EAAD,UACI,gCACI,qBAAKnM,UAAU,OAAf,SACI,sBAAKA,UAAU,QAAf,UACI,mBAAGA,UAAU,eAAb,kBACA,cAACiM,EAAA,EAAKQ,QAAN,CACAjK,KAAK,SACLpF,KAAK,MACL+Z,KAAK,KACL7c,MAAOwM,GAAYF,EACnB5G,UAAU,aACVS,MAAM,OACN4B,SAAU,oBAGlB,qBAAKrC,UAAU,QAAf,SACI,sBAAKA,UAAU,QAAf,UACI,mBAAGA,UAAU,eAAb,kBACI,cAACiM,EAAA,EAAKQ,QAAN,CACAjK,KAAK,SACLlI,MAAOwM,GAAYD,EACnBzJ,KAAK,MACL+Z,KAAK,KACL1W,MAAM,OACNT,UAAU,mBACVqC,SAAU,SAAC9E,EAAEU,uBASrC,qBAAK+B,UAAU,QAAf,SACA,cAACiM,EAAA,EAAKQ,QAAN,CAAciE,UAAQ,EAAClO,KAAK,OAAOqF,YAAY,WAKzDuP,EAAe,SAACza,EAAOuL,GACZ,OAAVA,QAA4BrN,IAAVqN,IAAqBA,EAAQ,OAClD,IAAImP,EAAInP,EAAM2G,WAAWvQ,MAAM,KAC3BgZ,EAAO,GACPR,EAAS,GACTH,EAAeha,EACfia,EAAc,GACflc,EAAMmc,YACLC,EAASpc,EAAMmc,UAAUtL,QAAO,SAACzG,GAAD,OAAMA,EAAE2F,cAAgB9N,MAC9C,KACN2a,EAAOR,EAAO,GAAG9H,aACjB2H,EAAeG,EAAO,GAAGlM,eACzBgM,EAAcE,EAAO,GAAGjM,OAAOiM,EAAO,GAAGjM,OAAOiM,EAAO,GAAGta,OAUlE,IAAI+a,GAPJF,EAAIA,EAAEta,KAAI,SAACQ,GACP,IAAIia,EAAQF,EAAK/L,QAAO,SAACzG,GAAD,OAAM2B,SAAS3B,EAAEoK,YAAczI,SAASlJ,MAAK,GACrE,OAAGia,GAGSja,MAELR,KAAI,SAAAQ,GAAC,OA9IM,SAACA,EAAEC,GACzB,MAAO,CAAElD,MAAOiD,EAAGhD,MAAOiD,GA6IPia,CAAkBla,EAAE2R,SAAS3R,EAAE2R,SAAS3R,EAAEA,EAAE4R,gBAAgB5R,EAAE4R,gBAAgB5R,MAC7Fma,EAAQJ,EAAKva,KAAI,SAAAQ,GAAC,OA3IC,SAACA,GACxB,MAAO,CAAEjD,MAAOiD,EAAE2R,SAAW3U,MAAOgD,EAAE4R,iBA0IdwI,CAAmBpa,MAC3C,OACA,cAAC0O,EAAA,EAAD,UACI,eAACA,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,uBAAhD,UACI,eAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,UACI,mBAAGxM,UAAU,UAAb,SAAwB2W,IACxB,mBAAG3W,UAAU,YAAb,SAA0B4W,OAE9B,cAACrK,EAAA,EAAD,CAAKC,GAAI,EAAT,SACK+J,EAAUmB,EAAMH,EAAGrB,EAAavZ,EAAOga,EAAaC,WAOrE,OACI,gCACI,6BAAKlc,EAAM2G,MAAM3G,EAAM2G,KAAKjD,OAAS,EAAG,cAAmB,KAC1D1D,EAAM2G,KAAKtE,KAAI,SAAA6a,GAAM,OAAO,gCACb,IAAXA,EAAEtS,KACH,8BACI,cAAC2G,EAAA,EAAD,UACKyK,EAAWkB,EAAEhR,UAAUgR,EAAE/Q,UAAU+Q,EAAE9Q,MAAM8Q,EAAEjR,cAE/C,KACK,IAAXiR,EAAEtS,KAAW8R,EAAaQ,EAAEjR,SAASiR,EAAE9Q,OAAO,eCvFhD+Q,GAzFS,SAACnd,GAErB,IAAMwX,EAAc,kBAAMxX,EAAMuX,SAAQ,SAAAxG,GAAC,kCAAQA,GAAR,IAAUuG,MAAK,QA2BxD,OACI,qCACE,cAAC,IAAD,IACA,eAACa,EAAA,EAAD,CAAOb,KAAMtX,EAAMsX,KAAMc,OAAQZ,EAAaiF,KAAK,KAAnD,UACE,cAACtE,EAAA,EAAMxE,OAAP,CAAc0E,aAAW,EAAzB,SACE,cAACF,EAAA,EAAMG,MAAP,8BAEF,cAAC,IAAD,CACIrH,SAjCS,SAACrJ,GACpB,IAAIwV,EAAU,CACJ1Q,YAAa9E,EAAO3F,OACpB0K,UAAW3M,EAAM2G,KACjB0W,WAAYrd,EAAMqd,YAEvB,+BAA+BC,KAAKF,EAAQ1Q,aAI/CuN,GAAYmD,GAAS3O,MAAK,SAACC,GACtBA,IACEA,EAAG,MACFsJ,IAAMtT,MAAMgK,EAAG,MAAU8H,QAAQ,kBAAkB,MAGnDwB,IAAMC,QAAQ,6BACdjY,EAAMud,gBAAgB7O,GACtB8I,SAXRQ,IAAMtT,MAAM,sHA2BJyM,cAAe,CACflP,OAAQ,IAHZ,SAMC,gBAAGmP,EAAH,EAAGA,aAAczF,EAAjB,EAAiBA,aAAc/D,EAA/B,EAA+BA,OAA/B,EAAuCyJ,OAAvC,OACD,eAACE,EAAA,EAAD,CAAMC,YAAU,EAACP,SAAUG,EAA3B,UACE,cAAC+G,EAAA,EAAMvE,KAAP,CAAYtO,UAAU,YAAtB,SACE,cAAC8N,EAAA,EAAD,UACE,eAAC3B,EAAA,EAAD,WACE,eAACI,EAAA,EAAD,CAAKyB,GAAI,EAAT,UACE,eAAC7B,EAAA,EAAD,WACE,2DACA,yCAAYzR,EAAMwd,aAAaC,UAC/B,6CAAgB9U,WAAW3I,EAAMwd,aAAaE,YAAYC,QAAQ,GAAlE,UAEF,cAAClM,EAAA,EAAD,UACE,cAAC,GAAD,CAA0B0K,UAAWnc,EAAMmc,UAAWxV,KAAM3G,EAAM2G,KAAM2N,aAActU,EAAMsU,oBAGhG,cAACzC,EAAA,EAAD,CAAKyB,GAAI,EAAT,SACE,eAAC/B,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,gBAAhD,UACE,cAACL,EAAA,EAAKqE,MAAN,+BACA,cAACrE,EAAA,EAAKQ,QAAN,CACA6L,UAAQ,EACR9V,KAAK,OACLpF,KAAK,SACL9C,MAAOgI,EAAO3F,OACd0F,SAAUgE,EACVwB,YAAY,iCAOtB,eAACgL,EAAA,EAAMI,OAAP,WACE,cAACvE,EAAA,EAAD,CAAQqC,QAAQ,YAAYlP,QAASqQ,EAArC,sBAGA,cAACxD,EAAA,EAAD,CAAQqC,QAAQ,UAAUvO,KAAK,SAA/B,2CCiPD+V,I,OA5TW,SAAC7d,GAEvB,IAAMqb,EAAQC,aAAwBC,KAAOF,OAE3C,EAA0Cpb,mBAAS,IAAnD,mBAAsB6d,GAAtB,WAEMf,EAAoB,SAACla,GACzB,MAAO,CAAEjD,MAAOiD,EAAE2R,SAAW3U,MAAOgD,EAAE4R,kBAOlC+G,EAAe,SAACjY,EAAEV,GACtB,IAAIvC,EAAQuC,EAAEH,KAAMyR,WAAWvQ,MAAM,KACjCJ,EAAQuI,SAASzL,EAAK,IACtB4R,EAAM5R,EAAK,GACXmQ,EAASrQ,OAAOsQ,OAAO,GAAG1Q,EAAM+d,KAAKC,kBAC9B,UAAR9L,IACDzB,EAAOjN,GAAO4I,MAAQ7I,EAAElB,KAAI,SAAAS,GAAM,OAAQA,EAAElD,MAAOuU,cAAa9P,KAAK,KACrEoM,EAAOjN,GAAO0I,UAAY,KAC1BuE,EAAOjN,GAAO2I,UAAY,MAE5B8R,EAAsBxN,IAGlByN,EAAqB,SAACte,GAE1B,IADA,IAAI6Q,EAASrQ,OAAOsQ,OAAO,GAAG1Q,EAAMme,OAC5B5a,EAAE,EAAGA,EAAEkN,EAAO/M,OAAQH,IAC5B,GAAGkN,EAAOlN,GAAGwa,OAAS/d,EAAM+d,KAAKA,KAAK,CACpCtN,EAAOlN,GAAG6a,aAAexe,EACzB,MAGJI,EAAMqe,SAAS5N,IAgCjBpL,qBAAU,WAEN,IAAIoL,EAASrQ,OAAOsQ,OAAO,GAAG1Q,EAAM+d,KAAKC,kBACrCM,EAA6B,IAApBte,EAAM+d,KAAKnT,KAAa5K,EAAM+d,KAAKzJ,aAAc,GAC1DiK,EAASD,EAAM5a,OAAS,EAAI,GAAI,KAChC8a,EAAQxe,EAAM+d,KAAKtE,KACnBgF,EAAQ1S,SAASyS,GAAS/N,EAAO/M,OACrC,GAAG+a,EAAM,EACP,IAAI,IAAIlb,EAAE,EAAGA,EAAEkb,EAAOlb,IAAI,CAC1B,IAAImb,EAAM,CACRC,YAAclO,EAAO/M,OAAO,EAC5ByI,UAAWnM,EAAM+d,KAAK/T,IACtBkC,UAAWlM,EAAM+d,KAAKhU,IACtBqC,MAAOmS,GAET9N,EAAOhO,KAAKic,QAGLD,EAAO,IACdhO,EAASA,EAAOwF,OAAO,EAAGjW,EAAM+d,KAAKtE,OAEvCwE,EAAsBxN,GACtBqN,EAAiBQ,EAAMjc,KAAI,SAAAQ,GAAC,OAAEka,EAAkBla,SACjD,CAAC7C,EAAM+d,KAAK/d,EAAM+d,KAAKtE,OAG5BpU,qBAAU,cACR,CAACrF,EAAMme,QAET,IAAMF,EAAwB,SAACre,GAE3B,IADF,IAAI6Q,EAASrQ,OAAOsQ,OAAO,GAAG1Q,EAAMme,OAC1B5a,EAAE,EAAGA,EAAEkN,EAAO/M,OAAQH,IAC5B,GAAGkN,EAAOlN,GAAGwa,OAAS/d,EAAM+d,KAAKA,KAAK,CACpCtN,EAAOlN,GAAGya,iBAAkBpe,EAC5B,MAGNI,EAAMqe,SAAS5N,IAiCX+G,EAAc,kBAAMxX,EAAMuX,SAAQ,SAACxG,GAAD,mBAAC,eAAUA,GAAX,IAAauG,MAAK,QAE1D,OACI,mCACE,eAACa,EAAA,EAAD,CAAOb,KAAMtX,EAAMsX,KAAMc,OAAQZ,EAAaiF,KAAK,KAAnD,UACE,cAACtE,EAAA,EAAMxE,OAAP,CAAc0E,aAAW,EAAzB,SACE,cAACF,EAAA,EAAMG,MAAP,6BAEF,cAAC,IAAD,CACIrH,SAvCS,SAACrJ,EAAOrE,EAAE2N,KAwCnBC,cAAe,CACfyN,YAAa,EACbC,kBAAmB,IAJvB,SAOG,gBAAGzN,EAAH,EAAGA,aAAH,EAAiBzF,aAAjB,EAA+B/D,OAA/B,EAAuCyJ,OAAvC,EAA+CC,cAA/C,OACC,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACP,SAAUG,EAA3B,UACE,eAAC+G,EAAA,EAAMvE,KAAP,WACI,eAACrC,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,iBAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,uDAGA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACP,EAAA,EAAKuE,MAAN,CACAhO,KAAK,QACLjI,MAAM,cACN6C,KAAK,eACLqF,GAAG,wBACH+W,eAA4C,YAA3B9e,EAAM+d,KAAKK,aAC5B3W,aAAyC,YAA3BzH,EAAM+d,KAAKK,aACzBxe,MAAkC,YAA3BI,EAAM+d,KAAKK,aAClBzW,SAAU,SAACyC,IACa,IAAnBA,EAAEnD,OAAO8O,SACVmI,EAAmB,cAIvB,cAAC3M,EAAA,EAAKuE,MAAN,CACAhO,KAAK,QACLjI,MAAM,yBACN6C,KAAK,eACLoc,eAA6C,YAA5B9e,EAAM+d,KAAKK,aAC5B3W,aAAyC,YAA3BzH,EAAM+d,KAAKK,aACzBrW,GAAG,wBACHnI,MAAmC,YAA5BI,EAAM+d,KAAKK,aAClBzW,SAAU,SAACyC,IACa,IAAnBA,EAAEnD,OAAO8O,SACVmI,EAAmB,sBAM7B,eAAC3M,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,iBAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,qCAGA,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACP,EAAA,EAAKQ,QAAN,CACAgN,UAAU,KACVjX,KAAK,SACLpF,KAAK,cACLyK,YAAa,EACb1F,aAAczH,EAAM+d,KAAKtE,KACzBzH,WAAY,SAACC,GACO,UAAdA,EAAMC,KA7FjB,SAACtS,GAEhB,IADF,IAAI6Q,EAASrQ,OAAOsQ,OAAO,GAAG1Q,EAAMme,OAC1B5a,EAAE,EAAGA,EAAEkN,EAAO/M,OAAQH,IAC5B,GAAGkN,EAAOlN,GAAGwa,OAAS/d,EAAM+d,KAAKA,KAAK,CACpCtN,EAAOlN,GAAGkW,KAAM1N,SAASnM,GACzB,MAGNI,EAAMqe,SAAS5N,GAsFWuO,CAAW/M,EAAMhL,OAAOrH,eAMlC,cAAC2R,EAAA,EAAKG,MAAN,UAC+B,YAA5B1R,EAAM+d,KAAKK,aACV,gCACqB,IAApBpe,EAAM+d,KAAKnT,KACZ5K,EAAM+d,KAAKC,iBAAiB3b,KAAI,SAACQ,EAAEW,GAC/B,OAAQ,eAAC+N,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,iBAAhD,UACJ,eAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,mBACWjP,EAAE8b,eAEb,cAAC9M,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,IAAD,CACAvK,SAAS,EACT7E,KAAI,UAAKc,EAAL,UACJmE,SAAU6T,EACV/T,aAAc5E,EAAEuJ,MAAOvJ,EAAEuJ,MACtB+H,WACAvQ,MAAM,KACNvB,KACC,SAAAS,GACE,IAAImc,EAAMjf,EAAM+d,KAAKzJ,aAAazD,QAAO,SAACzG,GAAD,OAAMA,EAAEoK,SAASL,aAAerR,KAAI,GAC7E,OAAOmc,EAAKlC,EAAkBkC,GAAK,MAElC,GACP3Z,UAAU,kBACViI,aAAa,EACb,kBAAgB,aAChBG,QAAQ,qBACRlG,QAASxH,EAAM+d,KAAKzJ,aAAajS,KAAI,SAAAQ,GAAC,OAAEka,EAAkBla,YAtBYW,MA0B/E,KACkB,IAApBxD,EAAM+d,KAAKnT,KAAY5K,EAAM+d,KAAKC,iBAAiB3b,KAAI,SAACQ,EAAEW,GACvD,OACA,eAAC+N,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,iBAAhD,UACE,eAACL,EAAA,EAAKqE,MAAN,CAAYC,QAAM,EAAC/D,GAAI,EAAvB,mBACSjP,EAAE8b,eAEX,eAAC9M,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACL,EAAA,EAAD,UACE,cAAC4J,EAAD,CACAgB,YAAY,EACZ5U,aAAc,CAAC5E,EAAEqJ,UAAWrJ,EAAEsJ,WAC9BpC,IAAK/J,EAAM+d,KAAKhU,IAChBC,IAAKhK,EAAM+d,KAAK/T,IAChBgM,UAAU,EACVsG,KAAM,EACN3U,SAAU,aACV4U,cAAe,SAAA3c,IAtMzB,SAACiD,EAAEU,GACrB,IAAIkN,EAASrQ,OAAOsQ,OAAO,GAAG1Q,EAAM+d,KAAKC,kBACzCvN,EAAOlN,GAAG2I,UAAYrJ,EAAE,GACxB4N,EAAOlN,GAAG4I,UAAYtJ,EAAE,GACxBob,EAAsBxN,GAkM+B+L,CAAY5c,EAAM4D,QAG7C,cAACiO,EAAA,EAAD,UACE,gCACE,qBAAKnM,UAAU,OAAf,SACA,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,eAAb,kBACA,cAACiM,EAAA,EAAKQ,QAAN,CACAjK,KAAK,SACLpF,KAAK,MACL+Z,KAAK,KACL7c,MAAOiD,EAAEqJ,UACT5G,UAAU,aACVS,MAAM,OACN4B,SAAU,oBAGZ,qBAAKrC,UAAU,QAAf,SACE,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,eAAb,kBACA,cAACiM,EAAA,EAAKQ,QAAN,CACAjK,KAAK,SACLlI,MAAOiD,EAAEsJ,UACTzJ,KAAK,MACL+Z,KAAK,KACL1W,MAAM,OACNT,UAAU,mBACVqC,SAAU,SAAC9E,EAAEU,GAAOkB,QAAQqT,IAAI,GAAGjV,EAAEU,qBA1CqBC,MAiDvE,KACkB,IAApBxD,EAAM+d,KAAKnT,MAAkC,IAApB5K,EAAM+d,KAAKnT,KACrC,cAACwL,EAAA,EAAD,CAAsCC,QAAQ,SAA9C,gDAAYrW,EAAM+d,KAAKmB,eAEd,QACJ,UAGb,eAAC/G,EAAA,EAAMI,OAAP,WACE,cAACvE,EAAA,EAAD,CAAQqC,QAAQ,YAAYlP,QAASqQ,EAArC,sBAGA,cAACxD,EAAA,EAAD,CAAQqC,QAAQ,UAAUvO,KAAK,SAAUX,QAAS,kBA1QtC,SAACS,GAEzB,IADA,IAAI6I,EAASrQ,OAAOsQ,OAAO,GAAG1Q,EAAMme,OAC5B5a,EAAE,EAAGA,EAAEkN,EAAO/M,OAAQH,IACzBkN,EAAOlN,GAAGwa,OAAS/d,EAAM+d,KAAKA,OAC5BtN,EAAOlN,GAAG2I,YAAcuE,EAAOlN,GAAG4I,YACnCsE,EAAOlN,GAAG6I,MAAQqE,EAAOlN,GAAG2I,UAC5BuE,EAAOlN,GAAG2I,UAAY,KACtBuE,EAAOlN,GAAG4I,UAAY,MAEO,YAA5BnM,EAAM+d,KAAKK,eACZ3N,EAAOlN,GAAG6a,aAAape,EAAM+d,KAAKK,aAClC3N,EAAOlN,GAAGya,iBAAiBhe,EAAM+d,KAAKC,kBAExCvN,EAAOlN,GAAGkW,KAAOzZ,EAAM+d,KAAKtE,MAGhCzZ,EAAMqe,SAAS5N,GACfzQ,EAAMmf,WAAWnf,EAAM+d,KAAKA,MAC5B/d,EAAMuX,SAAQ,SAAAxG,GAAC,kCAAQA,GAAR,IAAUuG,MAAK,OAwPsCT,IAAxD,+C,sCCxNLuI,G,WAhGX,WAAYC,GAAO,qBACfC,KAAKD,KAAOA,E,4CAGhB,WACI,OAAOC,KAAKD,O,qBAGhB,WACI,OAAOC,KAAKD,KAAKE,a,0BAIrB,SAAaC,EAAMC,EAAWC,GAC1B,GAAID,EAAUD,GAEV,OADAE,EAAOF,GACAA,EAEN,GAAqB,OAAlBA,EAAKG,SAAmB,OAAO,KAClC,GAAGH,EAAKG,SAASjc,QAAU,EAAG,OAAO,KAEtC,IADA,EACIkc,EAAQ,GADZ,cAEcJ,EAAKG,UAFnB,IAEA,IAAI,EAAJ,qBAA4B,CAAC,IAApBzC,EAAmB,QAC1B0C,EAAMnd,KAAK6c,KAAKO,aAAa3C,EAAGuC,EAAWC,KAH7C,8BAMA,OADQE,EAAMtS,MAAK,SAAAlD,GAAC,OAAU,OAANA,O,yBAKhC,SAAYoV,EAAKG,GACbL,KAAKO,aAAaP,KAAKD,MAAK,SAACjV,GAAK,OAAOA,EAAE0V,MAAMN,EAAKM,OAAM,SAACC,GACzDA,EAAEJ,SAAWA,O,0BAIrB,SAAaH,GACTF,KAAKO,aAAaP,KAAKD,MAAM,SAACjV,GAAK,OAAOA,EAAE0V,MAAMN,EAAKM,OAAM,SAACC,GAC1D,GAAGA,EAAEJ,SAAS,CACVI,EAAEC,QAAS,EACX,IAAI3S,EAAO0S,EAAEJ,SACbI,EAAEE,UAAY5S,EACd0S,EAAEJ,SAAW,SAEb,CACAI,EAAEC,QAAQ,EACV,IAAI3S,EAAO0S,EAAEE,UACbF,EAAEJ,SAAWtS,EACb0S,EAAEE,UAAY,W,uBAM1B,SAAUT,GACN,GAAY,OAATA,GAGuB,OAAlBA,EAAKG,UAA8C,IAAzBH,EAAKG,SAASjc,OAA3C,CAID8b,EAAKG,SAAWH,EAAKG,SAAS9O,QAAO,SAACzG,GAAD,MAAgB,WAAVA,EAAE0V,OAD7C,oBAEiBN,EAAKG,UAFtB,IAEA,IAAI,EAAJ,qBAA+B,CAAC,IAAxBO,EAAuB,QAC3BZ,KAAKa,UAAUD,IAHnB,kC,wBAQR,SAAWV,GACPF,KAAKO,aAAaP,KAAKD,MAAK,SAACjV,GAAK,OAAOA,EAAE0V,MAAMN,EAAKM,OAAK,SAACC,GACxDA,EAAED,IAAM,YAEZR,KAAKa,UAAUb,KAAKD,Q,6BAKxB,SAAgBtB,EAAKyB,GACjB,IAAI7O,EAAM,GAIV,GAHI6O,EAAKzB,OAASA,GACdpN,EAAIlO,KAAK+c,GAEQ,OAAlBA,EAAKG,eAAuCxf,IAAlBqf,EAAKG,UAA0BH,EAAKG,SAASjc,OAAQ,EAAE,CAAC,IAAD,gBACnE8b,EAAKG,UAD8D,IAChF,IAAI,EAAJ,qBAA2B,CAAC,IAAD,EAAnBI,EAAmB,QACnBK,EAAUd,KAAKe,gBAAgBtC,EAAKgC,GADjB,cAEPK,GAFO,IAEvB,IAAI,EAAJ,qBAAwB,CAAC,IAAjB9d,EAAgB,QACpBqO,EAAIlO,KAAKH,IAHU,gCADqD,+BAQpF,OAAOqO,M,KC+xBA2P,OA92Bf,SAActgB,GAEZ,IAAMugB,EAAUC,EAAQ,KAExB,EAAoCvgB,mBAAS,CAAC2f,MAAM,GAAGa,KAAK,KAA5D,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsC1gB,mBAAS,CAAC2f,MAAM,GAAGa,KAAK,KAA9D,mBAAOG,EAAP,KAAoBC,EAApB,KAGIC,EAAM,IADEN,EAAQ,MAEhBO,EAAWD,EAAIE,OAAJ,eAETC,EAAe,CACnBC,QAAS,SAACC,EAAUC,GAAX,mBAAC,eACLD,GADI,IAEP5W,WAAY,OACZ8W,YAAa,UACbC,UAAW,OACXxb,OAAQ,OACRC,MAAO,QACPwb,WAAWH,EAAMI,UAAY,SAG/BC,eAAgB,SAACN,EAAUC,GAAX,mBAAC,eACZD,GADW,IAEdrb,OAAQ,OACRC,MAAO,QACP2b,QAAS,WAGXC,MAAO,SAACR,EAAUC,GAAX,mBAAC,eACHD,GADE,IAELS,OAAQ,SAEVC,mBAAoB,SAAAT,GAAK,MAAK,CAC5BU,QAAS,SAEXC,oBAAqB,SAACZ,EAAUC,GAAX,mBAAC,eACjBD,GADgB,IAEnBrb,OAAQ,WAINkc,EAAqB,CACzBd,QAAS,SAACC,EAAUC,GAAX,mBAAC,eACLD,GADI,IAEP5W,WAAY,OACZ8W,YAAa,UACbC,UAAW,OACXxb,OAAQ,OACRC,MAAO,QACPwb,WAAWH,EAAMI,UAAY,SAG/BC,eAAgB,SAACN,EAAUC,GAAX,mBAAC,eACZD,GADW,IAEdrb,OAAQ,OACRC,MAAO,QACP2b,QAAS,WAGXC,MAAO,SAACR,EAAUC,GAAX,mBAAC,eACHD,GADE,IAELS,OAAQ,SAEVC,mBAAoB,SAAAT,GAAK,MAAK,CAC5BU,QAAS,SAEXC,oBAAqB,SAACZ,EAAUC,GAAX,mBAAC,eACjBD,GADgB,IAEnBrb,OAAQ,WAIZ,EAA0B7F,mBAAS,CAAC8d,KAAK,QAAQ5b,OAAO,KAAxD,mBAAO8f,EAAP,KAAcC,EAAd,KACA,EAA0BjiB,mBAAS,CACjC,CAAC8d,KAAK,QAASmB,cAAe,KAAMtU,KAAM,KAAM0J,aAAc,GAAIvK,IAAK,EAAGC,IAAK,IAAOiC,SAAU,KAAMnK,MAAM,KAAMsc,aAAa,UAAW3E,KAAK,EAAGuE,iBAAiB,GAAImE,aAAa,IACpL,CAACpE,KAAK,QAASmB,cAAe,KAAMtU,KAAM,KAAM0J,aAAc,GAAIvK,IAAK,EAAGC,IAAK,IAAOiC,SAAU,KAAMnK,MAAM,KAAMsc,aAAa,UAAW3E,KAAK,EAAGuE,iBAAiB,GAAImE,aAAa,IACpL,CAACpE,KAAK,QAASmB,cAAe,KAAMtU,KAAM,KAAM0J,aAAc,GAAIvK,IAAK,EAAGC,IAAK,IAAOiC,SAAU,KAAMnK,MAAM,KAAMsc,aAAa,UAAW3E,KAAK,EAAGuE,iBAAiB,GAAImE,aAAa,IACpL,CAACpE,KAAK,QAASmB,cAAe,KAAMtU,KAAM,KAAM0J,aAAc,GAAIvK,IAAK,EAAGC,IAAK,IAAOiC,SAAU,KAAMnK,MAAM,KAAMsc,aAAa,UAAW3E,KAAK,EAAGuE,iBAAiB,GAAImE,aAAa,MAJtL,mBAAOhE,EAAP,KAAcE,EAAd,KAOA,EAAwBpe,mBAAS,CAACqX,MAAK,EAAM3Q,KAAK,GAAG2N,aAAa,GAAG+I,WAAW,KAAKG,aAAa,KAAlG,mBAAOlG,EAAP,KAAaC,EAAb,KACA,EAAgDtX,mBAAS,CAACqX,MAAK,EAAMyG,KAAK,KAA1E,mBAAOqE,EAAP,KAAyBC,EAAzB,KACMC,EAASC,mBACTC,EAAgBD,mBAKhBE,EAAuB,SAAC1E,EAAKtU,GACjC,OACE,cAAC,IAAD,CACE9B,SAAU,SAAC/H,GACNA,GACD8iB,EAAW,cAAc3E,EAAM,KAAMne,EAAMA,MAAO,OAGtD0F,UAAU,kBACViI,aAAa,EACb,kBAAgB,aAChBG,QAAQ,qBACRhL,KAAK,kBACLyK,YAAY,eACZ3F,QAASiC,EACTa,OAAQ0X,KAMRxT,EAAe,SAACuP,GACpB,OACE,cAAC,IAAD,CACApW,SAAU,SAAC/H,GACNA,GACD8iB,EAAW,YAAY3E,EAAMne,EAAMA,MAAO,KAAM,OAGpD0F,UAAU,kBACViI,aAAa,EACb,kBAAgB,aAChBG,QAAQ,qBACRhL,KAAK,kBACLyK,YAAY,oBACZ3F,QAASxH,EAAM2M,UACfrC,OAAQ2W,KAgBN0B,EAAgB,SAAC9f,EAAEkb,EAAK6E,EAAO5I,EAAY6I,EAAQxF,EAAWzS,GAClE,IAAI6F,EAASuJ,EAAajN,KAAK+V,MAAM/V,KAAKC,UAAUgN,IAAe,GAYnE,OAXAvJ,EAAOhO,KAbY,SAACI,GAQpB,MAPU,CACRqJ,UAAWrJ,EAAEqJ,UAAYvD,WAAW9F,EAAEqJ,WAAW,KACjDC,UAAWtJ,EAAEsJ,UAAYxD,WAAW9F,EAAEsJ,WAAW,KACjDC,MAAOvJ,EAAEuJ,MACTH,SAAUpJ,EAAEoJ,SACZrB,KAAM/H,EAAE+H,MAOEmY,CAAalgB,IACzBA,EAAE8c,SAAW,GACb9c,EAAEkb,KAAOA,EACTlb,EAAEd,MAAQ0O,EACV5N,EAAE+H,KAAOA,EACT/H,EAAEwa,WAAaA,EACfxa,EAAEmd,QAAS,EACXnd,EAAEkF,IAAM6a,EAASA,EAAO7a,GAAK,QAAQ,OAAOlF,EAAEqJ,UAAYrJ,EAAEqJ,UAAUiI,WAAa,QAAQ,OAAOtR,EAAEsJ,UAAYtJ,EAAEsJ,UAAUgI,WAAa,QAAQ,SAAStR,EAAEuJ,MAAQvJ,EAAEuJ,MAAM+H,WAAa,QACzLtR,EAAEid,IAAMkD,KAAKC,MAAM9O,SAAS,IAAM+O,KAAKC,SAAShP,SAAS,IAAIiP,OAAO,GACpEvgB,EAAEwgB,MAAQ,IAAIH,KAAKI,MAAoB,SAAdJ,KAAKC,UAAmBhP,SAAS,IAC1DtR,EAAE0gB,WAAaV,GAAoBhgB,EAAEuJ,MAC9BvJ,GAGHhD,EAAQ,SAACuK,GACb,IAAIsI,EAAE,GAKN,OAJItI,EAAE8B,WAAa9B,EAAE+B,UAAWuG,EAAE,MAAD,OAAOtI,EAAE8B,UAAT,cAAwB9B,EAAE+B,UAA1B,MACxB/B,EAAE8B,UAAWwG,EAAE,GAAD,OAAItI,EAAE6B,SAAN,cAAoB7B,EAAE8B,WACrC9B,EAAE+B,UAAWuG,EAAE,GAAD,OAAItI,EAAE6B,SAAN,cAAoB7B,EAAE+B,YACpC/B,EAAEgC,OAAUhC,EAAEnI,QAAUmI,EAAErC,MAAK2K,EAAE,GAAD,OAAItI,EAAEmZ,aACvC7Q,GAGH8Q,EAAW,SAACpZ,GAChB,OAAmB,MAAZA,EAAEwY,OAAiB,UAAYxY,EAAEwY,OAAOjc,KAAK0c,OAGhDI,EAA6B,SAAC5gB,EAAEC,GAKpC,MAJW,CACT4gB,oBAAoB7gB,EACpBgc,kBAAkB/b,IA8DhB6gB,EAAc,WAClB7C,EAAI8C,cAAc,CAAC9b,KAAK,SAAS2G,MAAK,SAASoV,GAC7CC,kBAAOD,EAAD,mBAIVxe,qBAAU,WACR6c,GAAS,SAAAnR,GAAC,kCAAOA,GAAP,IAAS5O,OAAOnC,EAAMua,qBAC/B,CAACva,EAAMua,gBAEVlV,qBAAU,WACR8Z,GAAW,WACX,CAAC8C,IAEH,IAAMS,EAAa,SAACqB,EAAQC,EAAOC,EAAWC,EAAQzK,GAEpD,IADA,IAAIhJ,EAASrQ,OAAOsQ,OAAO,GAAGyN,GAD+B,WAEpD5a,GACP,GAAIkN,EAAOlN,GAAGwa,OAASiG,EACrB,GAAc,gBAAXD,EAAyB,CAC1B,GAA0B,OAAvBtT,EAAOlN,GAAG0I,SAAkB,CAC7B,IAAI4D,EAAI7P,EAAMmc,UAAUtL,QAAO,SAAAE,GAAC,OAAIA,EAAEb,iBAAmBO,EAAOlN,GAAG0I,WAAa8E,EAAEZ,SAAW+T,GAAUnT,EAAEjP,QAAUoiB,MAC/GrU,EAAEnM,OAAS,GACb+M,EAAOlN,GAAG2b,cAAgBrP,EAAE,GAAGE,YAC/BU,EAAOlN,GAAGqH,KAAOiF,EAAE,GAAGjF,KACtB6F,EAAOlN,GAAGwG,IAAM8F,EAAE,GAAG9F,IACrB0G,EAAOlN,GAAGyG,IAAM6F,EAAE,GAAG7F,IACrByG,EAAOlN,GAAG+Q,aAAezE,EAAE,GAAGyE,aAC9B+J,EAAS5N,GACT0O,GAAW6E,KAIXvT,EAAOlN,GAAG2b,cAAgB,KAC1BzO,EAAOlN,GAAGqH,KAAO,KACjB6F,EAAOlN,GAAGwG,IAAM,EAChB0G,EAAOlN,GAAGyG,IAAM,IAChByG,EAAOlN,GAAG+Q,aAAe,GACzB+J,EAAS5N,IAGbA,EAAOlN,GAAGzB,MAAQoiB,OAEf,GAAc,cAAXH,EAAuB,CAC7B,IAAII,EAAQnkB,EAAMokB,eAAevT,QAAO,SAACzG,GAAD,OAAMA,EAAEhE,QAAU6d,KAAY,GACtE,GAAuB,OAApBxT,EAAOlN,GAAGzB,MAAe,CAC1B,IAAI+N,EAAI7P,EAAMmc,UAAUtL,QAAO,SAAAE,GAAC,OAAIA,EAAEb,iBAAmB+T,IAAclT,EAAEZ,SAAWM,EAAOlN,GAAGzB,OAASiP,EAAEjP,QAAU2O,EAAOlN,GAAGzB,UACzH+N,EAAEnM,OAAS,GACb+M,EAAOlN,GAAG2b,cAAgBrP,EAAE,GAAGE,YAC/BU,EAAOlN,GAAGqH,KAAOiF,EAAE,GAAGjF,KACtB6F,EAAOlN,GAAGwG,IAAM8F,EAAE,GAAG9F,IACrB0G,EAAOlN,GAAGyG,IAAM6F,EAAE,GAAG7F,IACrByG,EAAOlN,GAAG+Q,aAAezE,EAAE,GAAGyE,aAC9B7D,EAAOlN,GAAG4e,aAAegC,EAAMA,EAAMriB,MAAM,GAC3Cuc,EAAS5N,GACT0O,GAAW6E,KAIXvT,EAAOlN,GAAG2b,cAAgB,KAC1BzO,EAAOlN,GAAGqH,KAAO,KACjB6F,EAAOlN,GAAGwG,IAAM,EAChB0G,EAAOlN,GAAGyG,IAAM,IAChByG,EAAOlN,GAAG+Q,aAAe,GACzB7D,EAAOlN,GAAG4e,aAAegC,EAAMA,EAAMriB,MAAM,GAC3Cuc,EAAS5N,SAIXA,EAAOlN,GAAG4e,aAAegC,EAAMA,EAAMriB,MAAM,GAC3Cuc,EAAS5N,GAEXA,EAAOlN,GAAG0I,SAAWgY,IAvDlB1gB,EAAI,EAAGA,EAAGkN,EAAO/M,OAAQH,IAAK,EAA9BA,IA6DL8gB,EAAa,SAAC7E,EAAKhc,GACF,IAAlBgc,EAAK7Y,KAAKiE,KACX8V,EAAWd,MAAMpc,GAAO8gB,aAAa9E,EAAK7Y,MAG1Cia,EAAYhB,MAAMpc,GAAO8gB,aAAa9E,EAAK7Y,MAG7C4d,MAGIC,EAAW,SAACpa,EAAE7G,GAClB,IA9OkBkhB,EAAcnQ,EAAa+I,EAAWG,EA8OpDZ,EAAO,GACX,GAAmB,IAAhBrZ,EAAEoD,KAAKiE,KAAW,CACnB,IAAIuI,EAAInT,EAAMmc,UAAUtL,QAAO,SAACzG,GAAD,OAAMA,EAAE2F,cAAgBxM,EAAEoD,KAAKsF,YAAW,GACtEkH,IACDyJ,EAAOzJ,EAAEuR,aAlPKD,EAqPPlhB,EAAEoD,KAAK5E,MArPcuS,EAqPRsI,EArPqBS,EAqPhB9Z,EAAEoD,KAAK0W,WArPoBG,EAqPT,CAACC,OAAOla,EAAEoD,KAAK8W,OAAQC,WAAWna,EAAEoD,KAAK+W,YArPfnG,GAAQ,SAAAxG,GAAC,MAAI,CAACpK,KAAK8d,EAAcnN,MAAK,EAAKhD,aAAaA,EAAa+I,WAAWA,EAAWG,aAAaA,OAwP7KmH,EAAc,SAACnF,EAAKhc,GACH,IAAlBgc,EAAK7Y,KAAKiE,KACX8V,EAAWd,MAAMpc,GAAOohB,WAAWpF,EAAK7Y,MAGxCia,EAAYhB,MAAMpc,GAAOohB,WAAWpF,EAAK7Y,MAE3C4d,MAGF,SAASM,EAAcC,EAAIC,EAAMvhB,GAQxB,IAAD,yDAAJ,GAAI,IAPNwhB,iBAOM,MAPM,kBAAM,GAOZ,MANNC,kBAMM,MANO,GAMP,MALNlf,aAKM,MALC,IAKD,MAJNmf,cAIM,MAJG,SAACzhB,GAAD,OAAO,GAAK,GAAFA,GAIb,MAHN0hB,cAGM,MAHG,SAAC1hB,GAAD,MAAS,GAAFA,GAGV,MAFN2hB,kBAEM,MAFO,SAAC3hB,GAAD,OAAQ,IAAIA,EAAE,GAErB,MADN4hB,kBACM,MADM,GACN,EAEFC,EAAa,IACbC,EAAG,IACHC,EAAG,GACHC,EAAWC,OAAoB7iB,GAAE,SAAAuH,GAAC,OAAK8a,EAAO9a,EAAEtH,MAAKA,GAAE,SAAAsH,GAAC,OAAK+a,EAAO/a,EAAEvH,MACtE8iB,EAAMD,OAAUE,SAAS,CAACL,EAAGC,KACjCV,EAAMa,EAAIb,IAENe,MAAK,SAASzb,GAAKA,EAAEtH,EAAIsH,EAAE0b,MAAQR,KAEvC,IAAIS,EAAKC,IACLC,GAAMF,EACVjB,EAAIe,MAAK,SAAAzb,GACHA,EAAEvH,EAAIojB,IAAIA,EAAK7b,EAAEvH,GACjBuH,EAAEvH,EAAIkjB,IAAIA,EAAK3b,EAAEvH,MAGvB,IAAMqjB,EAAMR,KAAUlD,EAAe2D,SAChCC,OAAO,OACPC,KAAK,UAAW,CAAC,EAAG,EAAGtgB,EAAQkgB,EAAKF,EAAU,EAALR,IACzCc,KAAK,KAAKtB,GACVsB,KAAK,QAAQhB,GACbrf,MAAM,WAAY,WAEjBkN,EAAIgT,EAAIE,OAAO,KAChBC,KAAK,cAAe,cACpBA,KAAK,YAAa,IAClBA,KAAK,YAHA,oBAG0BpB,EAH1B,YAGwCM,EAAKQ,EAH7C,MAKV7S,EAAEkT,OAAO,KACRC,KAAK,OAAO,QACZC,UAAU,KACV3f,KAAKwX,EAAMtN,QAAO,SAACzG,GAAD,OAAwB,MAAjBA,EAAE8U,kBAC3B7a,MAAK,SAAAkiB,GACJ,IAAIC,EAAOD,EACRH,OAAO,KAoBV,OAnBAI,EAAKJ,OAAO,QACXC,KAAK,QAAS,KACdA,KAAK,SAAS,GACdA,KAAK,IAAIN,EAAG,IACZM,KAAK,OAAO,SACZA,KAAK,KAAI,SAACjc,EAAE7G,GAAH,OAAO6hB,EAAW7hB,MAC5BijB,EAAKJ,OAAO,QACXC,KAAK,OAAO,SACZA,KAAK,IAAIN,EAAG,IACZM,KAAK,KAAI,SAACjc,EAAE7G,GAAH,OAAO6hB,EAAW7hB,MAC3B8iB,KAAK,cAAe,SACpBrgB,MAAM,cAAc,KACpBqJ,MAAK,SAAAjF,GAAC,OAAGA,EAAE6B,YACZua,EAAKJ,OAAO,QACXC,KAAK,OAAO,SACZA,KAAK,IAAIN,EAAG,IACZM,KAAK,KAAI,SAACjc,EAAE7G,GAAH,OAAO6hB,EAAW7hB,MAC3B8iB,KAAK,cAAe,SACpBhX,MAAK,SAAAjF,GAAC,OAAIA,EAAEtI,SACN0kB,KAGItT,EAAEkT,OAAO,KACnBC,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBA,KAAK,eAAgB,KACrBC,UAAU,QACV3f,KAAKme,EAAI2B,SACTpiB,KAAK,QACHgiB,KAAK,UAAU,SAAAjc,GAAC,OAAI4a,EAAU5a,EAAE2Z,SAAWiB,EAAU5a,EAAEnD,QAAU,MAAQ,QACzEof,KAAK,kBAAkB,SAAAjc,GAAC,OAAI4a,EAAU5a,EAAE2Z,SAAWiB,EAAU5a,EAAEnD,QAAU,EAAI,QAC7Eof,KAAK,IAAKZ,GAEFvS,EAAEkT,OAAO,KACnBC,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBC,UAAU,KACV3f,KAAKme,EAAI4B,eACTriB,MAAK,SAAAkiB,GACE,IAAII,EAAYJ,EACfH,OAAO,KACPC,KAAK,QAAS,QA0Bf,OAzBAM,EAAUP,OAAO,QAChBC,KAAK,QAAS,KACdA,KAAK,SAAS,IACdA,KAAK,QAAS,SACfM,EAAUP,OAAO,QAChBC,KAAK,SAAS,SAAAjc,GAAC,OAAIA,EAAEzD,KAAK+W,cAC1B2I,KAAK,SAAS,IACdA,KAAK,QAAS,QACdA,KAAK,QAAO,SAAAjc,GAAC,OAAIoZ,EAASpZ,MAC3Buc,EAAUP,OAAO,QAChBC,KAAK,QAAS,KACdA,KAAK,SAAS,IACdA,KAAK,QAAS,SACdO,GAAG,SAAQ,SAACxc,EAAE7G,GAAH,OAAOihB,EAASpa,EAAE7G,MAC9BojB,EAAUP,OAAO,QAChBC,KAAK,KAAK,SAAAjc,GAAC,OAAIA,EAAEuV,SAAW,EAAE,OAC9B0G,KAAK,cAAe,KACpBA,KAAK,KAAI,SAAAjc,GAAC,OAAIA,EAAEuV,UAAW,EAAE,MAC7BtQ,MAAK,SAAAjF,GAAC,iBAAQzB,WAAWyB,EAAEzD,KAAK+W,YAAYC,QAAQ,GAA9C,SACPgJ,EAAUP,OAAO,QAChBC,KAAK,QAAQ,SAAAjc,GAAC,OAAI4a,EAAU5a,GAAK,MAAQ,QACzCic,KAAK,KAAK,SAAAjc,GAAC,OAAIA,EAAEuV,UAAY,GAAG,MAChC0G,KAAK,KAAK,SAAAjc,GAAC,OAAIA,EAAEuV,SAAW,EAAI,OAChC0G,KAAK,eAAe,SAAAjc,GAAC,OAAIA,EAAEuV,SAAW,SAAW,WACjDtQ,MAAK,SAAAjF,GAAC,OAAIvK,EAAMuK,EAAEzD,SACZggB,KAEZN,KAAK,aAAa,SAAAjc,GAAC,0BAAiB8a,EAAO9a,EAAEtH,GAAG,GAA7B,YAAmCqiB,EAAO/a,EAAEvH,GAAG,GAA/C,QAExB,OAAOqjB,EAAI1G,OAGb,SAASqH,EAAM/B,EAAIC,EAAMvhB,GAOhB,IAAD,yDAAJ,GAAI,IANNwhB,iBAMM,MANM,kBAAM,GAMZ,MALNC,kBAKM,MALO,GAKP,MAJNlf,aAIM,MAJC,IAID,MAHNmf,cAGM,MAHG,SAACzhB,GAAD,OAAO,GAAK,GAAFA,GAGb,MAFN0hB,cAEM,MAFG,SAAC1hB,GAAD,MAAS,GAAFA,GAEV,MADN4hB,kBACM,MADM,GACN,EAEFC,EAAa,IACbC,EAAG,IACHC,EAAG,GACHC,EAAWC,OAAoB7iB,GAAE,SAAAuH,GAAC,OAAK8a,EAAO9a,EAAEtH,MAAKA,GAAE,SAAAsH,GAAC,OAAK+a,EAAO/a,EAAEvH,MACtE8iB,EAAMD,OAAUE,SAAS,CAACL,EAAGC,KACjCV,EAAMa,EAAIb,IAENe,MAAK,SAASzb,GAAKA,EAAEtH,EAAIsH,EAAE0b,MAAQR,KAEvC,IAAIS,EAAKC,IACLC,GAAMF,EACVjB,EAAIe,MAAK,SAAAzb,GACHA,EAAEvH,EAAIojB,IAAIA,EAAK7b,EAAEvH,GACjBuH,EAAEvH,EAAIkjB,IAAIA,EAAK3b,EAAEvH,MAGvB,IAAMqjB,EAAMR,KAAUpD,EAAO6D,SACxBC,OAAO,OACPC,KAAK,UAAW,CAAC,EAAG,EAAGtgB,EAAQkgB,EAAKF,EAAU,EAALR,IACzCc,KAAK,KAAKtB,GACVsB,KAAK,QAAQhB,GACbrf,MAAM,WAAY,WAEjBkN,EAAIgT,EAAIE,OAAO,KAChBC,KAAK,cAAe,cACpBA,KAAK,YAAa,IAClBA,KAAK,YAHA,oBAG0BpB,EAH1B,YAGwCM,EAAKQ,EAH7C,MAKG7S,EAAEkT,OAAO,KACnBC,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBA,KAAK,eAAgB,KACrBC,UAAU,QACV3f,KAAKme,EAAI2B,SACTpiB,KAAK,QACHgiB,KAAK,UAAU,SAAAjc,GAAC,OAAI4a,EAAU5a,EAAE2Z,SAAWiB,EAAU5a,EAAEnD,QAAU,MAAQ,QACzEof,KAAK,kBAAkB,SAAAjc,GAAC,OAAI4a,EAAU5a,EAAE2Z,SAAWiB,EAAU5a,EAAEnD,QAAU,EAAI,QAC7Eof,KAAK,IAAKZ,GAEFvS,EAAEkT,OAAO,KACnBC,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBC,UAAU,KACV3f,KAAKme,EAAI4B,eACTriB,MAAK,SAAAkiB,GACE,IAAII,EAAYJ,EACfH,OAAO,KACPC,KAAK,QAAS,QACfM,EAAUP,OAAO,QAChBC,KAAK,QAAS,KACdA,KAAK,SAAS,IACdA,KAAK,QAAS,SACfM,EAAUP,OAAO,QAChBC,KAAK,SAAS,SAAAjc,GAAC,OAAIA,EAAEzD,KAAK+W,cAC1B2I,KAAK,SAAS,IACdA,KAAK,QAAS,QACdA,KAAK,QAAO,SAAAjc,GAAC,OAAIoZ,EAASpZ,MAC3Buc,EAAUP,OAAO,QAChBC,KAAK,QAAS,KACdA,KAAK,SAAS,IACdA,KAAK,QAAS,SACdO,GAAG,SAAQ,SAACxc,EAAE7G,GAAH,OAAOihB,EAASpa,EAAE7G,MAC9BojB,EAAUP,OAAO,QAChBC,KAAK,KAAK,SAAAjc,GAAC,OAAIA,EAAEuV,SAAW,EAAE,OAC9B0G,KAAK,cAAe,KACpBA,KAAK,KAAI,SAAAjc,GAAC,OAAIA,EAAEuV,UAAW,EAAE,MAC7BtQ,MAAK,SAAAjF,GAAC,iBAAQzB,WAAWyB,EAAEzD,KAAK+W,YAAYC,QAAQ,GAA9C,SACPgJ,EAAUP,OAAO,QAChBC,KAAK,QAAQ,SAAAjc,GAAC,OAAI4a,EAAU5a,GAAK,MAAQ,QACzCic,KAAK,KAAK,SAAAjc,GAAC,OAAIA,EAAEuV,UAAY,GAAG,MAChC0G,KAAK,KAAK,SAAAjc,GAAC,OAAIA,EAAEuV,SAAW,EAAI,OAChC0G,KAAK,eAAe,SAAAjc,GAAC,OAAIA,EAAEuV,SAAW,SAAW,WACjDtQ,MAAK,SAAAjF,GAAC,OAAIvK,EAAMuK,EAAEzD,SACnBggB,EAAUP,OAAO,UAChBC,KAAK,KAAI,SAACjc,GAAD,OAAMA,EAAEwY,OAAQ,EAAE,KAC3ByD,KAAK,OAAO,QACZA,KAAK,MAAK,SAACjc,GAAD,OAAMA,EAAEwY,OAAQ,GAAG,KAC7ByD,KAAK,MAAM,SAACjc,EAAE7G,GAAO,MAAO,IAAIwI,SAAS3B,EAAEvH,GAAGsR,WAAWpI,SAAS3B,EAAEtH,GAAGqR,cACvEyS,GAAG,aAAa,SAAC3U,EAAD,GAAiB,IAAR9N,EAAO,oBAACwiB,EAAUG,OAAO,KAAK/a,SAAS5H,EAAEtB,GAAGsR,WAAWpI,SAAS5H,EAAErB,GAAGqR,YAAYnO,MAAM,OAAO,UACvH4gB,GAAG,YAAa,SAAC3U,EAAD,GAAiB,IAAR9N,EAAO,oBAACwiB,EAAUG,OAAO,KAAK/a,SAAS5H,EAAEtB,GAAGsR,WAAWpI,SAAS5H,EAAErB,GAAGqR,YAAYnO,MAAM,OAAO,WACvH4gB,GAAG,SAAS,SAACxc,EAAE7G,GAAH,OAASohB,EAAYphB,EAAEC,MACpCmjB,EAAUP,OAAO,SAChBC,KAAK,cAAa,SAACjc,GAAD,OAAMA,EAAEwY,OAAQ,iDAAiD,QACnFyD,KAAK,SAAS,SAACjc,GAAD,OAAMA,EAAEwY,OAAQ,EAAG,KACjCyD,KAAK,UAAU,SAACjc,GAAD,OAAMA,EAAEwY,OAAQ,EAAE,KACjCyD,KAAK,KAAI,SAACjc,GAAD,OAAMA,EAAEwY,OAAQ,GAAG,KAC5ByD,KAAK,KAAI,SAACjc,GAAD,OAAMA,EAAEwY,QAAS,EAAE,KAC5ByD,KAAK,QAAQ,SACEM,EAAUP,OAAO,UAChCC,KAAK,IAAK,GACVrgB,MAAM,QAAO,SAAAoE,GAAC,OAAIA,EAAEzD,KAAKqZ,OAAO,OAAO,eACvCqG,KAAK,MAAM,SAACjc,GAAD,OAAMA,EAAEwY,OAAQ,GAAI,MAC/ByD,KAAK,MAAM,SAACjc,EAAE7G,GAAO,MAAO,IAAIwI,SAAS3B,EAAEvH,GAAGsR,WAAWpI,SAAS3B,EAAEtH,GAAGqR,cACvEyS,GAAG,aAAa,SAAC3U,EAAD,GAAiB,IAAR9N,EAAO,qBACV,IAAlBA,EAAEwC,KAAKqZ,QAAiB2G,EAAUG,OAAO,KAAK/a,SAAS5H,EAAEtB,GAAGsR,WAAWpI,SAAS5H,EAAErB,GAAGqR,YAAYnO,MAAM,OAAO,WAElH4gB,GAAG,YAAa,SAAC3U,EAAD,GAAiB,IAAR9N,EAAO,qBACV,IAAlBA,EAAEwC,KAAKqZ,QAAiB2G,EAAUG,OAAO,KAAK/a,SAAS5H,EAAEtB,GAAGsR,WAAWpI,SAAS5H,EAAErB,GAAGqR,YAAYnO,MAAM,OAAO,gBAElH4gB,GAAG,SAAS,SAACxc,EAAE7G,GAAH,OAAS8gB,EAAW9gB,EAAEC,MAUnC,OATAmjB,EAAUP,OAAO,SAChBC,KAAK,aAAa,gDAClBA,KAAK,QAAS,IACdA,KAAK,SAAU,IACfA,KAAK,KAAI,SAACjc,GAAD,OAAMA,EAAEwY,OAAQ,GAAG,MAC5ByD,KAAK,KAAK,GACVA,KAAK,QAAQ,SACdM,EAAUP,OAAO,SAChB/W,MAAK,SAAAjF,GAAC,gBAAOzB,WAAWyB,EAAEzD,KAAK+W,YAAYC,QAAQ,GAA7C,sBAA6DhV,WAAWyB,EAAEzD,KAAK8W,YAC/EkJ,KAEZN,KAAK,aAAa,SAAAjc,GAAC,0BAAiB8a,EAAO9a,EAAEtH,GAAG,GAA7B,YAAmCqiB,EAAO/a,EAAEvH,GAAG,GAA/C,QACxB,OAAOqjB,EAAI1G,OAGb,IAAM+E,GAAa,WAGT,IAAD,yDAAP,GAAO,IAFPW,cAEO,MAFE,SAACzhB,GAAD,OAAO,GAAK,GAAFA,GAEZ,MADP0hB,cACO,MADE,SAAC1hB,GAAD,MAAS,GAAFA,GACT,EACPiiB,KAAA,cAA2BqB,SAC3B,cAAc3mB,OAAOC,KAAKqgB,EAAWd,OAArC,eAA4C,CAAvC,IAAIrc,EAAC,KACJyjB,EAAItB,KAAahF,EAAWd,MAAMrc,GAAG0jB,WAAW,SAAS7c,GAAG,OAAOA,EAAEuV,YACzEkH,EAAMG,EAAD,aAASzjB,GAAIA,EAAE,CAClB2hB,OAASjD,EAAM9f,OAAOuB,OAAS,EAAG,SAACD,GAAD,OAAK,IAAM,GAAFA,GAAMyhB,EACjDC,OAASA,EACTE,WAAY,cAGhBK,KAAA,eAA4BqB,SAC5B,IAXO,iBAWF,IAAIxjB,EAAC,KACJvD,EAAMua,cAAc1J,QAAO,SAACzG,GAAD,OAAMA,EAAEnI,SAAW2e,EAAYhB,MAAMrc,GAAG0jB,UAAU1D,cAAa,KAC5FmC,KAAA,eAAqBniB,IAAKwjB,SAE1BF,EADQnB,KAAa9E,EAAYhB,MAAMrc,GAAG0jB,WAAW,SAAS7c,GAAG,OAAOA,EAAEuV,YACrE,cAAUpc,GAAIA,EAAE,CACnB8hB,WAAY,iBALlB,MAAcjlB,OAAOC,KAAKugB,EAAYhB,OAAtC,eAA8C,KAuDhD,SAASsH,GAAcC,EAAcC,EAAMC,EAAKC,EAAMC,EAAgBC,EAAiBC,EAAYC,EAAOC,EAAOC,EAAMC,GACrH9N,GAAQqN,EAAMC,EAAKC,EAAM7D,EAA2B8D,EAAgBC,GAAkBC,GAAahZ,MAAK,SAACC,GACvG,GAAGA,EAAI,CAEL,IAFK,EAEDoZ,EAAY9nB,EAAMmc,UAAUtL,QAAO,SAACzG,GAAD,OAAMA,EAAE2F,cAAgBsX,KAAO,GAClEU,EAAgB,GAHf,cAIYrZ,GAJZ,IAIL,2BAAqB,CAAC,IAAbsZ,EAAY,QACfzE,EAAa,GACjB,GAAa,IAAV+D,GAAeQ,EAAU,CAC1B,IAD0B,EACtBG,EAAaD,EAAK5b,MAAM+H,WAAWvQ,MAAM,KADnB,cAELqkB,GAFK,yBAElBC,EAFkB,QAGpBxD,EAAcoD,EAAUxT,aAAazD,QAAO,SAAChB,GAAD,OAAQA,EAAE2E,SAAUL,aAAgB+T,EAAW/T,cAAc,GAC1GuQ,IAAYnB,GAAYmB,EAAYjQ,gBAAgB,OAFzD,IAAI,EAAJ,qBAAiC,IAFP,+BAO5B,GAAc,IAAV6S,GAA8B,gBAAfU,EAAK5b,OAAqC,IAAVkb,GAA8B,OAAf/D,GAAsC,KAAfA,GAAqC,gBAAfyE,EAAK5b,MAAyB,CAC3I,IAAIsG,EAAI3F,KAAK+V,MAAM/V,KAAKC,UAAU2V,EAAcqF,EAAD,cAAab,GAAgBO,EAAOH,EAAgBhE,EAAWkE,EAAYI,KAC1HE,EAActlB,KAAKiQ,KAflB,8BAkBL,IAAIyV,EAAU,GACd,GAAGP,EACDA,EAAMQ,YAAYV,EAAOK,QAEtB,GAAkB,IAAfF,EACN,IAAI,IAAIpkB,EAAE,EAAEA,EAAEskB,EAAcrkB,OAAOD,IACjC0kB,EAAU1kB,GAAG,IAAI2b,GAAU2I,EAActkB,IAI7C,IAAI4kB,EAAQ,cAAUlB,EAAc,GAChCmB,EAAYnK,EAAMtN,QAAO,SAACzG,GAAD,OAAMA,EAAE2T,OAAOsK,KAC5C,GAAGC,EAAU,IAAMP,EAAcrkB,OAAO,GACtC,GAAG4kB,EAAU,GAAGpJ,cAAc,CAC5B,IAD4B,EACxB3b,EAAI,EADoB,cAEVwkB,GAFU,IAE5B,2BAAgC,CAAC,IAAxB7H,EAAuB,QAC3B0H,EACDV,GAAcC,EAAc,EAAEmB,EAAU,GAAG7O,KAAK6O,EAAU,GAAGpJ,cAAcoJ,EAAU,GAAG1d,KAAKsV,EAAMne,MAAMumB,EAAU,GAAGtK,iBAAiByJ,EAAYvH,EAAMyH,EAAOC,EAAMC,GAEjJ,IAAfA,GACNX,GAAcC,EAAc,EAAEmB,EAAU,GAAG7O,KAAK6O,EAAU,GAAGpJ,cAAcoJ,EAAU,GAAG1d,KAAKsV,EAAMne,MAAMumB,EAAU,GAAGtK,iBAAiByJ,EAAYvH,EAAM3c,EAAE4kB,EAAU5kB,GAAGskB,GAE5KtkB,GAAG,GATyB,oCAa5B,GAAkB,IAAfskB,EACD,GAAW,OAARD,EAAa,CACd,IAAIW,EAAUnoB,OAAOsQ,OAAO,GAAGgQ,EAAWd,OAC1C2I,EAAQZ,GAAUC,EAClBjH,GAAc,SAAC5P,GAAD,mBAAC,eAASA,GAAV,IAAY6O,MAAM2I,YAGhC5H,GAAc,SAAC5P,GAAD,mBAAC,eAASA,GAAV,IAAY6O,MAAMuI,YAG/B,GAAkB,IAAfN,GACHD,GAASD,EAAO,CACjB,IAAIY,EAAUnoB,OAAOsQ,OAAO,GAAGkQ,EAAYhB,OAC3C2I,EAAQZ,GAAUC,EAClB/G,GAAe,SAAC9P,GAAD,mBAAC,eAASA,GAAV,IAAY6O,MAAM2I,aAMvC,GAAkB,IAAfV,EACD,GAAGF,GAAUC,EAAM,CACjB,IAAIW,EAAUnoB,OAAOsQ,OAAO,GAAGgQ,EAAWd,OAC1C2I,EAAQZ,GAAUC,EAClBjH,GAAc,SAAC5P,GAAD,mBAAC,eAASA,GAAV,IAAY6O,MAAM2I,YAGhC5H,GAAc,SAAC5P,GAAD,mBAAC,eAASA,GAAV,IAAY6O,MAAMuI,YAG/B,GAAkB,IAAfN,GACHD,GAASD,EAAO,CACjB,IAAIY,EAAUnoB,OAAOsQ,OAAO,GAAGkQ,EAAYhB,OAC3C2I,EAAQZ,GAAUC,EAClB/G,GAAe,SAAC9P,GAAD,mBAAC,eAASA,GAAV,IAAY6O,MAAM2I,YA8B7C,SAASpJ,GAAWqJ,GAClB,IAAIC,EAAkB1c,SAASyc,EAAaE,OAAO,IAC/C3K,EAAOI,EAAMtN,QAAO,SAACzG,GAAD,OAAMA,EAAE2T,OAAOyK,KACvC,GAAmB,UAAhBA,EAAwB,CACzB,IADyB,EACrBG,EAAO,GACPC,EAAK7b,KAAK+V,MAAM/V,KAAKC,UAAUiV,EAAM9f,SACrC0mB,EAAO,EAHc,cAIJD,GAJI,IAIzB,2BAAwB,CAAC,IAAhBE,EAAe,QAClBC,EAAS3oB,OAAOsQ,OAAO,GAAGoY,GAC1BpW,EAAIiQ,EAAcoG,EAAQ,QAAQ,KAAK,KAAMA,EAAQ9mB,OAAO8mB,EAAQ9mB,OAAO,GAC/E0mB,EAAKE,GAAM,IAAIzJ,GAAU1M,GACzBmW,GAAM,GARiB,8BAUzBhI,GAAe,SAAC9P,GAAD,MAAM,CAAE6O,MAAM+I,EAAMlI,MAAO1P,EAAE0P,SAE9C,GAAG1C,EAAK,GACN,GAAmB,UAAhByK,EAAwB,CACzB7H,GAAc,SAAC5P,GAAD,MAAM,CAAE6O,MAAM,GAAIa,MAAO1P,EAAE0P,SACzC,cAAcrgB,OAAOC,KAAKugB,EAAYhB,OAAtC,eAA6C,CAAxC,IAAwC,EAApCrc,EAAC,KACJylB,EAAU5oB,OAAOsQ,OAAO,GAAG,CAACkQ,EAAYhB,MAAMrc,KAC9C0lB,EAAQrI,EAAYhB,MAAMrc,GAAG8c,gBAArB,cAA4CoI,EAAgB,GAAI7H,EAAYhB,MAAMrc,GAAG0jB,WAFtD,cAG3BgC,GAH2B,IAG3C,IAAI,EAAJ,qBAAsB,CAAC,IAAfC,EAAc,QACpBhC,GAAcuB,EAAgB1K,EAAK,GAAGtE,KAAKsE,EAAK,GAAGmB,cAAcnB,EAAK,GAAGnT,KAAK,GAAGmT,EAAK,GAAGC,iBAAiBkL,EAAK7L,WAAW6L,EAAK3lB,EAAEylB,EAAQ,GAAG,IAJnG,oCAS3C,CACF,cAAc5oB,OAAOC,KAAKqgB,EAAWd,OAArC,eAA4C,CAAvC,IAAuC,EAAnCrc,EAAC,KACJylB,EAAU5oB,OAAOsQ,OAAO,GAAG,CAACgQ,EAAWd,MAAMrc,KAC7C0lB,EAAQvI,EAAWd,MAAMrc,GAAG8c,gBAApB,cAA2CoI,EAAgB,GAAI/H,EAAWd,MAAMrc,GAAG0jB,WAFrD,cAG1BgC,GAH0B,IAG1C,IAAI,EAAJ,qBAAsB,CAAC,IAAfC,EAAc,QACpBhC,GAAcuB,EAAgB1K,EAAK,GAAGtE,KAAKsE,EAAK,GAAGmB,cAAcnB,EAAK,GAAGnT,KAAKse,EAAKnnB,MAAMgc,EAAK,GAAGC,iBAAiBkL,EAAK7L,WAAW6L,EAAK3lB,EAAEylB,EAAQ,GAAG,IAJ5G,+BAO5C,cAAc5oB,OAAOC,KAAKugB,EAAYhB,OAAtC,eAA6C,CAAxC,IAAwC,EAApCrc,EAAC,KACJylB,EAAU5oB,OAAOsQ,OAAO,GAAG,CAACkQ,EAAYhB,MAAMrc,KAC9C0lB,EAAQrI,EAAYhB,MAAMrc,GAAG8c,gBAArB,cAA4CoI,EAAgB,GAAI7H,EAAYhB,MAAMrc,GAAG0jB,WAFtD,cAG3BgC,GAH2B,IAG3C,IAAI,EAAJ,qBAAsB,CAAC,IAAfC,EAAc,QACpBhC,GAAcuB,EAAgB1K,EAAK,GAAGtE,KAAKsE,EAAK,GAAGmB,cAAcnB,EAAK,GAAGnT,KAAKse,EAAKnnB,MAAMgc,EAAK,GAAGC,iBAAiBkL,EAAK7L,WAAW6L,EAAK3lB,EAAEylB,EAAQ,GAAG,IAJ3G,iCAgCnD,OA5NA3jB,qBAAU,WACRkf,OACA,CAAC7D,EAAWd,MAAMgB,EAAYhB,QAqIhCva,qBAAU,WACR,IAAI8jB,EAAYhL,EAAMtN,QAAO,SAACzG,GAAD,MAAe,UAATA,EAAE2T,QAAiB,GACtD,GAAGkE,EAAM9f,QAAUgnB,EAAUjK,cAC3B,cAAc9e,OAAOC,KAAKugB,EAAYhB,OAAtC,eAA6C,CAAxC,IAAIrc,EAAC,KACJylB,EAAU5oB,OAAOsQ,OAAO,GAAG,CAACkQ,EAAYhB,MAAMrc,KAC9C6lB,EAAUhpB,OAAOsQ,OAAO,GAAGkQ,EAAYhB,MAAMrc,GAAG0jB,WACpDC,GAAc,EAAEiC,EAAU1P,KAAK0P,EAAUjK,cAAciK,EAAUve,KAAK,GAAGue,EAAUnL,iBAAiBoL,EAAQ/L,WAAW+L,EAAQ7lB,EAAEylB,EAAQ,GAAG,MAGhJ,CAACpI,EAAYH,OAEfpb,qBAAU,WACR,IAAI8jB,EAAYhL,EAAMtN,QAAO,SAACzG,GAAD,MAAe,UAATA,EAAE2T,QAAiB,GACnDoL,EAAUjK,eACTgI,GAAc,EAAEiC,EAAU1P,KAAK0P,EAAUjK,cAAciK,EAAUve,KAAK,GAAGue,EAAUnL,iBAAiB,OAAO,KAAK,KAAK,KAAK,KAE9H,CAAC0C,EAAWD,OAsEd,gCACE,sBAAKnb,UAAU,oBAAf,UACA,gCACE,wBAAQA,UAAU,gBAAgB6B,QAAS,YArpB3B,WAClBue,KAAA,sBAAmCqB,SACnC,cAAc3mB,OAAOC,KAAKqgB,EAAWd,OAArC,eAA4C,CAAvC,IAAIrc,EAAC,KAERshB,EADQa,KAAahF,EAAWd,MAAMrc,GAAG0jB,WAAW,SAAS7c,GAAG,OAAOA,EAAEuV,YAC5D,cAAUpc,GAAIA,EAAE,CAC3B2hB,OAASllB,EAAMua,cAAc7W,OAAQ,EAAG,SAACD,GAAD,OAAO,IAAM,GAAFA,GAAO,SAACA,GAAD,OAAO,GAAK,GAAFA,GACpE2hB,WAAYplB,EAAMua,cAAc7W,OAAQ,EAAG,SAACD,GAAD,OAAY,IAAIA,EAAE,EAAX,KAAc,SAACA,GAAD,OAAQ,IAAIA,EAAE,GAC9E4hB,WAAY,sBAEhBK,KAAA,uBAAoCqB,SACpC,IAVwB,iBAUnB,IAAIxjB,EAAC,KACJvD,EAAMua,cAAc1J,QAAO,SAACzG,GAAD,OAAMA,EAAEnI,SAAW2e,EAAYhB,MAAMrc,GAAG0jB,UAAU1D,cAAa,IAE5FsB,EADQa,KAAa9E,EAAYhB,MAAMrc,GAAG0jB,WAAW,SAAS7c,GAAG,OAAOA,EAAEuV,YAC7D,eAAWpc,GAAIA,EAAE,CAC5B6hB,WAAYplB,EAAMua,cAAc7W,OAAQ,EAAG,SAACD,GAAD,OAAY,IAAIA,EAAE,EAAX,KAAc,SAACA,GAAD,OAAQ,IAAIA,EAAE,GAC9E4hB,WAAY,wBALlB,MAAcjlB,OAAOC,KAAKugB,EAAYhB,OAAtC,eAA8C,IAS9C,IAnBwB,iBAmBnB,IAAIrc,EAAC,KACRgd,EAAQ,QAAD,OAAShd,GAAT,yBAAgCA,GAAK,CAC1C8lB,MAAO,EACPC,OAAQ,MACRC,QAAS,IACTC,OAAQ,KACRC,UAAU,EACV1jB,MAAM,IACN2jB,UAAW,IACVjb,MAAK,SAAAkb,GACN5I,EAAS6I,KAAT,yBAAgCrmB,EAAhC,QAAwComB,EAAS/lB,MAAM,WAAW,GAAG,CAACimB,QAAQ,IACjC,IAA1CzpB,OAAOC,KAAKugB,EAAYhB,OAAOlc,QAAgBqI,SAASxI,KAAQnD,OAAOC,KAAKqgB,EAAWd,OAAOlc,OAAO,IACtGigB,IACA+B,KAAa,sBAAsBqB,SACnCrB,KAAa,uBAAuBqB,cAd1C,MAAc3mB,OAAOC,KAAKqgB,EAAWd,OAArC,eAA6C,IAkB7C,IArCwB,iBAqCnB,IAAIrc,EAAC,KACRgd,EAAQ,SAAD,OAAUhd,GAAV,+BAAuCA,GAAK,CACjD8lB,MAAO,EACPC,OAAQ,MACRC,QAAS,IACTC,OAAQ,KACRC,UAAS,EACT1jB,MAAM,IACN2jB,UAAW,IACVjb,MAAK,SAAAkb,GACN5I,EAAS6I,KAAT,+BAAsCrmB,EAAtC,QAA8ComB,EAAS/lB,MAAM,WAAW,GAAG,CAACimB,QAAQ,IACjF9d,SAASxI,KAAQnD,OAAOC,KAAKugB,EAAYhB,OAAOlc,OAAO,IACxDigB,IACA+B,KAAa,sBAAsBqB,SACnCrB,KAAa,uBAAuBqB,cAd1C,MAAc3mB,OAAOC,KAAKugB,EAAYhB,OAAtC,eAA8C,IAgnBMkK,IAAlD,SAAkE,cAAC,KAAD,MAClE,wBAAQxkB,UAAU,gBAAgB6B,QAAS,WAzB7CkX,EAAS,CACP,CAACN,KAAK,QAASmB,cAAe,KAAMtU,KAAM,KAAM0J,aAAc,GAAIvK,IAAK,EAAGC,IAAK,IAAOiC,SAAU,KAAMnK,MAAM,KAAMsc,aAAa,UAAW3E,KAAK,EAAGuE,iBAAiB,GAAImE,aAAa,IACpL,CAACpE,KAAK,QAASmB,cAAe,KAAMtU,KAAM,KAAM0J,aAAc,GAAIvK,IAAK,EAAGC,IAAK,IAAOiC,SAAU,KAAMnK,MAAM,KAAMsc,aAAa,UAAW3E,KAAK,EAAGuE,iBAAiB,GAAImE,aAAa,IACpL,CAACpE,KAAK,QAASmB,cAAe,KAAMtU,KAAM,KAAM0J,aAAc,GAAIvK,IAAK,EAAGC,IAAK,IAAOiC,SAAU,KAAMnK,MAAM,KAAMsc,aAAa,UAAW3E,KAAK,EAAGuE,iBAAiB,GAAImE,aAAa,IACpL,CAACpE,KAAK,QAASmB,cAAe,KAAMtU,KAAM,KAAM0J,aAAc,GAAIvK,IAAK,EAAGC,IAAK,IAAOiC,SAAU,KAAMnK,MAAM,KAAMsc,aAAa,UAAW3E,KAAK,EAAGuE,iBAAiB,GAAImE,aAAa,MAEtLD,EAAS,CAACnE,KAAK,QAAQ5b,OAAO,KAC9Bwe,EAAc,CAACf,MAAM,GAAGa,KAAK,KAC7BI,EAAe,CAACjB,MAAM,GAAGa,KAAK,KAC9BiF,KAAA,cAA2BqB,SAC3BrB,KAAA,eAA4BqB,SAC5BrB,KAAa,sBAAsBqB,SACnCrB,KAAa,uBAAuBqB,UAalC,SAA8D,cAAC,IAAD,SAE7D9E,EAAM9f,OAAOuB,OAAS,EACrB,8BACE,qBAAM4B,UAAU,YACT,KAGT6Y,EAAM9b,KAAI,SAAA0b,GACR,OACE,gCACKvP,EAAauP,EAAKA,MACnB,sBAAKzY,UAAU,QAAf,UACGmd,EAAqB1E,EAAKA,KAAKA,EAAKoE,cACrC,wBACA7c,UAAU,eACV6B,QAAS,WAjwBuBkb,EAAoB,CAAC/K,MAAK,EAAKyG,KAkwBjCA,KAH9B,SAME,cAAC,KAAD,eAOd,wBAAQgM,KAAK,SAASzkB,UAAU,iBAAiB6B,QAAU,kBArC/C,WACd,IAAI6iB,EAAU,QAAS7L,EAAMza,OAAO,GAAGyQ,WACvCkK,EAAS,GAAD,mBAAKF,GAAL,CAAW,CAACJ,KAAKiM,EAAS9K,cAAe,KAAM5K,aAAa,GAAI1J,KAAM,KAAMb,IAAK,EAAGC,IAAK,IAAMiC,SAAU,KAAMnK,MAAM,KAAMsc,aAAa,UAAW3E,KAAK,EAAGuE,iBAAiB,OAmCjHiM,IAAjE,kBAEF,qBAAKC,IAAK5H,EAAQva,GAAG,WACrB,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAAM,uBAC5Y,qBAAKmiB,IAAK1H,IACV,cAAC,GAAD,CAAiBjF,gBAAiBvd,EAAMud,gBAAiBjG,KAAMA,EAAKA,KAAMC,QAASA,EAAS5Q,KAAM2Q,EAAK3Q,KAAM2N,aAAcgD,EAAKhD,aAAc+I,WAAY/F,EAAK+F,WAAYG,aAAclG,EAAKkG,aAAcrB,UAAWnc,EAAMmc,YAC7N,cAAC,GAAD,CAAmB7E,KAAM8K,EAAiB9K,KAAMC,QAAS8K,EAAqBtE,KAAMqE,EAAiBrE,KAAMM,SAAUA,EAAUF,MAAOA,EAAOgB,WAAYA,SCpwB9IgL,GAzGS,SAACnqB,GAErB,MAAqBC,mBAAS,IAA9B,mBAAO6M,EAAP,KAAYsd,EAAZ,KAEMzT,EAAS,SAACoB,EAAE3N,GACP,UAAJ2N,EAAYC,IAAMtT,MAAM0F,GACf,YAAJ2N,EAAcC,IAAMC,QAAQ7N,GAC/B4N,YAAM5N,IAcTyM,EAAoB,SAACjP,GACvB,IAAIwV,EAAU,CACV1Q,YAAY9E,EAAO8E,YAAY9E,EAAO8E,YAAY1M,EAAM+B,MAAME,OAC9Dob,WAAW,OACX1Q,UAAUG,EAAK8O,aAEd,+BAA+B0B,KAAKF,EAAQ1Q,cAGF,IApB3B,SAAC2d,GACrB,IAD+B,EAC3B1Z,GAAM,EADqB,cAElB0Z,GAFkB,IAE/B,IAAI,EAAJ,qBAAmB,CAAC,IAAZnN,EAAW,QACf,GAAe,OAAZA,EAAE9Q,OAAkC,OAAhB8Q,EAAE/Q,WAAsC,OAAhB+Q,EAAEhR,UAAmB,CAChEyE,GAAM,EACN,QALuB,8BAQ/B,OAAOA,EAYC2Z,CAAgBlN,EAAQzQ,WAC5BgK,EAAO,QAAQ,4DAGfuD,GAAYla,EAAM+B,MAAMgG,GAAGqV,GAAS3O,MAAK,SAAAC,GAClCA,IACIA,EAAG,MACF1O,EAAM2W,OAAO,QAAQjI,EAAG,MAAU8H,QAAQ,kBAAkB,MAG5DxW,EAAMuqB,WAAU,GAChBvqB,EAAMkX,QAAQ,SAb1BP,EAAO,QAAQ,4GA0BvB,OALAtR,qBAAU,WACNrF,EAAMuqB,WAAU,GAChBH,EAAQhqB,OAAOsQ,OAAO,GAAG1Q,EAAM+B,UAChC,CAAC/B,EAAM+B,QAGN,gCACI,cAAC0P,EAAA,EAAD,UACI,0CAEJ,cAACA,EAAA,EAAD,UACA,cAAC,IAAD,CACIN,cAAe,CACfzE,YAAaI,EAAK7K,QAFtB,SAKG,cAAGmP,aAAH,IAAiBzF,EAAjB,EAAiBA,aAAc/D,EAA/B,EAA+BA,OAA/B,EAAuCyJ,OAAvC,EAA+CC,cAA/C,OACC,eAACO,EAAA,EAAD,CAAKyB,GAAI,GAAT,UACI,cAAC/B,EAAA,EAAD,UACI,eAACA,EAAA,EAAKG,MAAN,CAAYC,GAAIF,IAAKnM,UAAU,OAAOsM,UAAU,gBAAhD,UACI,cAACL,EAAA,EAAKqE,MAAN,CAAYjE,GAAG,SAASkE,QAAM,EAAC/D,GAAI,EAAnC,qBAGA,cAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,cAACP,EAAA,EAAKQ,QAAN,CACA6L,UAAQ,EACR9V,KAAK,OACLpF,KAAK,cACL9C,MAAOgI,EAAO8E,YACd/E,SAAUgE,EACVwB,YAAaL,EAAK7K,gBAK9B,eAACwP,EAAA,EAAD,WACI,uBACA,qBAAKnM,UAAU,QAAf,SACI,wDAAwBwH,EAAK2Q,YAEjC,uBACA,qBAAKnY,UAAU,QAAf,SACI,6CAAgBqD,WAAWmE,EAAK4Q,YAAYC,QAAQ,GAApD,qBAGR,cAAC,GAAD,CAA0BhC,SAAUyO,EAASzjB,KAAMmG,EAAK8O,YAAY9O,EAAK8O,YAAY,GAAIO,UAAWnc,EAAMmc,YAC1G,cAACnI,EAAA,EAAD,CAAQ7M,QAAS,kBAAM0P,EAAkBjP,IAASyO,QAAQ,UAAUvO,KAAK,SAAzE,gCCUL0iB,GA1GA,WAEb,MAAyBvqB,mBAAS,CAACkc,UAAU,GAAIxP,UAAU,GAAIlD,OAAQ,CAAC,qBAAqB,UAAU,aAAa,4BAAyB,2BAA2B,YAAY,QAAQ,QAAQ,QAAQ,SAAS,8BAA2B,gCAAhP,mBAAO2X,EAAP,KAAaqJ,EAAb,KACA,EAA0CxqB,mBAAS,IAAnD,mBAAOsa,EAAP,KAAsBC,EAAtB,KACA,EAAwBva,mBAAS,IAAjC,mBAAOgX,EAAP,KAAaC,EAAb,KACA,EAAwCjX,mBAAS,IAAjD,mBAAO8W,EAAP,KAAqBC,EAArB,KACA,EAAsB/W,mBAAS,IAA/B,mBAAYkX,GAAZ,WACA,EAAwBlX,mBAAS,CAACL,OAAM,EAAMmC,MAAM,KAApD,mBAAOuV,EAAP,KAAaC,EAAb,KACA,EAA8BtX,mBAAS,IAAvC,mBAAOsS,EAAP,KAAgB6E,EAAhB,KACA,EAA4BnX,oBAAS,GAArC,mBAAO+a,EAAP,KAAeuP,EAAf,KACA,EAAuCtqB,mBAAS,MAAhD,mBAAO8a,EAAP,KAAoBwC,EAApB,KAEM/F,EAAc,kBAAMD,EAAQ,CAAC3X,OAAM,EAAMmC,MAAM,MAyBrD,SAAS2oB,EAAShY,GAChB,IAAI7P,EAAI6P,EAAE5Q,MAAM4Q,EAAE5Q,MAAM4Q,EAAEvC,OAC1B,MAAO,CAAEvQ,MAAOiD,EAAGhD,MAAOgD,GAG5BwC,qBAAU,WACRmJ,IAAeC,MAAK,SAACC,GACnB,IAAIgE,EAlBR,SAAiB1Q,EAAK2Q,GAQrB,OAPgB3Q,EAAI4Q,QAAO,SAAUC,EAAKC,GAKvC,OAJKD,EAAIC,EAAaH,MACpBE,EAAIC,EAAaH,IAAa,IAEhCE,EAAIC,EAAaH,IAAWlQ,KAA5B,2BAAqCqQ,GAArC,IAAmDpQ,KAAMoQ,EAAY,eAAmB,IAAIA,EAAY,UACjGD,IACP,IAWQE,CAAQrE,EAAK,kBACjB1M,EAAM,GACV,IAAK,IAAIkQ,KAAOQ,EACVA,EAAEM,eAAed,IACnBlQ,EAAIS,KACF,CACE2D,MAAO8L,EACPtK,OAAQ8K,EAAER,GACVpQ,MAAQ4Q,EAAER,GAAK7P,KAAI,SAAAQ,GACjB,OAAO6nB,EAAS7nB,QAM1B4nB,GAAS,SAAA1Z,GAAC,kCAASqQ,GAAT,IAAgBzU,UAAU3K,EAAKma,UAAWzN,YAErD,IAUH,OACE,sBAAKpJ,UAAU,WAAf,UACE,cAAC,GAAD,CAAgByV,aAAcA,EAAcC,OAAQA,EAAQzI,QAASA,EAAS0B,WA5D/D,SAAC/T,GAAD,OAAeqX,EAAQ,CAAC3X,OAAM,EAAKmC,MAAM7B,KA4D8C2H,WA1DxF,SAACvF,GACf0U,EAAgB1U,GAChB4U,EAAQ,oBAwDsH5R,UAAU,MAAMkV,iBAAkBA,EAAkBD,cAAeA,IACjM,sBAAKjV,UAAU,QAAf,UACE,cAAC,GAAD,CAAMiY,gBAAiBA,EAAiBhD,cAAeA,EAAe6J,eAAgBhD,EAAMzU,UAAWA,UAAWyU,EAAMzU,UAAUtK,KAAI,SAAAQ,GAAC,OAZnH,SAACA,GACzB,MAAO,CAAEjD,MAAOiD,EAAEuD,MAAOvG,MAAOgD,EAAEuD,OAW6G2W,CAAkBla,MAAK4G,OAAQ2X,EAAM3X,OAAOpH,KAAI,SAAAQ,GAAC,OARlK,SAACA,GAC/B,MAAO,CAAEjD,MAAOiD,EAAGhD,MAAOgD,GAO0K8nB,CAAwB9nB,MAAKsZ,UAAWiF,EAAMjF,YAC9O,qBAAK7W,UAAW,kBAAkB2R,EAAlC,SACE,sBAAK3R,UAAW,qCAAsC2R,EAAtD,UACE,wBAAQ9P,QAAS,kBAAM+P,EAAQ,KAAK5R,UAAU,mBAA9C,eACA,qBAAKA,UAAU,qBAAf,SACE,cAAC,GAAD,CAAiB4R,QAASA,EAASqT,UAAWA,EAAWxoB,MAAOgV,EAAc9U,OAAQ8U,EAAa9U,OAAQka,UAAWiF,EAAMjF,UAAWvF,aA5D/H,SAACtU,GACjB6U,EAAO7U,GACP0U,EAAgB,IAChBE,EAAQ,KAyDmKF,gBAAiBA,cAK5L,eAACmB,EAAA,EAAD,CAAOb,KAAMA,EAAK1X,MAAOwY,OAAQZ,EAAjC,UACE,cAACW,EAAA,EAAMxE,OAAP,CAAc0E,aAAW,EAAzB,SACE,cAACF,EAAA,EAAMG,MAAP,+BAEF,eAACH,EAAA,EAAMvE,KAAP,iEAA0D0D,EAAKvV,MAAME,OAArE,OACA,eAACkW,EAAA,EAAMI,OAAP,WACE,cAACvE,EAAA,EAAD,CAAQqC,QAAQ,YAAYlP,QAASqQ,EAArC,sBAGA,cAACxD,EAAA,EAAD,CAAQqC,QAAQ,SAASlP,QAAS,WAChCiQ,EAAWE,EAAKvV,OAChByV,KAFF,sCCvGK,IC0DAoT,OAlDf,WACE,OACE,eAAC,IAAD,WACE,qBAAKtlB,UAAU,MAAf,SACE,qBAAKA,UAAU,gDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAb,gBACA,wBACEA,UAAU,iBACVwC,KAAK,SACL,iBAAe,WACf,iBAAe,uBACf,gBAAc,sBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMxC,UAAU,0BAElB,qBAAKA,UAAU,2BAA2ByC,GAAG,sBAA7C,SACE,qBAAIzC,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOulB,GAAG,IAAzD,sBAIF,oBAAIvlB,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWulB,GAAG,eAA9B,oCAIF,oBAAIvlB,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWulB,GAAG,kBAA9B,mDASZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,KACjC,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,eAAeC,UAAW9f,IAC5C,cAAC,IAAD,CAAO4f,OAAK,EAACC,KAAK,kBAAkBC,UAAWlU,KAC/C,cAAC,IAAD,CAAOgU,OAAK,EAACC,KAAK,eAAeC,UAAWnS,Y,cC7CpDoS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF5hB,SAASC,eAAe,W","file":"static/js/main.830331dd.chunk.js","sourcesContent":["export const nacimientoVars = [\r\n  {\r\n    value: \"pesocat\",\r\n    label: \"peso (cat)\",\r\n  },\r\n  {\r\n    value: \"ERN_Peso\",\r\n    label: \"peso\",\r\n  },\r\n  {\r\n    value: \"ERN_Talla\",\r\n    label: \"talla\",\r\n  },\r\n  {\r\n    value: \"ERN_PC\",\r\n    label: \"perímetro cefálico\",\r\n  },\r\n  {\r\n    value: \"RCIUpesoFenton\",\r\n    label: \"RCIUpesoFenton\",\r\n  },\r\n  {\r\n    value: \"RCIUfentonpesotalla\",\r\n    label: \"RCIUfentonpesotalla\",\r\n  },\r\n  {\r\n    value: \"RCIUfentonpesotallaPC\",\r\n    label: \"RCIUfentonpesotallaPC\",\r\n  },\r\n  {\r\n    value: \"RCIUtalla\",\r\n    label: \"RCIUtalla\",\r\n  },\r\n  {\r\n    value: \"RCIUPC\",\r\n    label: \"RCIUPC\",\r\n  },\r\n  {\r\n    value: \"ERN_A_1min\",\r\n    label: \"APGAR 1 mn\",\r\n  },\r\n  {\r\n    value: \"PA_LugarNacimiento\",\r\n    label: \"Lugar del nacimiento\",\r\n  },\r\n  {\r\n    value: \"ERN_AdaptNeonatal\",\r\n    label: \"adaptacion neonatal inmediata\",\r\n  },\r\n  {\r\n    value: \"ERN_Sexo\",\r\n    label: \"sexo\",\r\n  },\r\n  {\r\n    value: \"ERN_A_5min\",\r\n    label: \"APGAR 5 mn\",\r\n  },\r\n  {\r\n    value: \"ERN_A_10min\",\r\n    label: \"APGAR 10 mn\",\r\n  },\r\n  {\r\n    value: \"apgarcat1\",\r\n    label: \"APGAR 1 mn (cat)\",\r\n  },\r\n  {\r\n    value: \"apgarcat5\",\r\n    label: \"APGAR 5 mn (cat)\",\r\n  },\r\n  {\r\n    value: \"gestacat\",\r\n    label: \"edad gestacional (\\ncat)\",\r\n  },\r\n  {\r\n    value: \"V7\",\r\n    label: \"Fecha de\\nnacimiento\",\r\n  },\r\n  {\r\n    value: \"anoxia5mn\",\r\n    label: \"Hubo grado de anoxia\\n(5 mn de vida)\",\r\n  },\r\n  {\r\n    value: \"ERN_LubchencoFenton\",\r\n    label: \"Lubchenco según edad gest. Y peso\",\r\n  },\r\n  {\r\n    value: \"HD_RhNino\",\r\n    label: \"Grupo Rh niño\",\r\n  },\r\n  {\r\n    value: \"menosde1001\",\r\n    label: \"peso < 1000gr\",\r\n  },\r\n  {\r\n    value: \"PESO1500G\",\r\n    label: \"peso <= 1500gr\",\r\n  },\r\n  {\r\n    value: \"menosde31sem\",\r\n    label: \"menos de 30 semanas\",\r\n  },\r\n  {\r\n    value: \"surfactante\",\r\n    label: \"recibió surfactante y menos o igual a 32 semanas\",\r\n  },\r\n  {\r\n    value: \"Nearterm\",\r\n    label: \"near term 34\\nsemanas o más\",\r\n  },\r\n  {\r\n    value: \"ERN_FUM\",\r\n    label: \"fecha última menstruación\",\r\n  },\r\n  {\r\n    value: \"ERN_Ballard\",\r\n    label: \"edad gestacional (Ballard)\",\r\n  },\r\n  {\r\n    value: \"ERN_Eco\",\r\n    label: \"edad gestacional (por ecografía)\",\r\n  },\r\n  {\r\n    value: \"ERN_Remision\",\r\n    label: \"Fue remitido en otra institución\",\r\n  },\r\n  {\r\n    value: \"ERN_sepsis\",\r\n    label: \"sepsis\",\r\n  },\r\n  {\r\n    value: \"BPN\",\r\n    label: \"a termino de BPN\",\r\n  },\r\n  {\r\n    value: \"ANOCAT\",\r\n    label: \"año nacimiento\",\r\n  },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport {\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  VictoryTheme,\r\n  VictoryGroup,\r\n  VictoryLegend,\r\n  VictoryScatter,\r\n  VictoryTooltip,\r\n} from \"victory\";\r\nimport Select from \"react-select\";\r\nimport GroupDetailSidebar from \"./groupDetailSidebar\";\r\nimport { nacimientoVars } from \"../data/nacimientovars\";\r\nconst csvData = [\r\n  [\"firstname\", \"lastname\", \"email\"],\r\n  [\"Ahmed\", \"Tomi\", \"ah@smthing.co.com\"],\r\n  [\"Raed\", \"Labes\", \"rl@smthing.co.com\"],\r\n  [\"Yezzi\", \"Min l3b\", \"ymin@cocococo.com\"],\r\n];\r\n\r\nconst Groupdetail = (props) => {\r\n  const [headers, setheaders] = useState(\r\n    props.groupInfo != null && props.groupInfo != undefined\r\n      ? Object.keys(props.groupInfo.info[0])\r\n      : []\r\n  );\r\n\r\n  const [groupsInfo, setgroupsInfo] = useState(\r\n    props.groupInfo != null && props.groupInfo != undefined\r\n      ? props.groupInfo.info\r\n      : []\r\n  );\r\n  const [dataToGraph, setdataToGraph] = useState([]);\r\n  const [dataToGraphlvl2, setdataToGraphlvl2] = useState([]);\r\n  const [labelsTG, setlabelsTG] = useState([]);\r\n  const [selectedBar, setselectedBar] = useState(null);\r\n  const [analisisVars, setanalisisVars] = useState(\"\");\r\n  const [dataToDownload, setdataToDownload] = useState([]);\r\n  const [resumenDownload, setresumenDownload] = useState([]);\r\n  const [additionalVars, setadditionalVars] = useState([\r\n    nacimientoVars[1].value,\r\n  ]);\r\n  const [avtg, setavtg] = useState([]);\r\n\r\n  const handleBarSelection = (etapa, grupo) => {\r\n    let arr = [props.groupInfo.nombre, etapa, grupo];\r\n    setselectedBar([...arr]);\r\n  };\r\n\r\n  const formatjson = () => {\r\n    let arr = [];\r\n    let grupos = [];\r\n    let grupos2 = [];\r\n    if (props.groupInfo != null) {\r\n      props.groupInfo.info.map((item) => {\r\n        if (!grupos.includes(item.labels)) {\r\n          grupos.push(item.labels);\r\n        }\r\n      });\r\n      grupos.map((grupo) => {\r\n        grupos2.push({ name: `${grupo}` });\r\n      });\r\n      grupos.map((grupo) => {\r\n        let arrporgrupo = [];\r\n        props.groupInfo.info.map((item) => {\r\n          if (grupo == item.labels) {\r\n            let jsonobj = {\r\n              x: `${item.etapa}`,\r\n              y: item.count,\r\n              label: item.count,\r\n              etapa: `${item.etapa}`,\r\n              group: `${item.labels}`,\r\n            };\r\n            arrporgrupo.push(jsonobj);\r\n          }\r\n        });\r\n        arr.push(arrporgrupo);\r\n      });\r\n    }\r\n    setlabelsTG([...grupos2]);\r\n    setdataToGraph([...arr]);\r\n  };\r\n\r\n  const formatjsonlevel2 = (backresponse) => {\r\n    let arr = [];\r\n    let grupos = [];\r\n    let etapasGrupos = [\"semana 40\", \"mes 3\", \"mes 6\", \"mes 9\", \"mes 12\"];\r\n\r\n    backresponse.datos.map((item) => {\r\n      if (!grupos.includes(item.labels)) {\r\n        grupos.push(item.labels);\r\n      }\r\n    });\r\n    grupos.sort();\r\n    grupos.map((grupo) => {\r\n      let defaultArr = [];\r\n      for (let i = 0; i < etapasGrupos.length; i++) {\r\n        let index = -1;\r\n        for (let j = 0; j < backresponse.datos.length; j++) {\r\n          if (\r\n            etapasGrupos[i] == backresponse.datos[j].etapa &&\r\n            grupo == backresponse.datos[j].labels\r\n          )\r\n            index = j;\r\n        }\r\n        let jsonobj = null;\r\n        if (index != -1) {\r\n          jsonobj = backresponse.datos[index];\r\n        } else {\r\n          jsonobj = {\r\n            etapa: etapasGrupos[i],\r\n            count: 0,\r\n            labels: grupo,\r\n            etapanum: etapasGrupos[i],\r\n          };\r\n          let arrAV = analisisVars.split(\"--\");\r\n          arrAV.map((v) => {\r\n            jsonobj[v] = 0;\r\n          });\r\n        }\r\n\r\n        defaultArr.push(jsonobj);\r\n      }\r\n\r\n      arr.push(defaultArr);\r\n    });\r\n    setdataToGraphlvl2([...arr]);\r\n    setavtg(backresponse.additional[0]);\r\n    setdataToDownload([...backresponse.list]);\r\n    setresumenDownload([...backresponse.summary]);\r\n    alert(\"Busqueda realizada\");\r\n  };\r\n\r\n  const handleGroupHistory = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://pgkmc.herokuapp.com/analisis/getgrouphistory/\" +\r\n          selectedBar[0] +\r\n          \"/\" +\r\n          selectedBar[1] +\r\n          \"/\" +\r\n          selectedBar[2] +\r\n          \"/\" +\r\n          analisisVars +\r\n          \"/\" +\r\n          additionalVars.join(\"-\") +\r\n          \"\"\r\n      );\r\n      const jsonData = await response.json();\r\n\r\n      formatjsonlevel2(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleAnalisisVars = () => {\r\n    let arr = \"\";\r\n    if (props.groupInfo != null && props.groupInfo != undefined) {\r\n      Object.keys(props.groupInfo.info[0]).map((header) => {\r\n        if (header.startsWith(\"maximo\")) {\r\n          const myArray = header.split(\"maximo\");\r\n          if (arr == \"\") {\r\n            arr = arr + myArray[1];\r\n          } else {\r\n            arr = arr + \"--\" + myArray[1];\r\n          }\r\n        }\r\n      });\r\n      setanalisisVars(arr);\r\n    }\r\n  };\r\n\r\n  const handleDeleteGroup = async (nombre) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://pgkmc.herokuapp.com/analisis/deleteGroup/\" + nombre,\r\n        { method: \"DELETE\" }\r\n      );\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    formatjson();\r\n    setdataToGraphlvl2([]);\r\n    setselectedBar(null);\r\n    setdataToDownload([]);\r\n    setresumenDownload([]);\r\n    handleAnalisisVars();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className={props.visibility}>\r\n      {props.groupInfo == null ? (\r\n        <h3>Analisis Grupo</h3>\r\n      ) : (\r\n        <div className=\"my-5\">\r\n          <GroupDetailSidebar\r\n            groupInfo={props.groupInfo}\r\n            numberLimit={labelsTG.length - 1}\r\n          />\r\n          {analisisVars.split(\"--\").map((av) => {\r\n            return <span className=\"badge bg-primary mx-2\">{av}</span>;\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-7\">\r\n          <VictoryChart\r\n            theme={VictoryTheme.material}\r\n            domainPadding={{ x: 50, y: 50 }}\r\n            height={400}\r\n            width={500}\r\n          >\r\n            <VictoryAxis style={{ tickLabels: { angle: -60 } }} />\r\n            <VictoryAxis dependentAxis theme={VictoryTheme.material} />\r\n            <VictoryLegend\r\n              x={125}\r\n              y={10}\r\n              title=\"Clusters\"\r\n              centerTitle\r\n              orientation=\"horizontal\"\r\n              gutter={20}\r\n              style={{ border: { stroke: \"black\" } }}\r\n              colorScale={\"qualitative\"}\r\n              data={labelsTG}\r\n            />\r\n            <VictoryGroup\r\n              horizontal\r\n              offset={10}\r\n              style={{ data: { width: 8 } }}\r\n              colorScale={\"qualitative\"}\r\n            >\r\n              {dataToGraph.map((dtg) => {\r\n                return (\r\n                  <VictoryBar\r\n                    key={`dataof${dtg[0].y}`}\r\n                    barWidth={8}\r\n                    events={[\r\n                      {\r\n                        target: \"data\",\r\n                        eventHandlers: {\r\n                          onClick: () => {\r\n                            return [\r\n                              {\r\n                                target: \"data\",\r\n                                mutation: (props) => {\r\n                                  const fill = props.style && props.style.fill;\r\n                                  if (fill != \"black\") {\r\n                                    handleBarSelection(\r\n                                      props.datum.etapa,\r\n                                      props.datum.group\r\n                                    );\r\n                                  }\r\n                                },\r\n                              },\r\n                            ];\r\n                          },\r\n                        },\r\n                      },\r\n                    ]}\r\n                    data={dtg}\r\n                  />\r\n                );\r\n              })}\r\n            </VictoryGroup>\r\n          </VictoryChart>\r\n        </div>\r\n        <div className=\"col-12 col-md-5 my-3\">\r\n          {selectedBar == null ? (\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Barra Seleccionada</h5>\r\n                <hr />\r\n                <p className=\"card-text\">No se ha seleccionado ninguna barra</p>\r\n              </div>\r\n              <div className=\"card-footer text-muted\">\r\n                Permite buscar los individuos de la barra seleccionada en que\r\n                grupo quedaron en las demás etapas\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Barra Seleccionada</h5>\r\n                <hr />\r\n\r\n                <p className=\"card-text\">\r\n                  <b>Nombre Grupo:</b> {selectedBar[0]}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <b>Etapa:</b> {selectedBar[1]}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <b>Grupo de Cluster:</b> {selectedBar[2]}\r\n                </p>\r\n                <p className=\"card-text\">*Variables al nacer</p>\r\n                <Select\r\n                  isMulti\r\n                  name=\"colors\"\r\n                  options={nacimientoVars}\r\n                  defaultValue={[nacimientoVars[1]]}\r\n                  className=\"basic-multi-select my-2\"\r\n                  classNamePrefix=\"select\"\r\n                  onChange={(value) => {\r\n                    let values = [];\r\n                    value.map((selectItem) => {\r\n                      values.push(selectItem.value);\r\n                    });\r\n                    setadditionalVars([...values]);\r\n                  }}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={() => handleGroupHistory()}\r\n                >\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      {dataToGraphlvl2.length == 0 ? (\r\n        <div></div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"accordion col-12\" id=\"accordionPanelsStayOpenlvl2\">\r\n              <div className=\"accordion-item\">\r\n                <h2\r\n                  className=\"accordion-header\"\r\n                  id=\"panelsStayOpen-headingHystory\"\r\n                >\r\n                  <button\r\n                    className=\"accordion-button\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#panelsStayOpen-collapseOne\"\r\n                    aria-expanded=\"true\"\r\n                    aria-controls=\"panelsStayOpen-collapseOne\"\r\n                  >\r\n                    Histórico\r\n                  </button>\r\n                </h2>\r\n                <div\r\n                  id=\"panelsStayOpen-collapseOne\"\r\n                  className=\"accordion-collapse collapse show\"\r\n                  aria-labelledby=\"panelsStayOpen-headingOne\"\r\n                >\r\n                  <div className=\"accordion-body row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                      <VictoryChart\r\n                        theme={VictoryTheme.material}\r\n                        domainPadding={{ x: 50, y: 50 }}\r\n                        height={400}\r\n                        width={400}\r\n                      >\r\n                        <VictoryAxis style={{ tickLabels: { angle: -60 } }} />\r\n                        <VictoryAxis\r\n                          dependentAxis\r\n                          theme={VictoryTheme.material}\r\n                        />\r\n                        <VictoryLegend\r\n                          x={125}\r\n                          y={10}\r\n                          title=\"Clusters\"\r\n                          centerTitle\r\n                          orientation=\"horizontal\"\r\n                          gutter={20}\r\n                          style={{ border: { stroke: \"black\" } }}\r\n                          colorScale={\"qualitative\"}\r\n                          data={labelsTG}\r\n                        />\r\n                        <VictoryGroup\r\n                          horizontal\r\n                          offset={10}\r\n                          style={{ data: { width: 8 } }}\r\n                          colorScale={\"qualitative\"}\r\n                        >\r\n                          {dataToGraphlvl2.map((dtg) => {\r\n                            return (\r\n                              <VictoryBar\r\n                                barWidth={8}\r\n                                key={`lvl2dataof${dtg.count}`}\r\n                                data={dtg}\r\n                                x=\"etapa\"\r\n                                y=\"count\"\r\n                                labels={({ datum }) => `${datum.count}`}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </VictoryGroup>\r\n                      </VictoryChart>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                      <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                          <p>\r\n                            Para descargar los datos de como se dividieron los\r\n                            individuos:\r\n                          </p>\r\n                          <CSVLink\r\n                            data={dataToDownload}\r\n                            filename={\"datos_grupo.csv\"}\r\n                          >\r\n                            Haga click acá\r\n                          </CSVLink>\r\n                          <p>\r\n                            Para descargar el resumen de como se dividieron los\r\n                            individuos:\r\n                          </p>\r\n                          <CSVLink\r\n                            data={resumenDownload}\r\n                            filename={\"datos_grupo_resumen.csv\"}\r\n                          >\r\n                            Haga click acá\r\n                          </CSVLink>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"accordion-item\">\r\n                <h2\r\n                  className=\"accordion-header\"\r\n                  id=\"panelsStayOpen-headingVars\"\r\n                >\r\n                  <button\r\n                    className=\"accordion-button collapsed\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#panelsStayOpen-collapseTwo\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"panelsStayOpen-collapseTwo\"\r\n                  >\r\n                    Variables de Analisis\r\n                  </button>\r\n                </h2>\r\n                <div\r\n                  id=\"panelsStayOpen-collapseTwo\"\r\n                  className=\"accordion-collapse collapse\"\r\n                  aria-labelledby=\"panelsStayOpen-headingTwo\"\r\n                >\r\n                  <div className=\"accordion-body\">\r\n                    <div className=\"row\">\r\n                      {analisisVars.split(\"--\").map((av) => {\r\n                        return (\r\n                          <div className=\"col-12 col-md-6\" key={`lvl2${av}`}>\r\n                            Gráfica {av}\r\n                            <VictoryChart\r\n                              theme={VictoryTheme.material}\r\n                              domainPadding={{ x: 50, y: 50 }}\r\n                              height={400}\r\n                              width={400}\r\n                            >\r\n                              <VictoryAxis\r\n                                style={{ tickLabels: { angle: -60 } }}\r\n                              />\r\n                              <VictoryAxis\r\n                                dependentAxis\r\n                                theme={VictoryTheme.material}\r\n                                fixLabelOverlap={true}\r\n                                tickCount={4}\r\n                              />\r\n\r\n                              <VictoryGroup\r\n                                horizontal\r\n                                offset={10}\r\n                                style={{ data: { width: 8 } }}\r\n                                colorScale={\"qualitative\"}\r\n                              >\r\n                                {dataToGraphlvl2.map((dtg) => {\r\n                                  return (\r\n                                    <VictoryBar\r\n                                      barWidth={8}\r\n                                      key={`lvl2dataof${dtg.count}`}\r\n                                      data={dtg}\r\n                                      x=\"etapa\"\r\n                                      y={av}\r\n                                      labels={({ datum }) =>\r\n                                        eval(\"datum.\" + av)\r\n                                      }\r\n                                      labelComponent={<VictoryTooltip />}\r\n                                    />\r\n                                  );\r\n                                })}\r\n                              </VictoryGroup>\r\n                            </VictoryChart>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"accordion-item\">\r\n                <h2\r\n                  className=\"accordion-header\"\r\n                  id=\"panelsStayOpen-headingNacimiento\"\r\n                >\r\n                  <button\r\n                    className=\"accordion-button collapsed\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#panelsStayOpen-collapseThree\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"panelsStayOpen-collapseThree\"\r\n                  >\r\n                    Variables de Nacimiento\r\n                  </button>\r\n                </h2>\r\n                <div\r\n                  id=\"panelsStayOpen-collapseThree\"\r\n                  className=\"accordion-collapse collapse\"\r\n                  aria-labelledby=\"panelsStayOpen-headingThree\"\r\n                >\r\n                  <div className=\"accordion-body\">\r\n                    <div className=\"row\">\r\n                      {additionalVars.map((addv) => {\r\n                        let avl = \"\";\r\n                        let artg = [];\r\n\r\n                        nacimientoVars.map((avli) => {\r\n                          if (avli.value == addv) {\r\n                            avl = avli.label;\r\n                          }\r\n                        });\r\n                        Object.entries(avtg).map((entry) => {\r\n                          if (entry[0].startsWith(addv)) {\r\n                            if (entry[0].includes(\"MIN\")) {\r\n                              artg.push({ x: \"MIN\", y: parseFloat(entry[1]) });\r\n                            } else if (entry[0].includes(\"MAX\")) {\r\n                              artg.push({ x: \"MAX\", y: parseFloat(entry[1]) });\r\n                            } else {\r\n                              artg.push({ x: \"AVG\", y: parseFloat(entry[1]) });\r\n                            }\r\n                          }\r\n                        });\r\n                        return (\r\n                          <div className=\"col-12 col-md-4\" key={`${addv}`}>\r\n                            <h5>Gráfica de {avl}</h5>\r\n                            <VictoryChart\r\n                              theme={VictoryTheme.material}\r\n                              domainPadding={{ x: 50, y: 50 }}\r\n                              height={400}\r\n                              width={400}\r\n                            >\r\n                              <VictoryBar\r\n                                barRatio={0.8}\r\n                                style={{\r\n                                  data: { fill: \"#c43a31\" },\r\n                                }}\r\n                                data={artg}\r\n                              />\r\n                            </VictoryChart>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-3 offset-md-9\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger mx-4\"\r\n                onClick={() => handleDeleteGroup(props.groupInfo.nombre)}\r\n              >\r\n                Eliminar Grupo\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groupdetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport \"./detailsidebar.css\";\r\n\r\nconst GroupDetailSidebar = (props) => {\r\n  const [sidebarOpen, setsidebarOpen] = useState(false);\r\n  const [groupDetail, setGroupDetail] = useState([]);\r\n\r\n  const calculateDetail = () => {\r\n    if (props.groupInfo != null && props.groupInfo != undefined) {\r\n      let arr = [];\r\n      let etapas = [];\r\n      props.groupInfo.info.map((item) => {\r\n        if (!etapas.includes(item.etapa)) {\r\n          etapas.push(item.etapa);\r\n        }\r\n      });\r\n      etapas.map((etapa) => {\r\n        let aux = [];\r\n        props.groupInfo.info.map((item) => {\r\n          if (etapa == item.etapa) {\r\n            aux.push(item);\r\n          }\r\n        });\r\n        arr.push(aux);\r\n      });\r\n      setGroupDetail([...arr]);\r\n    }\r\n  };\r\n  const onSetSidebarOpen = (open) => {\r\n    setsidebarOpen(open);\r\n  };\r\n\r\n  const resetInputValues = () => {\r\n    let etapasArr = [\"semana 40\", \"mes 3\", \"mes 6\", \"mes 9\", \"mes 12\"];\r\n    etapasArr.map((item) => {\r\n      if (document.getElementById(`cambio1${item}`) != null)\r\n        document.getElementById(`cambio1${item}`).value = 0;\r\n      if (document.getElementById(`cambio2${item}`) != null)\r\n        document.getElementById(`cambio2${item}`).value = 0;\r\n    });\r\n  };\r\n\r\n  const handleUpdate = async (etapa, cambio1, cambio2) => {\r\n    if (cambio1 != \"\" && cambio2 != \"\") {\r\n      if (cambio1 !== cambio2) {\r\n        try {\r\n          const response = await fetch(\r\n            \"https://pgkmc.herokuapp.com/analisis/handleGroupUpdate/\" +\r\n              props.groupInfo.nombre +\r\n              \"/\" +\r\n              etapa +\r\n              \"/\" +\r\n              cambio1 +\r\n              \"/\" +\r\n              cambio2\r\n          );\r\n          const jsonData = await response.json();\r\n          window.location.reload();\r\n          alert(\r\n            \"Ya se realizó el cambio, seleccione el grupo\" +\r\n              props.groupInfo.nombre\r\n          );\r\n        } catch (err) {\r\n          console.error(err.message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetInputValues();\r\n    calculateDetail();\r\n  }, [props]);\r\n\r\n  return (\r\n    <Sidebar\r\n      sidebar={\r\n        <div className=\"my-2 mx-2\">\r\n          <h4>Información de los Clusters</h4>\r\n          <hr />\r\n          {groupDetail.map((etapa) => {\r\n            return (\r\n              <div key={`${etapa[0].etapa}`}>\r\n                <div className=\"card\">\r\n                  <div className=\"card-body tableContainer\">\r\n                    <h6>{etapa[0].etapa}</h6>\r\n                    <table className=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          {Object.keys(etapa[0]).map((header) => {\r\n                            if (header != \"etapa\") {\r\n                              return (\r\n                                <th scope=\"col\" key={`header${header}`}>\r\n                                  {header}\r\n                                </th>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {etapa.map((element) => {\r\n                          return (\r\n                            <tr key={`row${element.labels}`}>\r\n                              {Object.entries(element).map((entry) => {\r\n                                if (entry[0] != \"etapa\") {\r\n                                  return (\r\n                                    <td key={`${entry[0]}-${entry[1]}`}>\r\n                                      {entry[1]}\r\n                                    </td>\r\n                                  );\r\n                                }\r\n                              })}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                    <div className=\"row my-4\">\r\n                      <div className=\"offset-1 col-2\">\r\n                        <input\r\n                          id={`cambio1${etapa[0].etapa}`}\r\n                          type=\"number\"\r\n                          className=\"form-control \"\r\n                          aria-label=\"firstToChange\"\r\n                          min={0}\r\n                          max={props.numberLimit}\r\n                        />\r\n                      </div>\r\n                      <span className=\"col-1 py-auto\">\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"16\"\r\n                          height=\"16\"\r\n                          fill=\"currentColor\"\r\n                          className=\"bi bi-arrow-left-right\"\r\n                          viewBox=\"0 0 16 16\"\r\n                        >\r\n                          <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M1 11.5a.5.5 0 0 0 .5.5h11.793l-3.147 3.146a.5.5 0 0 0 .708.708l4-4a.5.5 0 0 0 0-.708l-4-4a.5.5 0 0 0-.708.708L13.293 11H1.5a.5.5 0 0 0-.5.5zm14-7a.5.5 0 0 1-.5.5H2.707l3.147 3.146a.5.5 0 1 1-.708.708l-4-4a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 4H14.5a.5.5 0 0 1 .5.5z\"\r\n                          />\r\n                        </svg>\r\n                      </span>\r\n                      <div className=\"col-2\">\r\n                        <input\r\n                          id={`cambio2${etapa[0].etapa}`}\r\n                          type=\"number\"\r\n                          className=\"form-control \"\r\n                          aria-label=\"secondToChange\"\r\n                          min={0}\r\n                          max={props.numberLimit}\r\n                        />\r\n                      </div>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success col-3\"\r\n                        onClick={() =>\r\n                          handleUpdate(\r\n                            etapa[0].etapa,\r\n                            document.getElementById(`cambio1${etapa[0].etapa}`)\r\n                              .value,\r\n                            document.getElementById(`cambio2${etapa[0].etapa}`)\r\n                              .value\r\n                          )\r\n                        }\r\n                      >\r\n                        Cambiar\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      }\r\n      open={sidebarOpen}\r\n      onSetOpen={onSetSidebarOpen}\r\n      styles={{ sidebar: { background: \"white\", width: \"50%\" } }}\r\n      pullRight={true}\r\n    >\r\n      <div className=\"row mx-2 my-4\">\r\n        <div className=\"col-10 align-self-start\">\r\n          <h3>Analisis Grupo {props.groupInfo.nombre}</h3>\r\n        </div>\r\n        <div className=\" col-2 float-right\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => onSetSidebarOpen(true)}\r\n          >\r\n            Info. Clusters\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default GroupDetailSidebar;\r\n","export const enviromentvars = [\r\n  {\r\n    label: \"situación pareja\",\r\n    value: \"CSP_SituaPareja\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"tipo de vivienda\",\r\n    value: \"CSP_TipoVivienda\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Escolaridad madre\",\r\n    value: \"CSP_EscolaridadMadre\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Situación laboral madre\",\r\n    value: \"CSP_SituacionLaboralMadre\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Escolaridad padre\",\r\n    value: \"CSP_EscolaridadPadre\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Situación laboral padre\",\r\n    value: \"CSP_SituacionLaboralPadre\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Ingreso Mensual\",\r\n    value: \"CSP_IngresoMensual\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Distancia vivienda\",\r\n    value: \"CSP_DistanciaVivienda\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Personas que viven en el hogar con el ingreso\",\r\n    value: \"CSP_numPersVivenIngMen\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Nutrición familiar\",\r\n    value: \"CSP_NutricionFam\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"embarazo deseado\",\r\n    value: \"CSP_EmbarazoDeseado\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"embarazo planificado\",\r\n    value: \"embbajoplanificacion\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Peso de la madre\",\r\n    value: \"CP_PesoMadre\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Talla de la madre\",\r\n    value: \"CP_TallaMadre\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Peso del padre\",\r\n    value: \"CP_PesoPadre\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Talla del padre\",\r\n    value: \"CP_TallaPadre\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"hay niños menores de 5 años en el hogar\",\r\n    value: \"ninosmenosde5anos\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"percapita\\nmensual\",\r\n    value: \"percapita\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"percapita mensual (cat)\",\r\n    value: \"percapindic\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Escolaridad madre\\nsimpl.\",\r\n    value: \"educmadresimplificada\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Escolaridad padre\\nsimpl.\",\r\n    value: \"educpadresimplificada\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"edad materna\",\r\n    value: \"CP_edadmaterna\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"edad madre\\ncategorizada\",\r\n    value: \"edadmatcat\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Sistema de Salud\",\r\n    value: \"SSalud\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"Número de embarazos (con este)\",\r\n    value: \"CP_Gestacion\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Número de partos\",\r\n    value: \"CP_Paridad\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Número de cesáreas\",\r\n    value: \"CP_PartoCesarea\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Número de emb. ectópicos\",\r\n    value: \"CP_Ectopico\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Número de nacidos vivos\",\r\n    value: \"CP_NacidoVivo\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Número de prematuros\",\r\n    value: \"CP_Prematuro\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Número de mortinatos\",\r\n    value: \"CP_Mortinato\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Número de emb. planificados con hormonas\",\r\n    value: \"CP_Hormonales\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"Número de emb. planificados con DIU\",\r\n    value: \"CP_DIU\",\r\n    tipo: 1,\r\n  },\r\n  {\r\n    label: \"tuvo embarazos\\nbajo DIU\",\r\n    value: \"embarazoplanifDIU\",\r\n    tipo: 2,\r\n  },\r\n  {\r\n    label: \"tuvo embarazos\\nbajo hormonas\",\r\n    value: \"embarazoplanifhormonal\",\r\n    tipo: 2,\r\n  },\r\n];\r\n\r\nexport const envaroptions = [\r\n  {\r\n    nombre: \"CSP_SituaPareja\",\r\n    options: [\r\n      { value: 1, label: \"sola con apoyo\" },\r\n      { value: 2, label: \"sola sin apoyo\" },\r\n      { value: 3, label: \"pareja estable\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"CSP_TipoVivienda\",\r\n    options: [\r\n      { value: 1, label: \"rural\" },\r\n      { value: 2, label: \"urbana\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"CSP_EscolaridadMadre\",\r\n    options: [\r\n      { value: 1, label: \"primaria completa o no\" },\r\n      { value: 2, label: \"primaria incompleta\" },\r\n      { value: 3, label: \"secundaria completa o no\" },\r\n      { value: 4, label: \"secundaria incompleta\" },\r\n      { value: 5, label: \"tecnica completa o no\" },\r\n      { value: 6, label: \"tecnica incompleta\" },\r\n      { value: 7, label: \"universitaria completa o no\" },\r\n      { value: 8, label: \"universitaria incompleta\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"CSP_SituacionLaboralMadre\",\r\n    options: [\r\n      { value: 1, label: \"con empleo\" },\r\n      { value: 2, label: \"sin empleo\" },\r\n      { value: 3, label: \"ama de casa\" },\r\n      { value: 4, label: \"estudiante\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"CSP_EscolaridadPadre\",\r\n    options: [\r\n      { value: 1, label: \"primaria completa o no\" },\r\n      { value: 2, label: \"primaria incompleta\" },\r\n      { value: 3, label: \"secundaria completa o no\" },\r\n      { value: 4, label: \"secundaria incompleta\" },\r\n      { value: 5, label: \"tecnica completa o no\" },\r\n      { value: 6, label: \"tecnica incompleta\" },\r\n      { value: 7, label: \"universitaria completa o no\" },\r\n      { value: 8, label: \"universitaria incompleta\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"CSP_SituacionLaboralPadre\",\r\n    options: [\r\n      { value: 0, label: \"NA\" },\r\n      { value: 1, label: \"con empleo\" },\r\n      { value: 2, label: \"sin empleo\" },\r\n      { value: 3, label: \"estudiante\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"CSP_DistanciaVivienda\",\r\n    options: [\r\n      { value: 1, label: \"hasta una hora de transporte\" },\r\n      { value: 2, label: \"de 1 a 2 horas de transporte\" },\r\n      { value: 3, label: \"mas de 2 horas pero en la ciudad\" },\r\n      { value: 4, label: \"fuera de la ciudad\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"CSP_NutricionFam\",\r\n    options: [\r\n      { value: 1, label: \"buena (3 comidas y 2 refrigerios)\" },\r\n      { value: 2, label: \"apenas suficiente (3 comidas)\" },\r\n      { value: 3, label: \"insuficiente (2 comidas)\" },\r\n      { value: 4, label: \"severamente insuficiente (1 comida)\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"CSP_EmbarazoDeseado\",\r\n    options: [\r\n      { value: 0, label: \"no\" },\r\n      { value: 1, label: \"si\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"embbajoplanificacion\",\r\n    options: [\r\n      { value: 0, label: \"no\" },\r\n      { value: 1, label: \"si\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"ninosmenosde5anos\",\r\n    options: [\r\n      { value: 0, label: \"no\" },\r\n      { value: 1, label: \"si\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"percapindic\",\r\n    options: [\r\n      { value: 1, label: \"hasta 1 SM percapita mensual\" },\r\n      { value: 2, label: \"hasta 2 SM percapita mensual\" },\r\n      { value: 3, label: \"hasta 3 SM percapita mensual\" },\r\n      { value: 4, label: \"mas de 3 SM percapita mensual\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"edadmatcat\",\r\n    options: [\r\n      { value: 1, label: \"adolescente\" },\r\n      { value: 2, label: \"normal\" },\r\n      { value: 3, label: \"mas de 35 años\" },\r\n    ],\r\n  },\r\n  {\r\n    nombre: \"SSalud\",\r\n    options: [\r\n      { value: 0, label: \"prepagada\" },\r\n      { value: 2, label: \"contributivo\" },\r\n      { value: 3, label: \"subsidiado\" },\r\n    ],\r\n  },\r\n];\r\n","const analisisvars = [\r\n  {\r\n    label: \"Nutpesowho\",\r\n    value: \"Nutpesowho\",\r\n  },\r\n  {\r\n    label: \"Número de consultas desde la etapa anterior\",\r\n    value: \"Número de consultas desde la etapa anterior\",\r\n  },\r\n  {\r\n    label: \"asistencia\",\r\n    value: \"asistencia\",\r\n  },\r\n  {\r\n    label: \"Tiene Oxígeno ambulatorio\",\r\n    value: \"Tiene Oxígeno ambulatorio\",\r\n  },\r\n  {\r\n    label: \"readmisiones desde la etapa anterior\",\r\n    value: \"readmisiones desde la etapa anterior\",\r\n  },\r\n  {\r\n    label: \"talla\",\r\n    value: \"talla\",\r\n  },\r\n  {\r\n    label: \"Palivizumab\",\r\n    value: \"Palivizumab\",\r\n  },\r\n  {\r\n    label: \"Hierro\",\r\n    value: \"Hierro\",\r\n  },\r\n  {\r\n    label: \"consultas\",\r\n    value: \"consultas\",\r\n  },\r\n  {\r\n    label: \"Leche artificial\",\r\n    value: \"Leche artificial\",\r\n  },\r\n  {\r\n    label: \"peso\",\r\n    value: \"peso\",\r\n  },\r\n  {\r\n    label: \"Enfermedad Respiratoria crónica\",\r\n    value: \"Enfermedad Respiratoria crónica\",\r\n  },\r\n  {\r\n    label: \"Antireflujo\",\r\n    value: \"Antireflujo\",\r\n  },\r\n  {\r\n    label: \"Leche humana y artificial\",\r\n    value: \"Leche humana y artificial\",\r\n  },\r\n  {\r\n    label: \"Días totales rehospitalización\",\r\n    value: \"Días totales rehospitalización\",\r\n  },\r\n  {\r\n    label: \"Oxígendependencia\",\r\n    value: \"Oxígendependencia\",\r\n  },\r\n  {\r\n    label: \"Leche humana\",\r\n    value: \"Leche humana\",\r\n  },\r\n  {\r\n    label: \"alimentación\",\r\n    value: \"alimentación\",\r\n  },\r\n  {\r\n    label: \"perímetro cefálico\",\r\n    value: \"perímetro cefálico\",\r\n  },\r\n  {\r\n    label: \"examen neurológico\",\r\n    value: \"examen neurológico\",\r\n  },\r\n  {\r\n    label: \"número de rehospitalizaciones\",\r\n    value: \"número de rehospitalizaciones\",\r\n  },\r\n];\r\n\r\nexport default analisisvars;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./sidebar/sidebar.css\";\r\nimport data from \"./sidebar/fakedatagroups\";\r\nimport Groupdetail from \"./groupdetail\";\r\nimport Select from \"react-select\";\r\nimport { enviromentvars, envaroptions } from \"../data/enviromentvarsdata\";\r\nimport analisisvars from \"../data/analisisvarsdata\";\r\n\r\nlet populationList = [...enviromentvars];\r\nlet populationVarList = [...populationList];\r\nlet standardPopulationVarList = [];\r\nlet analisisList = [...analisisvars];\r\nlet analisisVarList = [...analisisList];\r\nlet standardAnalisisVarList = [];\r\n\r\nconst GroupManage = () => {\r\n  const [grupos, setGrupos] = useState([]);\r\n  const [grupoClicked, setgrupoClicked] = useState(null);\r\n  const [selectValue, setSelectValue] = useState(null);\r\n  const [inputCatFields, setInputCatFields] = useState([]);\r\n  const [calculatedCluster, setCalculatedCluster] = useState([]);\r\n\r\n  const handleChange = (value) => {\r\n    setSelectValue(value);\r\n  };\r\n\r\n  const handleChangeCat = (name, value) => {\r\n    let arr = [];\r\n    inputCatFields.map((field) => {\r\n      if (field.variable != name) {\r\n        arr.push(field);\r\n      }\r\n    });\r\n    let valor;\r\n    if (value == null) {\r\n      valor = null;\r\n    } else {\r\n      valor = value.value;\r\n    }\r\n    setInputCatFields([\r\n      ...arr,\r\n      {\r\n        variable: name,\r\n        limiteinf: null,\r\n        limitesup: null,\r\n        igual: valor,\r\n        tipo: 2,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleVarAddingPopulation = (pvariable) => {\r\n    if (pvariable != null) {\r\n      let index;\r\n      populationVarList.map((item) => {\r\n        if (pvariable.value == item.value) {\r\n          standardPopulationVarList.push(pvariable);\r\n          index = populationVarList.indexOf(pvariable);\r\n          setSelectValue(null);\r\n        }\r\n      });\r\n      let arr = [];\r\n      for (let i = 0; i < populationVarList.length; i++) {\r\n        if (i != index) {\r\n          arr.push(populationVarList[i]);\r\n        }\r\n      }\r\n      populationVarList = arr;\r\n    }\r\n  };\r\n\r\n  const handleVarDeletingPopulation = (pvariable) => {\r\n    if (pvariable != null) {\r\n      let arr2 = [];\r\n      inputCatFields.map((field) => {\r\n        if (field.variable != pvariable.label) {\r\n          arr2.push(field);\r\n        }\r\n      });\r\n      setInputCatFields(arr2);\r\n      let index;\r\n      standardPopulationVarList.map((item) => {\r\n        if (pvariable.value == item.value) {\r\n          populationVarList.push(pvariable);\r\n          index = standardPopulationVarList.indexOf(pvariable);\r\n          setSelectValue(null);\r\n        }\r\n      });\r\n      let arr = [];\r\n      for (let i = 0; i < standardPopulationVarList.length; i++) {\r\n        if (i != index) {\r\n          arr.push(standardPopulationVarList[i]);\r\n        }\r\n      }\r\n      standardPopulationVarList = arr;\r\n    }\r\n  };\r\n\r\n  const handleVarAddingAnalisis = (pvariable) => {\r\n    if (pvariable != null) {\r\n      let index;\r\n      analisisVarList.map((item) => {\r\n        if (pvariable.value == item.value) {\r\n          standardAnalisisVarList.push(pvariable);\r\n          index = analisisVarList.indexOf(pvariable);\r\n          setSelectValue(null);\r\n        }\r\n      });\r\n      let arr = [];\r\n      for (let i = 0; i < analisisVarList.length; i++) {\r\n        if (i != index) {\r\n          arr.push(analisisVarList[i]);\r\n        }\r\n      }\r\n      analisisVarList = arr;\r\n    }\r\n  };\r\n\r\n  const handleVarDeletingAnalisis = (pvariable) => {\r\n    if (pvariable != null) {\r\n      let index;\r\n      standardAnalisisVarList.map((item) => {\r\n        if (pvariable.value == item.value) {\r\n          analisisVarList.push(pvariable);\r\n          index = standardAnalisisVarList.indexOf(pvariable);\r\n          setSelectValue(null);\r\n        }\r\n      });\r\n      let arr = [];\r\n      for (let i = 0; i < standardAnalisisVarList.length; i++) {\r\n        if (i != index) {\r\n          arr.push(standardAnalisisVarList[i]);\r\n        }\r\n      }\r\n      standardAnalisisVarList = arr;\r\n    }\r\n  };\r\n\r\n  const getnumfieldsdata = async () => {\r\n    let arr = [];\r\n    standardPopulationVarList.map((item) => {\r\n      let down;\r\n      let up;\r\n      if (item.tipo == 1) {\r\n        down = parseInt(\r\n          document.getElementById(`lowerlimit${item.label}`).value\r\n        );\r\n        if (down != down) {\r\n          down = null;\r\n        }\r\n\r\n        up = parseInt(document.getElementById(`upperlimit${item.label}`).value);\r\n\r\n        if (up != up) {\r\n          up = null;\r\n        }\r\n\r\n        let jobj = {\r\n          variable: item.value,\r\n          limiteinf: down,\r\n          limitesup: up,\r\n          igual: null,\r\n          tipo: 1,\r\n        };\r\n        if (up != null || down != null) {\r\n          arr.push(jobj);\r\n        }\r\n      }\r\n    });\r\n    inputCatFields.map((field) => {\r\n      arr.push(field);\r\n    });\r\n    let ng = document.getElementById(\"nombre1\").value;\r\n    if (ng == \"\") {\r\n      ng = \"grupo sin nombre\";\r\n    }\r\n\r\n    let cNum = document.getElementById(\"inputNumberClusters\").value;\r\n    if (cNum == \"\") {\r\n      cNum = \"1\";\r\n    }\r\n    let variablesanalisisarr = [];\r\n    standardAnalisisVarList.map((item) => {\r\n      variablesanalisisarr.push(item.value);\r\n    });\r\n    let postbody = {\r\n      nombregrupo: ng,\r\n      variables: arr,\r\n      analisis: {\r\n        clusterNum: parseInt(cNum),\r\n        variables: variablesanalisisarr,\r\n      },\r\n    };\r\n\r\n    populationVarList = [...populationList];\r\n    standardPopulationVarList = [];\r\n    setInputCatFields([]);\r\n    try {\r\n      const body = postbody;\r\n      const response = await fetch(\r\n        \"https://pgkmc.herokuapp.com/analisis/clusteringGroups\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const jsonData = await response.json();\r\n\r\n      setCalculatedCluster([...jsonData]);\r\n\r\n      getGruposCluster();\r\n      alert(\"Grupo creado: revise la lista de grupos\");\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const getGruposCluster = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://pgkmc.herokuapp.com/analisis/getallclustergroups\"\r\n      );\r\n      const jsonData = await response.json();\r\n\r\n      setGrupos([...jsonData[\"datos\"]]);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getGruposCluster();\r\n  }, []);\r\n  return (\r\n    <div className=\"row  mx-1\">\r\n      <div className=\"px-1 my-2 sidebarwidth card col-3\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row my-2 \">\r\n            <h3 className=\"col-8\">Grupos</h3>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success col-4\"\r\n              onClick={() => {\r\n                setgrupoClicked(null);\r\n              }}\r\n            >\r\n              Crear\r\n            </button>\r\n          </div>\r\n          <div className=\"gestionGrupos \">\r\n            {grupos.map((grupo) => {\r\n              return (\r\n                <div className=\"row my-2 lenghtgrupos\" key={grupo.nombre}>\r\n                  <div className=\"col\">\r\n                    <button\r\n                      className=\"btn btn-light buttongrupos\"\r\n                      onClick={() => {\r\n                        setgrupoClicked(grupo);\r\n                      }}\r\n                    >\r\n                      {grupo.nombre}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-9 card px-1 my-2 \">\r\n        <div className=\"card-body\">\r\n          {grupoClicked == null ? (\r\n            //Crear grupo\r\n            <div>\r\n              <h1>Crear grupo</h1>\r\n              <form>\r\n                <div className=\"my-1 row\">\r\n                  <label htmlFor=\"nombre1\" className=\"col-2 col-form-label\">\r\n                    Nombre de grupo\r\n                  </label>\r\n                  <div className=\"col-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"nombre1\"\r\n                      placeholder=\"Ejemplo: Analisis de IMC\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div>\r\n                  <h4>Delimitar Población</h4>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-5 offset-1\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#removeVarsPopulationModal\"\r\n                      >\r\n                        del Vars\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-5 \">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#addVarsPopulationModal\"\r\n                      >\r\n                        add Vars\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    {standardPopulationVarList.map((vname) => {\r\n                      if (vname.tipo == 1) {\r\n                        return (\r\n                          <div className=\"mb-3\" key={vname.label}>\r\n                            <div>\r\n                              <h5>{vname.label}</h5>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-4  namevar\">\r\n                                <p className=\"align-middle\">Desde:</p>\r\n                              </div>\r\n                              <div className=\"col-8 \">\r\n                                <input\r\n                                  type=\"number\"\r\n                                  id={`lowerlimit${vname.label}`}\r\n                                  className=\"form-control\"\r\n                                  aria-describedby=\"lowerlimit\"\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-4 \">\r\n                                <p className=\"align-middle\">Hasta:</p>\r\n                              </div>\r\n                              <div className=\"col-8 \">\r\n                                <input\r\n                                  type=\"number\"\r\n                                  id={`upperlimit${vname.label}`}\r\n                                  className=\"form-control\"\r\n                                  aria-describedby=\"upperlimit\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <hr />\r\n                          </div>\r\n                        );\r\n                      } else {\r\n                        let temp = envaroptions.find(\r\n                          (element) => element.nombre == vname.value\r\n                        );\r\n                        return (\r\n                          <div className=\"mb-3\" key={vname.label}>\r\n                            <div>\r\n                              <h5>{vname.label}</h5>\r\n                            </div>\r\n                            <Select\r\n                              isClearable={true}\r\n                              onChange={(value) => {\r\n                                handleChangeCat(vname.value, value);\r\n                              }}\r\n                              aria-labelledby=\"aria-label\"\r\n                              inputId=\"aria-example-input\"\r\n                              name=\"aria-live-color\"\r\n                              options={temp.options}\r\n                            />\r\n                            <hr />\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div>\r\n                  <h4>Determinar variables</h4>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-5 offset-1\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#removeVarsAnalisisModal\"\r\n                      >\r\n                        del Vars\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-5 \">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#addVarsAnalisisModal\"\r\n                      >\r\n                        add Vars\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row my-3\">\r\n                    <div className=\"col-4\">\r\n                      <ul>\r\n                        {standardAnalisisVarList.map((vname) => {\r\n                          return (\r\n                            <li\r\n                              key={`analisisList-${vname.label}`}\r\n                              id={`analisisListItem-${vname.label}`}\r\n                              className=\"analisisListItem\"\r\n                            >\r\n                              {vname.label}\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                      <div className=\"row\">\r\n                        <label\r\n                          htmlFor=\"inputNumberClusters\"\r\n                          className=\"col-4 col-form-label\"\r\n                        >\r\n                          Número de Clusters\r\n                        </label>\r\n                        <div className=\"col-8\">\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            id=\"inputNumberClusters\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={() => {\r\n                    getnumfieldsdata();\r\n                  }}\r\n                >\r\n                  Generar grupos\r\n                </button>\r\n              </form>\r\n              <Groupdetail groupInfo={grupoClicked} visibility={\"d-none\"} />\r\n\r\n              <hr />\r\n            </div>\r\n          ) : (\r\n            //Detail del grupo\r\n            <Groupdetail groupInfo={grupoClicked} visibility={\"\"} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/*-------------------------------------------------MODAL------------------------------------------------*/}\r\n      {/*-------------------------------------------------MODAL------------------------------------------------*/}\r\n      {/*-------------------------------------------------MODAL------------------------------------------------*/}\r\n      {/*-------------------------------------------------MODAL------------------------------------------------*/}\r\n      {/*-------------------------------------------------MODAL------------------------------------------------*/}\r\n      {/*--------------------------------MODAL add variables to population-------------------------------------*/}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"addVarsPopulationModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"addVarsPopulationModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h6 className=\"modal-title\" id=\"addVarsPopulationModalLabel\">\r\n                Agregar Variables\r\n              </h6>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <Select\r\n                isClearable={true}\r\n                onChange={(value) => {\r\n                  handleChange(value);\r\n                }}\r\n                aria-labelledby=\"aria-label\"\r\n                inputId=\"aria-example-input\"\r\n                name=\"aria-live-color\"\r\n                options={populationVarList}\r\n                id=\"selectAddVarPopulation\"\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                data-bs-dismiss=\"modal\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleVarAddingPopulation(selectValue);\r\n                }}\r\n              >\r\n                Guardar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/*--------------------------------MODAL remove variables to population-------------------------------------*/}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"removeVarsPopulationModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"removeVarsPopulationModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h6 className=\"modal-title\" id=\"removeVarsPopulationModalLabel\">\r\n                Quitar Variables\r\n              </h6>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <Select\r\n                isClearable={true}\r\n                onChange={(value) => {\r\n                  handleChange(value);\r\n                }}\r\n                aria-labelledby=\"aria-label\"\r\n                inputId=\"aria-example-input\"\r\n                name=\"aria-live-color\"\r\n                options={standardPopulationVarList}\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                data-bs-dismiss=\"modal\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleVarDeletingPopulation(selectValue);\r\n                }}\r\n              >\r\n                Guardar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/*--------------------------------MODAL add variables to analisis-------------------------------------*/}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"addVarsAnalisisModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"addVarsAnalisisModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h6 className=\"modal-title\" id=\"addVarsAnalisisModalLabel\">\r\n                Agregar Variables\r\n              </h6>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <Select\r\n                isClearable={true}\r\n                onChange={(value) => {\r\n                  handleChange(value);\r\n                }}\r\n                aria-labelledby=\"aria-label\"\r\n                inputId=\"aria-example-input\"\r\n                name=\"aria-live-color\"\r\n                options={analisisVarList}\r\n                id=\"selectAddVarAnalisis\"\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                data-bs-dismiss=\"modal\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleVarAddingAnalisis(selectValue);\r\n                }}\r\n              >\r\n                Guardar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/*--------------------------------MODAL remove variables to analisis-------------------------------------*/}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"removeVarsAnalisisModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"removeVarsAnalisisModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h6 className=\"modal-title\" id=\"removeVarsAnalisisModalLabel\">\r\n                Quitar Variables\r\n              </h6>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <Select\r\n                isClearable={true}\r\n                onChange={(value) => {\r\n                  handleChange(value);\r\n                }}\r\n                aria-labelledby=\"aria-label\"\r\n                inputId=\"aria-example-input\"\r\n                name=\"aria-live-color\"\r\n                options={standardAnalisisVarList}\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                data-bs-dismiss=\"modal\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleVarDeletingAnalisis(selectValue);\r\n                }}\r\n              >\r\n                Guardar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupManage;\r\n","const API_URL = \"https://pgkmc.herokuapp.com/variables\";\r\nconst ALL_URL = `${API_URL}/all`;\r\nconst DELETE_URL = (gId) => `${API_URL}/delete/${gId}`;\r\nconst UPDATE_URL = (nombre_variable) => `${API_URL}/update/${nombre_variable}`;\r\nconst CREATE_URL = `${API_URL}/create`;\r\n\r\nexport const getVariables = async () => {\r\n  return fetch(ALL_URL).then((res) => {\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const deleteVariable = async (gId) => {\r\n  return fetch(DELETE_URL(gId),{\r\n    method: \"DELETE\",\r\n    headers: { \r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n  }).then(status).then((res) => {\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const updateVariable = async (name,body) => {\r\n  return fetch(UPDATE_URL(name), {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  }).then(status)\r\n    .then(res => res.json())\r\n    .catch(function(error) {\r\n        return error;\r\n    });\r\n};\r\n\r\nexport const createVariable = async (body) => {\r\n  return fetch(CREATE_URL, {\r\n    method: \"POST\",\r\n    headers: { \r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(body),\r\n  }).then(status)\r\n    .then(res => res.json())\r\n    .catch(function(error) {\r\n        return error;\r\n    });\r\n};\r\n\r\nfunction status(response) {\r\n  if (response.ok) {\r\n    return response;\r\n  }\r\n  return response.json().then((res) => Promise.reject(res));\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Table, Button, Accordion, Container, Form, Row, Col } from 'react-bootstrap';\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport { Formik, Field, ErrorMessage, FieldArray } from \"formik\";\r\n\r\n\r\n\r\n\r\nconst VariableFilter = (props) => {\r\n\r\n    const [filterData, setFilterData] = useState({text:\"\",tipo1:0,tipo2:0,tiempo: \"\"});\r\n\r\n\r\n    const filt = (d) =>{\r\n        if(d){\r\n        let textoCond = true;\r\n        if(filterData.text !== \"\"){\r\n            let f = filterData.text.toLowerCase();\r\n            textoCond = d.nombre_real?d.nombre_real.toLowerCase().includes(f):false || d.unidad? d.unidad.toLowerCase().includes(f):false || d.etiqueta?d.etiqueta.toLowerCase().includes(f):false || d.nombre_general?d.nombre_general.toLowerCase().includes(f):false || d.etapa?d.etapa.toLowerCase().includes(f):false || d.evento?d.evento.toLowerCase().includes(f):false || d.evento_inicial?d.evento_inicial.toLowerCase().includes(f):false || d.evento_final?d.evento_final.toLowerCase().includes(f):false;\r\n        }\r\n        let tipoCond = true;\r\n        if(filterData.tipo1 !== 0){\r\n            tipoCond = parseInt(d.tipo) === 2\r\n        }\r\n        let tiempoCond = true;\r\n        if(filterData.tiempo !== \"\"){\r\n            tiempoCond = d.etapa === filterData.tiempo  || d.evento === filterData.tiempo || d.evento_inicial === filterData.tiempo || d.evento_final === filterData.tiempo;\r\n        }\r\n        return textoCond && tipoCond && tiempoCond\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if(props.reales){\r\n            let newArr = Object.assign([], props.reales);\r\n            let rta = [];\r\n            for (let i = 0; i < newArr.length; i++){\r\n                if(newArr[i].values){\r\n                    let copia = Object.assign(newArr[i].values);\r\n                    if(copia){\r\n                        copia = copia.filter(filt);\r\n                        if (copia.length > 0){\r\n                            newArr[i].values = copia;\r\n                            rta.push(newArr[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            props.setVariables((s)=>({...s,filtradas:rta}));\r\n        }\r\n    },\r\n    [filterData]);\r\n\r\n    const geteventosTemporales = (etapas) => {\r\n        return (\r\n          <Select\r\n            onChange={(value) => {\r\n                setFilterData((s)=>({...s,tiempo:value.value}));\r\n            }}\r\n            className=\"select-optional\"\r\n            isClearable={true}\r\n            aria-labelledby=\"aria-label\"\r\n            inputId=\"aria-example-input\"\r\n            name=\"aria-live-color\"\r\n            placeholder=\"etapa/evento\"\r\n            options={etapas}\r\n            />\r\n        );\r\n    };\r\n\r\n    const handleSubmit = (values,i,o) => {};\r\n\r\n    return(\r\n        <div>\r\n            <Formik\r\n                onSubmit={handleSubmit}\r\n                initialValues={{\r\n                tipo1: 0,\r\n                tipo2:0,\r\n                }}\r\n              >\r\n              {({ handleSubmit, handleChange, values, errors, setFieldValue }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                    <Row>\r\n                        <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalNombreGeneral\">\r\n                            <Col sm={12}>\r\n                            <Form.Control\r\n                            type=\"text\"\r\n                            name=\"nombre_general\"\r\n                            onKeyPress={(event) => {\r\n                                if (event.key === \"Enter\") {\r\n                                    setFilterData((s)=>({...s,text:event.target.value}));\r\n                                }\r\n                            }}\r\n                            placeholder={\"Buscar\"} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Row>\r\n                </Form>\r\n              )}\r\n              </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VariableFilter;","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, Accordion, Container, Row, Col } from 'react-bootstrap';\r\nimport { getVariables } from \"../../services/variablesUtils.js\";\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\nimport { AiTwotoneEdit } from \"react-icons/ai\";\r\nimport VariableFilter from \"../variables/VariableFilter.js\";\r\nimport { deleteVariable } from \"../../services/variablesUtils.js\";\r\nimport {AiOutlinePlus, AiOutlineReload} from \"react-icons/ai\";\r\n\r\n\r\n\r\nconst VariablesList = (props) => {\r\n\r\n    const [variables, setVariables] = useState({reales:[],filtradas:[],etapas:[]});\r\n\r\n    useEffect(()=>{\r\n        if(props.aux){\r\n            if(props.aux.nombre_real){\r\n                let clon = variables.reales;\r\n                for(let titl of clon){\r\n                    for(let j=0;j <titl.values.length; j++){\r\n                        if (titl.values[j].nombre_real===props.aux.nombre_real){\r\n                            titl.values[j] = props.aux;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                let clon2 = variables.filtradas;\r\n                for(let title of clon2){\r\n                    for(let i=0; i< title.values.length; i++){\r\n                        if (title.values[i].nombre_real===props.aux.nombre_real){\r\n                            title.values[i] = props.aux;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                setVariables((s)=>({...s, filtradas:clon2,reales:clon}));\r\n            }\r\n        }\r\n    },[props.aux]);\r\n\r\n    /**\r\n    useEffect(()=>{\r\n        console.log(\"ENTRO A CREATE ITEM PROPS\");\r\n        if(props.createdItem){\r\n            if(props.createdItem.nombre_general){\r\n                let found = false;\r\n                let clon = variables.reales;\r\n                for(let titl of clon){\r\n                    if (titl.title===props.createdItem.nombre_general){\r\n                        titl.values.push(props.createdItem);\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let clon2 = variables.filtradas;\r\n                for(let title of clon2){\r\n                    if (title.title===props.createdItem.nombre_general){\r\n                        title.values.push(props.createdItem);\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(!found){\r\n                    let newCreated = {\r\n                        title:props.createdItem.nombre_general,\r\n                        values:[props.createdItem]\r\n                    }\r\n                    clon.push(newCreated);\r\n                    clon2.push(newCreated);\r\n                }\r\n                setVariables((s)=>({...s, filtradas:clon2,reales:clon}));\r\n            }\r\n        }\r\n    },[props.createdItem]);\r\n    */\r\n\r\n    useEffect(()=>{\r\n        if(props.deleted){\r\n            if(props.deleted.nombre_general){\r\n                deleteVariable(props.deleted.nombre_real).then((res)=>{\r\n                    if(res[\"res\"]===\"variable deleted successfuly\"){\r\n                        let newObj = Object.assign({},variables);\r\n                        //props.deleted.nombre_real\r\n                        for (let vvv of newObj.filtradas){\r\n                            if(vvv.title === props.deleted.nombre_general){\r\n                                vvv.values = vvv.values.filter(d=> (d.nombre_real!== props.deleted.nombre_real));\r\n                                break;\r\n                            }\r\n                        }\r\n                        setVariables(newObj);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    },\r\n    [props.deleted]);\r\n\r\n    function groupBy(arr, criteria) {\r\n        const newObj = arr.reduce(function (acc, currentValue) {\r\n        if (!acc[currentValue[criteria]]) {\r\n            acc[currentValue[criteria]] = [];\r\n        }\r\n        acc[currentValue[criteria]].push({...currentValue, name: currentValue[\"nombre_general\"]+\" \"+currentValue[\"evento\"]});\r\n        return acc;\r\n    }, {});\r\n    return newObj;\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getVariables().then((res) => {\r\n            let r = groupBy(res, \"nombre_general\");\r\n            var arr = [];\r\n            for (var key in r) {\r\n                if (r.hasOwnProperty(key)) {\r\n                arr.push( {\r\n                    title: key,values: r[key] } );\r\n                }\r\n            }\r\n            let etap = {};\r\n            for (let g of res){\r\n                if (g.evento){\r\n                    etap[g.evento] = g.evento;\r\n                }\r\n                else if(g.etapa){\r\n                    etap[g.etapa] = g.etapa;\r\n                }\r\n            }\r\n            setVariables((s)=>({...s,reales:arr,filtradas:arr,etapas:Object.keys(etap).map(t=>{\r\n                return { value: t, label: t };\r\n            })}));\r\n        });\r\n        \r\n    },[]);\r\n\r\n    \r\n    return(\r\n        <div className=\"marginLeftTitle\">\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={8}>\r\n                <br/><br/>\r\n                <h3>Lista de variables</h3>\r\n                <br/><br/>\r\n                    <Accordion>\r\n                    {\r\n                    variables.filtradas?variables.filtradas.map(\r\n                        val => { \r\n                        return <Accordion.Item eventKey={val.title} key={val.title}>\r\n                        <Accordion.Header>\r\n                            <div className=\"fases\">\r\n                                <div className=\"ac-item\">{val.title}</div>\r\n                            </div>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body>\r\n                            <Table bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th>Nombre real</th>\r\n                                        <th>Evento</th>\r\n                                        <th>Tipo</th>\r\n                                        <th>Unidad</th>\r\n                                        <th>Etiqueta</th>\r\n                                        <th>Evento inicial</th>\r\n                                        <th>Evento final</th>\r\n                                        <th>Etapa</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {val.values? val.values.map(variable => {\r\n                                    return <tr>\r\n                                        <td><Button onClick={() => props.handleShow(variable)}><BsFillTrashFill/></Button></td>\r\n                                        <td><Button onClick={() => props.selectItem(variable)}><AiTwotoneEdit/></Button></td>\r\n                                        <td>{variable.nombre_real}</td>\r\n                                        <td>{variable.evento}</td>\r\n                                        {variable.tipo === 1? <td>numérica</td>:<td>categórica</td>}\r\n                                        <td>{variable.unidad}</td>\r\n                                        <td>{variable.etiqueta}</td>\r\n                                        <td>{variable.evento_inicial}</td>\r\n                                        <td>{variable.evento_final}</td>\r\n                                        <td>{variable.etapa}</td>\r\n                                    </tr>\r\n                                    }):null}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>;\r\n                    }):null}\r\n                    </Accordion>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <br/><br/>\r\n                    <h3>Filtrar</h3>\r\n                    <br/><br/>\r\n                    <VariableFilter etapas={variables.etapas} reales={variables.reales} variables={variables} setVariables={setVariables} />\r\n                    <br/><br/>\r\n                    <Button onClick={() => props.createVariable()}><AiOutlinePlus/> Agregar variable</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VariablesList;","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Button, Table, Alert } from 'react-bootstrap';\r\nimport {ImCancelCircle} from 'react-icons/im';\r\nimport { Formik , FieldArray} from \"formik\";\r\nimport {GrClose} from \"react-icons/gr\";\r\nimport {AiOutlinePlus} from \"react-icons/ai\";\r\nimport { updateVariable, createVariable } from \"../../services/variablesUtils.js\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst VariableEdit = (props) => {\r\n\r\n    const [etiquetas, setEtiquetas] = useState(props.item.etiqueta?(props.item.etiqueta).toString().split(\"|\"):[]);\r\n    const [significados, setSignificados] = useState(props.item.significados?props.item.significados:[]);\r\n    const [sigact, setSigAct] = useState({valor_db:\"\",valor_traducido:\"\"})\r\n    const addEtiqueta = (tag) => {setEtiquetas([...etiquetas,tag])};\r\n\r\n    const addSignificado = () => {\r\n        setSignificados([...significados,sigact]);\r\n    };\r\n\r\n    useEffect(()=>{\r\n    },[significados]);\r\n\r\n\r\n    const modifySignificado = (key,sig,i) => {\r\n        let newArr = Object.assign([],significados);\r\n        if( key === \"valor_db\") newArr[i].valor_db = parseInt(sig);\r\n        if( key === \"valor_traducido\") newArr[i].valor_traducido = sig; \r\n        setSignificados(newArr);\r\n    };\r\n\r\n    const modifySignificadoActual = (key,sig) => {\r\n        let temp = Object.assign({},sigact);\r\n        if(key === \"valor_db\") temp.valor_db=parseInt(sig);\r\n        else if(key === \"valor_traducido\") temp.valor_traducido=sig;\r\n        setSigAct(temp);\r\n    };\r\n\r\n    const removeSignificado = (i) => {\r\n        let newArr = Object.assign([],significados);\r\n        newArr.splice(i,1);\r\n        setSignificados(newArr);\r\n    };\r\n\r\n    const removeEtiqueta = (i) => {\r\n        let newArr = Object.assign([],etiquetas);\r\n        newArr.splice(i,1);\r\n        setEtiquetas(newArr);\r\n    };\r\n\r\n    const handleSubmit = (values) => {};\r\n\r\n    const handleButtonClick = (values) => {\r\n        let dir = {\r\n            nombre_real:values.nombre_real,\r\n            evento: values.t===\"Evento\"?values.evento:null,\r\n            etiqueta: etiquetas.join(\"|\"),\r\n            etapa : values.t===\"Etapa\"?values.etapa:null,\r\n            evento_inicial: values.t===\"Etapa\"?values.evento_inicial:null,\r\n            evento_final: values.t===\"Etapa\"?values.evento_final:null,\r\n            nombre_general:values.nombre_general,\r\n            tipo: parseInt(values.tipo),\r\n            unidad:values.unidad,\r\n            acumulado: values.acumulado===\"si\"? 1: (values.acumulado===\"no\"? 0:0),\r\n            significados:values.tipo===\"2\"?significados:[],\r\n            min:values.min,\r\n            max:values.max\r\n        }\r\n        if(dir.nombre_general === null)props.notify(\"error\",\"La variable debe tener un nombre general\");\r\n        else if(dir.nombre_general.replace(\" \",\"\") === \"\")props.notify(\"error\",\"La variable debe tener un nombre general\");\r\n        else{\r\n            if(props.title === \"Editar\"){\r\n                updateVariable(props.item.nombre_real,dir).then((res)=>{\r\n                    if(res){\r\n                        if(res[\"error\"]){\r\n                            props.notify(\"error\",res[\"error\"].replace(\"404 Not Found: \",\"\"));\r\n                        }\r\n                        else{\r\n                            props.unSelectItem(res,\"Editar\");\r\n                            props.notify(\"success\",\"Variable editada exitosamente\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else if(props.title === \"Crear variable\"){\r\n                dir.min = 0;\r\n                dir.max = 100000;\r\n                createVariable(dir).then((res)=>{\r\n                    if(res){\r\n                        if(res[\"error\"]){\r\n                            props.notify(\"error\",res[\"error\"].replace(\"404 Not Found: \",\"\"));\r\n                        }\r\n                        else{\r\n                            props.unSelectItem(res,\"Crear variable\");\r\n                            props.notify(\"success\",\"Variable creada exitosamente\");\r\n                        }\r\n                    }\r\n                    \r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setEtiquetas(props.item.etiqueta?(props.item.etiqueta).toString().split(\"|\"):[]);\r\n        setSignificados(props.item.significados?props.item.significados:[]);\r\n    },[props.item]);\r\n\r\n    const getOptionsEtapas = (defaultVal, selectvalue, handleChange, pName) => {\r\n        return (\r\n        <Form.Select name={pName} defaultValue={defaultVal} value={selectvalue} onChange={handleChange}>\r\n            <option selected={defaultVal === null} value={null}></option>\r\n            <option selected={defaultVal === \"entorno\"} value={\"entorno\"}>entorno</option>\r\n            <option selected={defaultVal === \"parto y post-parto\"} value={\"parto y post-parto\"}>parto y post-parto</option>\r\n            <option selected={defaultVal === \"nacimiento\"} value={\"nacimiento\"}>nacimiento</option>\r\n            <option selected={defaultVal === \"salida hospitalización\"} value={\"salida hospitalización\"}>salida hospitalización</option>\r\n            <option selected={defaultVal === \"entrada Programa canguro\"} value={\"entrada Programa canguro\"}>entrada Programa canguro</option>\r\n            <option selected={defaultVal === \"semana 40\"} value={\"semana 40\"}>semana 40</option>\r\n            <option selected={defaultVal === \"mes 3\"} value={\"mes 3\"}>mes 3</option>\r\n            <option selected={defaultVal === \"mes 6\"} value={\"mes 6\"}>mes 6</option>\r\n            <option selected={defaultVal === \"mes 9\"} value={\"mes 9\"}>mes 9</option>\r\n            <option selected={defaultVal === \"mes 12\"} value={\"mes 12\"}>mes 12</option>\r\n            <option selected={defaultVal === \"entrada posición canguro\"} value={\"entrada posición canguro\"}>entrada posición canguro</option>\r\n            <option selected={defaultVal === \"salida posición canguro\"} value={\"salida posición canguro\"}>salida posición canguro</option>\r\n        </Form.Select>\r\n        );\r\n    };\r\n\r\n    const modifyInitials = () => {\r\n        let x = {...props.item,\r\n            t:props.evento?\"Evento\":\"Etapa\",\r\n            temptag:\"\",\r\n            tempvalordb:null,\r\n            tempvalortrad:\"\"\r\n        };\r\n        x.tipo = `${x.tipo}`;\r\n        x.acumulado = x.acumulado === 1?\"si\":\"no\";\r\n        return x;\r\n    };\r\n\r\n    return(\r\n        <Formik\r\n            enableReinitialize\r\n            onSubmit={handleSubmit}\r\n            initialValues={modifyInitials()}\r\n            //initialValues={props.item}\r\n        >\r\n        {({ handleSubmit, handleChange, setFieldValue, values, errors }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n            <h1>{props.title}</h1>\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalNombreGeneral\">\r\n                <Form.Label column sm={4}>\r\n                Nombre general\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                <Form.Control\r\n                type=\"text\"\r\n                value={values.nombre_general}\r\n                name=\"nombre_general\"\r\n                onChange={handleChange}\r\n                placeholder={values.nombre_general?values.nombre_general:\"Ingresar nombre general\"} />\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalNombreReal\">\r\n                <Form.Label column sm={4}>\r\n                Nombre real\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                <Form.Control\r\n                type=\"text\"\r\n                name=\"nombre_real\"\r\n                onChange={handleChange}\r\n                value={values.nombre_real}\r\n                placeholder={values.nombre_real?values.nombre_real:\"Ingresar nombre real\"} />\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalAcumulado\">\r\n                <Form.Label column sm={4}>\r\n                Acumulado\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                    <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"Sí\"\r\n                    name=\"acumulado\"\r\n                    value={\"si\"}\r\n                    checked={values.acumulado===\"si\"}\r\n                    id=\"formHorizontalRadiosTipo1356\"\r\n                    onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"No\"\r\n                    name=\"acumulado\"\r\n                    value={\"no\"}\r\n                    checked={values.acumulado===\"no\"}\r\n                    id=\"formHorizontalRadiosTipo1388\"\r\n                    onChange={handleChange}\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalUnidad\">\r\n                <Form.Label column sm={4}>\r\n                Unidad\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                <Form.Control type=\"text\"\r\n                value={values.unidad}\r\n                name=\"unidad\"\r\n                onChange={handleChange}\r\n                placeholder={values.unidad?values.unidad:\"Ingresar unidad\"} />\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalTipo\">\r\n                <Form.Label column sm={4}>\r\n                    Tipo de selección temporal\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                    <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"Evento\"\r\n                    name=\"t\"\r\n                    value={\"Evento\"}\r\n                    checked={values.t===\"Evento\"}\r\n                    id=\"formHorizontalRadiosTipo13\"\r\n                    onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                    type=\"radio\"\r\n                    value={\"Etapa\"}\r\n                    name=\"t\"\r\n                    label=\"Etapa\"\r\n                    checked={values.t===\"Etapa\"}\r\n                    id=\"formHorizontalRadiosTipo23\"\r\n                    onChange={handleChange}\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            {values.t === \"Evento\"?\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formGridState\">\r\n                    <Form.Label column sm={4}><strong>Evento</strong></Form.Label>\r\n                    <Col sm={8}>\r\n                    {\r\n                        getOptionsEtapas(values.evento?values.evento:\"\",values.evento, handleChange,\"evento\")\r\n                    }\r\n                    </Col>\r\n                </Form.Group>\r\n                :null\r\n            }\r\n\r\n            {values.t === \"Etapa\" ?\r\n            <div>\r\n            <Form.Group as={Row} className=\"mb-3\"  controlId=\"formGridState\">\r\n                <Form.Label column sm={4}><strong>Evento inicial</strong></Form.Label>\r\n                <Col sm={8}>\r\n                {\r\n                     getOptionsEtapas(values.evento_inicial?values.evento_inicial:\"\",values.evento_inicial,handleChange,\"evento_inicial\")\r\n                }\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formGridState\">\r\n                <Form.Label column sm={4}><strong>Evento final</strong></Form.Label>\r\n                <Col sm={8}>\r\n                {\r\n                     getOptionsEtapas(values.evento_final?values.evento_final:\"\",values.evento_final,handleChange,\"evento_final\")\r\n                }\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEtapa\">\r\n                <Form.Label column sm={4}>\r\n                    <strong>Etapa</strong>\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                <Form.Control type=\"text\"\r\n                onChange={handleChange}\r\n                name=\"etapa\"\r\n                placeholder={values.etapa?values.etapa:\"Ingresar etapa\"} />\r\n                </Col>\r\n            </Form.Group>\r\n            </div>:null\r\n            }\r\n\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalTipo2\">\r\n                <Form.Label as=\"legend\" column sm={4}>\r\n                    Tipo\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                    <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"numérica\"\r\n                    name=\"tipo\"\r\n                    value={\"1\"}\r\n                    checked={values.tipo === \"1\"}\r\n                    id=\"formHorizontalRadios1t\"\r\n                    onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                    type=\"radio\"\r\n                    onChange={handleChange}\r\n                    name=\"tipo\"\r\n                    label=\"categórica\"\r\n                    value={\"2\"}\r\n                    id=\"formHorizontalRadios2ttt\"\r\n                    checked={values.tipo === \"2\"}\r\n                    />\r\n                    <Form.Check\r\n                    type=\"radio\"\r\n                    value={\"3\"}\r\n                    label=\"fecha\"\r\n                    onChange={handleChange}\r\n                    name=\"tipo\"\r\n                    id=\"formHorizontalRadios3tttt\"\r\n                    checked={values.tipo === \"3\"}\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            {values.tipo === \"2\" ?\r\n            <Form.Group as={Row} className=\"mb-4\" controlId=\"formHorizontalEtiqueta2\">\r\n                <Col sm={4}></Col>\r\n                <Col sm={8}>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Valor en Base de datos</th>\r\n                                <th>Significado</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {significados.map((x,i)=>{\r\n                            return (\r\n                                <>\r\n                                <tr key={x.valor_db}>\r\n                                    <td>\r\n                                        <Form.Control\r\n                                        type=\"number\"\r\n                                        value={x.valor_db}\r\n                                        onKeyPress={(event) => {\r\n                                            if (event.key === \"Enter\") {\r\n                                                modifySignificado(\"valor_db\",event.target.value,i);\r\n                                            }\r\n                                        }}\r\n                                        onChange={handleChange}\r\n                                        placeholder={x.valor_db ? x.valor_db:\"N/A\"} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <Form.Control type=\"text\"\r\n                                        onKeyPress={(event) => {\r\n                                            if (event.key === \"Enter\") {\r\n                                                modifySignificado(\"valor_traducido\",event.target.value,i);\r\n                                            }\r\n                                        }}\r\n                                        placeholder={x.valor_traducido ? x.valor_traducido:\"N/A\"}\r\n                                        disabled/>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button className=\"settingsCancel\" onClick={() => removeSignificado(i)} ><GrClose/></Button>\r\n                                    </td>\r\n                                </tr>\r\n                                </>\r\n                            );\r\n                        })}\r\n                        <tr key={\"last\"}>\r\n                            <td>\r\n                                <Form.Control\r\n                                type=\"number\"\r\n                                name=\"tempvalordb\"\r\n                                onChange={(event)=>{\r\n                                    modifySignificadoActual(\"valor_db\",event.target.value);\r\n                                    handleChange(event);\r\n                                }}\r\n                                value={values.tempvalordb}\r\n                                placeholder=\"Ingresar valor\" />\r\n                            </td>\r\n                            <td>\r\n                                <Form.Control\r\n                                onKeyPress={(event) => {\r\n                                    if (event.key === \"Enter\") {\r\n                                        addSignificado();\r\n                                        setFieldValue(\"tempvalortrad\", \"\", true);\r\n                                        setFieldValue(\"tempvalordb\", \"\", true);\r\n                                    }\r\n                                }}\r\n                                type=\"text\"\r\n                                name=\"tempvalortrad\"\r\n                                onChange={(event)=>{\r\n                                    modifySignificadoActual(\"valor_traducido\",event.target.value);\r\n                                    handleChange(event);\r\n                                }}\r\n                                value={values.tempvalortrad}\r\n                                placeholder=\"Ingresar significado\" />\r\n                            </td>\r\n                            <td>\r\n                                <Button className=\"settingsAdd\" onClick={() => {\r\n                                    addSignificado();\r\n                                    setFieldValue(\"tempvalortrad\", \"\", true);\r\n                                    setFieldValue(\"tempvalordb\", \"\", true);\r\n                                    }}\r\n                                ><AiOutlinePlus/></Button>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Form.Group>:null}\r\n\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalEtiqueta\">\r\n                <Form.Label column sm={4}>\r\n                Etiqueta\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                {etiquetas.map((et,i) =>{\r\n                    return(\r\n                        <Alert key={i} variant=\"primary\">\r\n                            {et}\r\n                            <span className=\"cancel-etiqueta\" onClick={()=>{removeEtiqueta(i)}}><a><GrClose/></a></span>\r\n                        </Alert>\r\n                    )\r\n                } \r\n                )}\r\n                <Form.Control\r\n                type=\"text\"\r\n                onKeyPress={(event) => {\r\n                    if (event.key === \"Enter\") {\r\n                        if(event.target.value.replace(\" \",\"\") !== \"\"){\r\n                            addEtiqueta(event.target.value);\r\n                            setFieldValue(\"temptag\", \"\", true);\r\n                        }\r\n                    }\r\n                }}\r\n                name=\"temptag\"\r\n                value={values.temptag}\r\n                onChange={handleChange}\r\n                placeholder=\"Ingresar nueva etiqueta\" />\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} className=\"mb-3\">\r\n                <Col sm={{ span: 10, offset: 2 }}>\r\n                <Button type=\"button\" onClick={() => handleButtonClick(values)}>{props.title}</Button>\r\n                </Col>\r\n            </Form.Group>\r\n        </Form>\r\n    )}\r\n    </Formik>\r\n    );\r\n};\r\n\r\nexport default VariableEdit;","import React, { useState, useEffect } from \"react\";\r\nimport VariablesList from \"./variables/VariablesList.js\";\r\nimport VariableEdit from \"./variables/VariableEdit.js\";\r\nimport { Row, Col, Container, Modal, Button } from 'react-bootstrap';\r\nimport DropdownItem from \"react-bootstrap/esm/DropdownItem\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\n\r\nconst VariableManage = () => {\r\n\r\n    const [selectedItem, setSelectedItem] = useState({});\r\n    const [hide, setHide] = useState(\"\");\r\n    const [aux, setAux] = useState({});\r\n    const [deleted, setDeleted] = useState({});\r\n    const [show, setShow] = useState({value:false,variableitem:{}});\r\n    const handleClose = () => setShow({value:false,variableitem:{}});\r\n    const handleShow = (varInfo) => setShow({value:true,variableitem:varInfo});\r\n    const [funcion,setFuncion] = useState(\"\");\r\n    const [createdItem, setCreatedItem] = useState(null);\r\n\r\n    const notify = (m,d) => {\r\n        if(m===\"error\")toast.error(d);\r\n        else if(m===\"success\")toast.success(d);\r\n        else toast(d);\r\n    }\r\n\r\n    const selectItem= (item) => {\r\n        console.log(\"ENTRO3 selectItem\",funcion);\r\n        setSelectedItem(item);\r\n        setFuncion(\"Editar\");\r\n        setHide(\"hideEditDisplay\");\r\n    };\r\n\r\n    const createVariable = () => {\r\n        setSelectedItem({evento:\"\",nombre_real:\"\",nombre_general:\"\",unidad:\"\",tipo:1,acumulado:null});\r\n        setFuncion(\"Crear variable\");\r\n        setHide(\"hideEditDisplay\");\r\n    };\r\n\r\n    const unSelectItem= (item,funcc) => {\r\n        if(funcc===\"Editar\")setAux(item);\r\n        else if(funcc===\"Crear variable\"){\r\n            setCreatedItem(item);\r\n        }\r\n        setSelectedItem({});\r\n        setHide(\"\");\r\n    };\r\n\r\n    return(\r\n        <div className=\"variableList\">\r\n            <VariablesList createdItem={createdItem} createVariable={createVariable} deleted={deleted} handleShow={handleShow}  setAux={setAux} aux={aux} selectItem={selectItem}/>\r\n            <div className={\"fixedEditPanel \"+hide}>\r\n                <div className={\"scroll-panel variableEditAbsolute \" +hide}>\r\n                    <button onClick={() => setHide(\"\")} className=\"cancelEditButton\">X</button>   \r\n                    <div className=\"marginEditAbsolute\">\r\n                    <VariableEdit notify={notify} title={funcion} evento={selectedItem.evento} item={selectedItem} unSelectItem={unSelectItem} setSelectedItem={setSelectedItem}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal show={show.value} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Eliminar variable</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>¿Está seguro de que desea eliminar la variable: {show.variableitem.nombre_real}?</Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Cancelar\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={()=>{\r\n                    setDeleted(show.variableitem);\r\n                    handleClose();\r\n                }}>\r\n                    Eliminar variable\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VariableManage;","const API_URL = \"https://pgkmc.herokuapp.com/temas\";\r\nconst ALL_URL = `${API_URL}/all`;\r\nconst ALLVARS_URL = `${API_URL}/allvariables`;\r\n\r\nexport const getTemasVariables = async () => {\r\n  return fetch(ALLVARS_URL).then((res) => {\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const getTemas = async () => {\r\n  return fetch(ALL_URL).then((res) => {\r\n    return res.json();\r\n  });\r\n};\r\n","import { getTemas, getTemasVariables } from \"../../services/temasUtils.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Table, Button, Accordion, Container, Row, Col } from 'react-bootstrap';\r\nimport {BsTrash} from \"react-icons/bs\";\r\n\r\nconst TemasList = (props) => {\r\n\r\n    const [temas, setTemas] = useState([]);\r\n\r\n    function groupBy(arr, criteria) {\r\n        const newObj = arr.reduce(function (acc, currentValue) {\r\n        if (!acc[currentValue[criteria]]) {\r\n            acc[currentValue[criteria]] = [];\r\n        }\r\n        acc[currentValue[criteria]].push({...currentValue, name: currentValue[\"nombre_general\"]+\" \"+currentValue[\"evento\"]});\r\n        return acc;\r\n    }, {});\r\n    return newObj;\r\n    };\r\n\r\n    const replaceTitle = (x,y) => {\r\n        x.title = y.nombre;\r\n        return x;\r\n    };\r\n\r\n    useEffect(()=>{\r\n            getTemas().then((res2) => {\r\n                setTemas(res2);\r\n            });\r\n    },[]);\r\n\r\n    return(\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={7}>\r\n                    <Accordion>\r\n                    {\r\n                    temas.map(\r\n                        val => { \r\n                        return <Accordion.Item eventKey={val.nombre}>\r\n                        <Accordion.Header>\r\n                            <div className=\"fases\">\r\n                                <div className=\"ac-item\">{val.nombre}</div>\r\n                            </div>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body>\r\n                            <Table bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"first-column\"></th>\r\n                                        <th>Nombre general</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {val.variables.map(variable => {\r\n                                    return <tr>\r\n                                        <td className=\"first-column\"><Button variant=\"light\" onClick={() => props.selectItem(variable)}><BsTrash/></Button></td>\r\n                                        <td>{variable.nombre_general}</td>\r\n                                    </tr>\r\n                                    })}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>;\r\n                    })}\r\n                    </Accordion>\r\n                </Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default TemasList;","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport TemasList from \"./temas/TemasList.js\";\r\n\r\n\r\n\r\nconst TemasManage = () => {\r\n    const [selectedItem, setSelectedItem] = useState({});\r\n    const [hide, setHide] = useState(\"\");\r\n\r\n    const selectItem= (item) => {\r\n        setSelectedItem(item);\r\n        setHide(\"hideEditDisplay\");\r\n    };\r\n\r\n    return(\r\n        <div className=\"variableList\">\r\n            <TemasList selectItem={selectItem}/>\r\n            <div className=\"fixedEditPanel\">\r\n            <div className={\"scroll-panel variableEditAbsolute \" +hide}>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TemasManage;","import React, { useState, useEffect } from \"react\";\r\nimport { ArrowsAngleContract } from \"react-bootstrap-icons\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nconst colourOptions = [\r\n  { value: \"ocean\", label: \"Ocean\" },\r\n  { value: \"blue\", label: \"Blue\" },\r\n  { value: \"purple\", label: \"Purple\" },\r\n  { value: \"red\", label: \"Red\" },\r\n  { value: \"orange\", label: \"Orange\" },\r\n  { value: \"yellow\", label: \"Yellow\" },\r\n  { value: \"green\", label: \"Green\" },\r\n  { value: \"forest\", label: \"Forest\" },\r\n  { value: \"slate\", label: \"Slate\" },\r\n  { value: \"silver\", label: \"Silver\" },\r\n];\r\n\r\nlet originalState = [\r\n  { value: \"IQ12\", label: \"IQ12\", tipo: \"C\" },\r\n  { value: \"IQ6\", label: \"IQ6\", tipo: \"C\" },\r\n  { value: \"Estudios\", label: \"Estudios\", tipo: \"C\" },\r\n  { value: \"PC\", label: \"PC\", tipo: \"N\" },\r\n  { value: \"Peso\", label: \"Peso\", tipo: \"N\" },\r\n  { value: \"Talla\", label: \"Talla\", tipo: \"N\" },\r\n  { value: \"Ali\", label: \"Ali\", tipo: \"C\" },\r\n];\r\n\r\nlet fullList = [...originalState];\r\n\r\nlet standardVars = [];\r\n\r\nconst Groupform = () => {\r\n  const [selectValue, setSelectValue] = useState(null);\r\n  const [fList, setFList] = useState(fullList);\r\n  const [inputCatFields, setInputCatFields] = useState([]);\r\n\r\n  const handleChange = (value) => {\r\n    setSelectValue(value);\r\n  };\r\n\r\n  const handleChangeCat = (name, value) => {\r\n    let arr = [];\r\n    inputCatFields.map((field) => {\r\n      if (field.variable != name) {\r\n        arr.push(field);\r\n      }\r\n    });\r\n    let valor;\r\n    if (value == null) {\r\n      valor = null;\r\n    } else {\r\n      valor = value.value;\r\n    }\r\n    setInputCatFields([\r\n      ...arr,\r\n      {\r\n        variable: name,\r\n        limiteinf: null,\r\n        limitesup: null,\r\n        igual: valor,\r\n        tipo: \"C\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleVarAdding = (pvariable) => {\r\n    if (pvariable != null) {\r\n      let index;\r\n      fList.map((item) => {\r\n        if (pvariable.value == item.value) {\r\n          standardVars.push(pvariable);\r\n          index = fList.indexOf(pvariable);\r\n          setSelectValue(null);\r\n\r\n          setFList(fullList);\r\n        }\r\n      });\r\n      let arr = [];\r\n      for (let i = 0; i < fList.length; i++) {\r\n        if (i != index) {\r\n          arr.push(fList[i]);\r\n        }\r\n      }\r\n      setFList(arr);\r\n    }\r\n  };\r\n\r\n  const handleVarDeleting = (pvariable) => {\r\n    if (pvariable != null) {\r\n      let arr2 = [];\r\n      inputCatFields.map((field) => {\r\n        if (field.variable != pvariable.label) {\r\n          arr2.push(field);\r\n        }\r\n      });\r\n      setInputCatFields(arr2);\r\n      let index;\r\n      standardVars.map((item) => {\r\n        if (pvariable.value == item.value) {\r\n          fList.push(pvariable);\r\n\r\n          index = standardVars.indexOf(pvariable);\r\n          setSelectValue(null);\r\n        }\r\n      });\r\n      let arr = [];\r\n      for (let i = 0; i < standardVars.length; i++) {\r\n        if (i != index) {\r\n          arr.push(standardVars[i]);\r\n        }\r\n      }\r\n      standardVars = arr;\r\n    }\r\n  };\r\n\r\n  const getnumfieldsdata = () => {\r\n    let arr = [];\r\n    standardVars.map((item) => {\r\n      let down;\r\n      let up;\r\n      if (item.tipo == \"N\") {\r\n        down = parseInt(\r\n          document.getElementById(`lowerlimit${item.label}`).value\r\n        );\r\n        if (down != down) {\r\n          down = null;\r\n        }\r\n\r\n        up = parseInt(document.getElementById(`upperlimit${item.label}`).value);\r\n\r\n        if (up != up) {\r\n          up = null;\r\n        }\r\n\r\n        let jobj = {\r\n          variable: item.label,\r\n          limiteinf: down,\r\n          limitesup: up,\r\n          igual: null,\r\n          tipo: \"N\",\r\n        };\r\n        if (up != null || down != null) {\r\n          arr.push(jobj);\r\n        }\r\n      }\r\n    });\r\n    inputCatFields.map((field) => {\r\n      arr.push(field);\r\n    });\r\n    let ng = document.getElementById(\"nombre1\").value;\r\n    if (ng == \"\") {\r\n      ng = \"grupo sin nombre\";\r\n    }\r\n    let postbody = {\r\n      nombregrupo: ng,\r\n      variables: arr,\r\n    };\r\n    document.getElementById(\"nombre1\").value = \"\";\r\n    fullList = [...originalState];\r\n    setFList(fullList);\r\n    standardVars = [];\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <h5>Crear Grupo</h5>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-5 offset-1\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#exampleModal1\"\r\n          >\r\n            del Vars\r\n          </button>\r\n        </div>\r\n        <div className=\"col-5 \">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#exampleModal\"\r\n          >\r\n            add Vars\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <form>\r\n        <div className=\"groupform\">\r\n          <div className=\"innerformcontent\">\r\n            <div className=\"mb-3\">\r\n              <h5>Nombre del grupo</h5>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"nombre1\"\r\n                aria-describedby=\"emailHelp\"\r\n              />\r\n            </div>\r\n            {standardVars.map((vname) => {\r\n              if (vname.tipo == \"N\") {\r\n                return (\r\n                  <div className=\"mb-3\" key={vname.label}>\r\n                    <div>\r\n                      <h5>{vname.label}</h5>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-4  namevar\">\r\n                        <p className=\"align-middle\">Desde:</p>\r\n                      </div>\r\n                      <div className=\"col-8 \">\r\n                        <input\r\n                          type=\"number\"\r\n                          id={`lowerlimit${vname.label}`}\r\n                          className=\"form-control\"\r\n                          aria-describedby=\"lowerlimit\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-4 \">\r\n                        <p className=\"align-middle\">Hasta:</p>\r\n                      </div>\r\n                      <div className=\"col-8 \">\r\n                        <input\r\n                          type=\"number\"\r\n                          id={`upperlimit${vname.label}`}\r\n                          className=\"form-control\"\r\n                          aria-describedby=\"upperlimit\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"mb-3\" key={vname.label}>\r\n                    <div>\r\n                      <h5>{vname.label}</h5>\r\n                    </div>\r\n                    <Select\r\n                      isClearable={true}\r\n                      onChange={(value) => {\r\n                        handleChangeCat(vname.label, value);\r\n                      }}\r\n                      aria-labelledby=\"aria-label\"\r\n                      inputId=\"aria-example-input\"\r\n                      name=\"aria-live-color\"\r\n                      options={colourOptions}\r\n                    />\r\n                    <hr />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <button\r\n        type=\"\"\r\n        className=\"btn btn-primary\"\r\n        onClick={() => {\r\n          getnumfieldsdata();\r\n        }}\r\n      >\r\n        Submit\r\n      </button>\r\n      {/*-------------------------------------------------MODAL------------------------------------------------*/}\r\n      {/*-------------------------------------------------MODAL------------------------------------------------*/}\r\n      {/*-------------------------------------------------MODAL------------------------------------------------*/}\r\n      {/*-------------------------------------------------MODAL------------------------------------------------*/}\r\n      {/*-------------------------------------------------MODAL------------------------------------------------*/}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h6 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Agregar Variables\r\n              </h6>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <Select\r\n                isClearable={true}\r\n                onChange={(value) => {\r\n                  handleChange(value);\r\n                }}\r\n                aria-labelledby=\"aria-label\"\r\n                inputId=\"aria-example-input\"\r\n                name=\"aria-live-color\"\r\n                options={fList}\r\n                id=\"selectagregarvariable\"\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                data-bs-dismiss=\"modal\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleVarAdding(selectValue);\r\n                }}\r\n              >\r\n                Guardar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModal1\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h6 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Quitar Variables\r\n              </h6>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <Select\r\n                isClearable={true}\r\n                onChange={(value) => {\r\n                  handleChange(value);\r\n                }}\r\n                aria-labelledby=\"aria-label\"\r\n                inputId=\"aria-example-input\"\r\n                name=\"aria-live-color\"\r\n                options={standardVars}\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                data-bs-dismiss=\"modal\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleVarDeleting(selectValue);\r\n                }}\r\n              >\r\n                Guardar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groupform;\r\n","const API_URL = \"https://pgkmc.herokuapp.com/grupos\";\r\nconst ALL_URL = `${API_URL}/all`;\r\nconst CLUSTERALL_URL = `${API_URL}/clusterall`;\r\nconst CREATE_URL = `${API_URL}/create`;\r\nconst UPDATE_URL = (gID) => `${API_URL}/update/${gID}`;\r\nconst DELETE_URL = (gID) => `${API_URL}/delete/${gID}`;\r\nconst DELETE_CLUSTER_URL = (gID) => `${API_URL}/deletecluster/${gID}`;\r\nconst BINS_URL = (bins, variable, tipo, grupoescogido) =>\r\n  `${API_URL}/nivel/${bins}/${variable}/${tipo}/${grupoescogido}`;\r\n\r\nexport const getGruposCluster = async () => {\r\n  return fetch(CLUSTERALL_URL).then((res) => {\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const getGrupos = async () => {\r\n  return fetch(ALL_URL).then((res) => {\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const deleteGrupo = async (gId) => {\r\n  return fetch(DELETE_URL(gId), {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then(status)\r\n    .then((res) => {\r\n      return res.json();\r\n    });\r\n};\r\n\r\nexport const deleteGrupoCluster = async (gId) => {\r\n  return fetch(DELETE_CLUSTER_URL(gId), {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then(status)\r\n    .then((res) => {\r\n      return res.json();\r\n    });\r\n};\r\n\r\nexport const getBins = async (\r\n  bins,\r\n  variable,\r\n  tipo,\r\n  conditions,\r\n  grupoescogido\r\n) => {\r\n  return fetch(BINS_URL(bins, variable, tipo, grupoescogido), {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(conditions),\r\n  })\r\n    .then(status)\r\n    .then((res) => res.json())\r\n    .catch(function (error) {\r\n      console.log(\"Error\", error);\r\n    });\r\n};\r\n\r\nexport const createGroup = async (conditions) => {\r\n  return fetch(CREATE_URL, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(conditions),\r\n  }).then((res) => {\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const updateGroup = async (id,body) => {\r\n  return fetch(UPDATE_URL(id), {\r\n    method: \"PUT\",\r\n    headers: { \r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(body),\r\n  }).then((res) => {\r\n    return res.json();\r\n  });\r\n};\r\n\r\n\r\n\r\nfunction status(response) {   \r\n    if (response.ok) {\r\n        return response;\r\n    }\r\n    return response.json().then(res => Promise.reject(res));\r\n}\r\n","import React, { useState, useEffect  } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport Groupform from \"./groupform\";\r\nimport {GrFormNextLink} from \"react-icons/gr\";\r\nimport {BsCheckLg} from \"react-icons/bs\";\r\nimport {AiFillDelete, AiFillEdit} from \"react-icons/ai\";\r\nimport { deleteGrupo, deleteGrupoCluster } from \"../../services/gruposUtils.js\"\r\n\r\nconst GroupsItem = (props) => {\r\n  const [selected, setSelected] = useState(false);\r\n  const [selectedEdit, setSelectedEdit] = useState(false);\r\n\r\n  const removeGroupFromnTree = () =>{\r\n    setSelected(false);\r\n    let newArr = Object.assign([],props.groupsCluster);\r\n    newArr = newArr.filter((d)=>(d.id !== props.id && d.nombre !== props.name));\r\n    props.setGroupsCluster(newArr);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.deleted.nombre === props.groupInfo.nombre && props.deleted.id === props.groupInfo.id){\r\n      if(selected){//antes de eliminarlo lo saca del tree\r\n        removeGroupFromnTree();\r\n      }\r\n      removeGroupFromDatabase();\r\n    }\r\n  }, [props.deleted]);\r\n\r\n  /**\r\n   * <button\r\n          className={props.grupoClicked? ( props.grupoClicked.nombre === props.name ? \"btn btn-primary buttongrupos\":\"btn btn-light buttongrupos\"):\"btn btn-light buttongrupos\"}\r\n          onClick={() => {\r\n              if(props.grupoClicked){\r\n                if(props.grupoClicked.nombre === props.name){\r\n                  props.handleClick({nombre:\"\"});\r\n                }\r\n                else{\r\n                  props.handleClick(props.groupInfo);\r\n                }\r\n              }\r\n              else{\r\n                props.handleClick({nombre:\"\"});\r\n              }\r\n          }}\r\n        >\r\n          {props.name}\r\n        </button>\r\n   */\r\n\r\n  const removeGroupFromDatabase = () =>{\r\n    if(props.tipo ===\"manual\"){\r\n      setSelected(false);\r\n      deleteGrupo(props.id).then((res)=>{\r\n        if(res[\"res\"]===\"group deleted successfuly\"){\r\n          props.eliminarFunc(props.id,props.name,props.tipo);\r\n        }\r\n        else{\r\n          //indicarle al usuario que no se pudo eliminar el grupo\r\n        }\r\n      })\r\n    }\r\n    else if(props.tipo ===\"cluster\"){\r\n      setSelected(false);\r\n      deleteGrupoCluster(props.id).then((res)=>{\r\n        if(res[\"res\"]===\"group deleted successfuly\"){\r\n          props.eliminarFunc(props.id,props.name,props.tipo);\r\n        }\r\n        else{\r\n          //indicarle al usuario que no se pudo eliminar el grupo\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"row my-2 lenghtgrupos\" key={props.name}>\r\n      <div className=\"col-12 fases\">\r\n        <button\r\n        className=\"btn btn-light\"\r\n        title=\"Eliminar grupo\"\r\n        onClick={() =>{\r\n          props.handleShow(props.groupInfo);\r\n        }}>\r\n          <AiFillDelete/>\r\n        </button>\r\n        {props.tipo ===\"cluster\"?null:\r\n        <button\r\n        className={selectedEdit? \"btn btn-primary\":\"btn btn-light\"}\r\n        title=\"Editar grupo\"\r\n        onClick={() =>{\r\n          /**\r\n          if(selectedEdit){\r\n            setSelectedEdit(false);\r\n            hideEditPanel();\r\n          }\r\n          else{\r\n            setSelectedEdit(true);\r\n            showEditPanel();\r\n          }*/\r\n          if(props.grupoClicked){\r\n            if(props.grupoClicked.nombre === props.name){\r\n              props.handleClick({nombre:\"\"});\r\n            }\r\n            else{\r\n              props.handleClick(props.groupInfo);\r\n            }\r\n          }\r\n          else{\r\n            props.handleClick({nombre:\"\"});\r\n          }\r\n\r\n\r\n        }}>\r\n          <AiFillEdit/>\r\n        </button>\r\n        }\r\n        <button\r\n        title=\"Añadir al arbol\"\r\n        className={selected? \"btn btn-danger buttongrupos\":\"btn btn-light buttongrupos\"}\r\n        onClick={() => {\r\n          if(selected){\r\n            removeGroupFromnTree();\r\n          }\r\n          else{\r\n            setSelected(true);\r\n            props.setGroupsCluster(s=>([...s,props.groupInfo]));\r\n          }\r\n        }}\r\n        >\r\n          {props.name}{\" \"}{selected ? <BsCheckLg/>:<GrFormNextLink/>}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupsItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport GroupsItem from \"./groupsItem\";\r\nimport Groupform from \"./groupform\";\r\nimport data from \"./fakedatagroups\";\r\nimport {getGrupos, getGruposCluster} from \"../../services/gruposUtils.js\";\r\n\r\nconst SidebarContent = (props) => {\r\n  const [grupoClicked, setgrupoClicked] = useState({nombre:\"\"});\r\n  const [grupos,setGrupos] = useState({grupos:[],grupos_cluster:[]});\r\n\r\n  const updateGrupos = () => {\r\n    getGrupos().then((res) => {\r\n      setGrupos(s => ({...s, grupos: res}));\r\n    });\r\n    getGruposCluster().then((res) => {\r\n      setGrupos(s => ({...s, grupos_cluster: res}));\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(props.groupCreated){\r\n      setGrupos(s => ({...s, grupos: [...s.grupos,props.groupCreated]}));\r\n    }\r\n  },[props.groupCreated]);\r\n\r\n  useEffect(() => {\r\n    updateGrupos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(props.edited)updateGrupos();\r\n  }, [props.edited]);\r\n\r\n  const removeFromOriginalList = (id,name,tipo) => {\r\n    if(tipo===\"manual\"){\r\n      let newArr = Object.assign([],grupos.grupos);\r\n      newArr = newArr.filter((d)=>(d.id !== id && d.nombre !== name));\r\n      setGrupos(s => ({...s, grupos: newArr}));\r\n    }\r\n    else if(tipo===\"cluster\"){\r\n      let newArr = Object.assign([],grupos.grupos_cluster);\r\n      newArr = newArr.filter((d)=>(d.id !== id && d.nombre !== name));\r\n      setGrupos(s => ({...s, grupos_cluster: newArr}));\r\n    }\r\n  };\r\n\r\n  const handleClick = (grupo) => {\r\n    if(grupoClicked.nombre === grupo.nombre || grupo.nombre===\"\" ){\r\n      setgrupoClicked({nombre:\"\"});\r\n      props.selectItem((s)=>({nombre:\"\"}));\r\n    }\r\n    else{\r\n      setgrupoClicked(grupo);\r\n      props.selectItem((s)=>(grupo));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-1 my-2 sidebarwidth card\">\r\n      <div className=\"card-body\">\r\n        <div className=\"row my-2 \">\r\n          <h3 className=\"col-8\">Grupos</h3>\r\n        </div>\r\n        <div className=\"grouplist \">\r\n          <p className=\"subtitleSidebar\">Grupos creados manualmente</p>\r\n          {grupos.grupos.map((grupo) => {\r\n            return (\r\n              <GroupsItem\r\n                groupsCluster={props.groupsCluster}\r\n                setGroupsCluster={props.setGroupsCluster}\r\n                name={grupo.nombre}\r\n                id={grupo.id}\r\n                key={grupo.nombre}\r\n                handleClick={handleClick}\r\n                grupoClicked={grupoClicked}\r\n                groupInfo={grupo}\r\n                deleted={props.deleted}\r\n                handleShow={props.handleShow}\r\n                tipo={\"manual\"}\r\n                eliminarFunc={removeFromOriginalList}\r\n              />\r\n            );\r\n          })}\r\n          <p className=\"subtitleSidebar\">Grupos creados con clusters</p>\r\n          {grupos.grupos_cluster.map((grupo) => {\r\n            return (\r\n              <GroupsItem\r\n                groupsCluster={props.groupsCluster}\r\n                setGroupsCluster={props.setGroupsCluster}\r\n                name={grupo.nombre}\r\n                handleShow={props.handleShow}\r\n                handleClick={handleClick}\r\n                grupoClicked={grupoClicked}\r\n                id={grupo.id}\r\n                deleted={props.deleted}\r\n                tipo={\"cluster\"}\r\n                key={grupo.nombre}\r\n                groupInfo={grupo}\r\n                eliminarFunc={removeFromOriginalList}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <hr />\r\n        <Groupform />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarContent;\r\n","import React from \"react\";\r\nimport { useEffect, useRef, useState, useReducer } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {Row, Col, Form} from 'react-bootstrap';\r\nimport RangeSlider from \"../tree/RangeSlider.js\";\r\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\r\n\r\n\r\n\r\nconst ConditionPanelCrearGrupo = (props) => {\r\n\r\n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n    const Range = createSliderWithTooltip(Slider.Range);\r\n\r\n    const transformToSelect = (x,y) =>{\r\n        return { value: x, label: y };\r\n    };\r\n\r\n    const transformToSelect2 = (x) =>{\r\n        return { value: x.valor_db , label: x.valor_traducido };\r\n    };\r\n\r\n    useEffect(() => {\r\n        forceUpdate();\r\n    }, [props.data]);\r\n\r\n    const changeSelect = (x,i,varSelect) =>{\r\n        let newArr = Object.assign([],props.data);\r\n        let vSelect = newArr.filter((d)=>(d.variable===varSelect))[0];\r\n        if(vSelect){\r\n            let temp = x.map(y => {return (y.value).toString()}).join(\"|\");\r\n            vSelect.igual = temp===\"\"?null:temp;\r\n        }\r\n        props.setGrupo((s)=>({...s,condiciones:newArr}));\r\n    };\r\n\r\n    const changeRange = (x,varSelect) => {\r\n        let newArr = Object.assign([],props.data);\r\n        let vSelect = newArr.filter((d)=>(d.variable===varSelect))[0];\r\n        if(vSelect){\r\n            vSelect.limiteinf = x[0];\r\n            vSelect.limitesup = x[1];\r\n        }\r\n        props.setGrupo((s)=>({...s,condiciones:newArr}));\r\n    };\r\n\r\n    const getSelect = (listaCondiciones, seleccionado,changeSelect,varSelect,id) => {\r\n        console.log(\"AAAAAAAAAAAA\",seleccionado,id);\r\n        return (\r\n          <Select\r\n            isMulti={true}\r\n            key={`slider-${id}`}\r\n            onChange={(x,i)=>changeSelect(x,i,varSelect)}\r\n            className=\"select-optional\"\r\n            isClearable={true}\r\n            aria-labelledby=\"aria-label\"\r\n            inputId=\"aria-example-input\"\r\n            name=\"aria-live-color\"\r\n            defaultValue={seleccionado}\r\n            options={listaCondiciones}\r\n            />\r\n        );\r\n    };\r\n\r\n\r\n    const getSliders = (limiteinf, limitesup, igual, nombre) => {\r\n        let nombre_final = nombre;\r\n        let etapa_final = \"\";\r\n        if(props.data_real){\r\n            let lissta = props.data_real.filter((d)=>(d.nombre_real === nombre));\r\n            if(lissta[0]){\r\n                nombre_final = lissta[0].nombre_general;\r\n                etapa_final = lissta[0].evento?lissta[0].evento:lissta[0].etapa;\r\n            }\r\n        }\r\n        if(igual || (limitesup && limiteinf)){\r\n            return (\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalUnidad\">\r\n                    <Form.Label column sm={5}>\r\n                        <p className=\"bigtext\">{nombre_final}</p>\r\n                        <p className=\"smalltext\">{etapa_final}</p>\r\n                    </Form.Label>\r\n                    <Col sm={7}>\r\n                        <Row>\r\n                            <Range allowCross={false}\r\n                            defaultValue={[igual?igual:limiteinf, igual?igual:limitesup]}\r\n                            min={igual?igual-100:limitesup-100}\r\n                            max={igual?igual+50:limitesup+50}\r\n                            disabled={false}\r\n                            step={5}\r\n                            onChange={()=>{}}\r\n                            onAfterChange={value => {changeRange(value,nombre)}}\r\n                            />\r\n                        </Row>\r\n                        <Row>\r\n                            <div>\r\n                                <div className=\"left\">\r\n                                    <div className=\"fases\">\r\n                                        <p className=\"margin-right\">Min:</p>\r\n                                        <Form.Control\r\n                                        type=\"number\"\r\n                                        name=\"min\"\r\n                                        size=\"sm\"\r\n                                        value={igual?igual:limiteinf}\r\n                                        className=\"size-small\"\r\n                                        width=\"50px\"\r\n                                        onChange={() => {}}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"right\">\r\n                                    <div className=\"fases\">\r\n                                        <p className=\"margin-right\">Max:</p>\r\n                                            <Form.Control\r\n                                            type=\"number\"\r\n                                            value={igual?igual:limitesup}\r\n                                            name=\"max\"\r\n                                            size=\"sm\"\r\n                                            width=\"50px\"\r\n                                            className=\"right size-small\"\r\n                                            onChange={(x,i) => {}}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Row>\r\n                    </Col>\r\n                </Form.Group>);\r\n        }\r\n        else{\r\n            return (<div className=\"fases\">\r\n                    <Form.Control disabled type=\"text\" placeholder=\"N/A\" />\r\n                </div>);\r\n        }\r\n    };\r\n\r\n    const getInputText = (nombre,valor) => {\r\n        if(valor === null || valor === undefined) valor = \"N/A\";\r\n        let p = valor.toString().split(\"|\");\r\n        let sigs = [];\r\n        let lissta = [];\r\n        let nombre_final = nombre;\r\n        let etapa_final = \"\";\r\n        if(props.data_real){\r\n            lissta = props.data_real.filter((d)=>(d.nombre_real === nombre));\r\n            if(lissta[0]){\r\n                sigs = lissta[0].significados;\r\n                nombre_final = lissta[0].nombre_general;\r\n                etapa_final = lissta[0].evento?lissta[0].evento:lissta[0].etapa;\r\n            }\r\n        }\r\n        p = p.map((x)=>{\r\n            let found = sigs.filter((d)=>(parseInt(d.valor_db) === parseInt(x)))[0];\r\n            if(found){\r\n                return found;\r\n            }\r\n            else return x;\r\n        });\r\n        let p2 = p.map(x =>transformToSelect(x.valor_db?x.valor_db:x,x.valor_traducido?x.valor_traducido:x));\r\n        let sigs2 = sigs.map(x=>transformToSelect2(x));\r\n        return (\r\n        <Form>\r\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalUnidad\">\r\n                <Form.Label column sm={5}>\r\n                    <p className=\"bigtext\">{nombre_final}</p>\r\n                    <p className=\"smalltext\">{etapa_final}</p>\r\n                </Form.Label>\r\n                <Col sm={6}>\r\n                    {getSelect(sigs2,p2,changeSelect,nombre,nombre_final+etapa_final)}\r\n                </Col>\r\n            </Form.Group>\r\n        </Form>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h5>{props.data? props.data.length > 0? \"Condiciones\": \"\": \"\"}</h5>\r\n            {props.data.map(c => {return <div>\r\n                {c.tipo === 1?\r\n                <div>\r\n                    <Form>\r\n                        {getSliders(c.limiteinf,c.limitesup,c.igual,c.variable)}\r\n                    </Form>\r\n                </div>:null}\r\n                {c.tipo === 2?getInputText(c.variable,c.igual):null}\r\n            </div>})}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConditionPanelCrearGrupo;","import {Modal, Button, Container, Row, Col, Form} from 'react-bootstrap';\r\nimport React, { useState } from \"react\";\r\nimport {createGroup} from \"../../services/gruposUtils.js\";\r\nimport ConditionPanelCrearGrupo from \"../tree/ConditionPanelCrearGrupo.js\";\r\nimport { Formik } from \"formik\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst CreateGroupTree = (props) => {\r\n\r\n    const handleClose = () => props.setShow(s=> ({...s,show:false}));\r\n\r\n    const handleSubmit = (values) => {\r\n      let request = {\r\n                nombregrupo: values.nombre,\r\n                variables: props.data,\r\n                datasource: props.datasource\r\n              };\r\n      if(!(/^[a-z_](?:[a-z0-9_]{0,30})?$/.test(request.nombregrupo))){\r\n        toast.error(\"El nombre del grupo solo puede contener minúsculas, digitos o guiones bajos (_). No puede comenzar por digitos\");\r\n      }\r\n      else{\r\n        createGroup(request).then((res)=>{\r\n          if(res){\r\n            if(res[\"error\"]){\r\n                toast.error(res[\"error\"].replace(\"404 Not Found: \",\"\"));\r\n            }\r\n            else{\r\n                toast.success(\"Grupo creado exitosamente\");\r\n                props.setGroupCreated(res);\r\n                handleClose();\r\n            }\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    return (\r\n        <>\r\n          <ToastContainer/>\r\n          <Modal show={props.show} onHide={handleClose} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Agregar grupo</Modal.Title>\r\n            </Modal.Header>\r\n            <Formik\r\n                onSubmit={handleSubmit}\r\n                initialValues={{\r\n                nombre: \"\",\r\n                }}\r\n            >\r\n            {({ handleSubmit, handleChange, values, errors }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                  <Row>\r\n                    <Col md={7}>\r\n                      <Row>\r\n                        <h5>Información del grupo:</h5>\r\n                        <p>Conteo: {props.estadisticas.conteo}</p>\r\n                        <p>Porcentaje: {parseFloat(props.estadisticas.percentage).toFixed(2)}%</p>\r\n                      </Row>\r\n                      <Row>\r\n                        <ConditionPanelCrearGrupo data_real={props.data_real} data={props.data} significados={props.significados}/> \r\n                      </Row>\r\n                    </Col>\r\n                    <Col md={5}>\r\n                      <Form.Group as={Row} className=\"mb-3\" controlId=\"formGridState\">\r\n                        <Form.Label>Nombre del grupo</Form.Label>\r\n                        <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"nombre\"\r\n                        value={values.nombre}\r\n                        onChange={handleChange}\r\n                        placeholder=\"nombre del grupo\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                  Cancelar\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Guardar grupo\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Form>\r\n            )}\r\n            </Formik>\r\n          </Modal>\r\n        </>\r\n      );\r\n};\r\n\r\nexport default CreateGroupTree;","import {Modal, Button, Form, Row, Col, Alert} from 'react-bootstrap';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport RangeSlider from \"../tree/RangeSlider.js\";\r\nimport Select from \"react-select\";\r\nimport { FcTreeStructure } from 'react-icons/fc';\r\nimport { Formik, Field, ErrorMessage, FieldArray } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\r\n\r\n\r\nconst FaseSettingsModal = (props) => {\r\n\r\n    const Range = createSliderWithTooltip(Slider.Range);\r\n\r\n      const [listaOpciones, setListaOpciones] = useState([]);\r\n\r\n      const transformToSelect = (x) =>{\r\n        return { value: x.valor_db , label: x.valor_traducido };\r\n      };\r\n\r\n      const transformToSelect2 = (x) =>{\r\n        return { value: x, label: x };\r\n      };\r\n\r\n      const changeSelect = (i,x) => {\r\n        let info = (x.name).toString().split(\"|\");\r\n        let index = parseInt(info[0]);\r\n        let key = info[1]\r\n        let newArr = Object.assign([],props.fase.estructura_grupo);\r\n        if(key === \"igual\"){\r\n          newArr[index].igual = i.map(y => {return (y.value).toString()}).join(\"|\");\r\n          newArr[index].limiteinf = null;\r\n          newArr[index].limitesup = null;\r\n        }\r\n        changeEstructuraGrupo(newArr);\r\n      };\r\n\r\n      const changeTipoDivision = (value) =>{\r\n        let newArr = Object.assign([],props.fases);\r\n        for(let i=0; i<newArr.length; i++){\r\n          if(newArr[i].fase === props.fase.fase){\r\n            newArr[i].tipodivision = value;\r\n            break;\r\n          }\r\n        }\r\n        props.setFases(newArr);\r\n      };\r\n\r\n      const handleButtonClick = (values) =>{\r\n        let newArr = Object.assign([],props.fases);\r\n        for(let i=0; i<newArr.length; i++){\r\n          if(newArr[i].fase === props.fase.fase){\r\n            if(newArr[i].limiteinf === newArr[i].limitesup){\r\n              newArr[i].igual = newArr[i].limiteinf;\r\n              newArr[i].limiteinf = null;\r\n              newArr[i].limitesup = null;\r\n            }\r\n            if(props.fase.tipodivision !== \"default\"){\r\n              newArr[i].tipodivision=props.fase.tipodivision;\r\n              newArr[i].estructura_grupo=props.fase.estructura_grupo;\r\n            }\r\n            newArr[i].bins = props.fase.bins;\r\n          }\r\n        }\r\n        props.setFases(newArr);\r\n        props.buildArbol(props.fase.fase);\r\n        props.setShow(s=> ({...s,show:false}));\r\n      };\r\n\r\n      const changeRange = (x,i) => {\r\n        let newArr = Object.assign([],props.fase.estructura_grupo);\r\n        newArr[i].limiteinf = x[0];\r\n        newArr[i].limitesup = x[1];\r\n        changeEstructuraGrupo(newArr);\r\n      };\r\n\r\n\r\n      useEffect(() => {\r\n          //aquí se busca la lista de opciones de la variable escogida, se devuelve error si no se ha escogido la variable\r\n          let newArr = Object.assign([],props.fase.estructura_grupo);\r\n          let ltemp =  props.fase.tipo === 2 ? props.fase.significados: [];\r\n          let chosen = ltemp.length > 0 ? []: null;\r\n          let limit = props.fase.bins;\r\n          let resta = parseInt(limit) - newArr.length; //si es positivo hay que agregar items al array, en caso contrario, se quitan\r\n          if(resta>0){\r\n            for(let i=0; i<resta; i++){\r\n            let obj = {\r\n              numerogrupo: (newArr.length+1),\r\n              limitesup: props.fase.max,\r\n              limiteinf: props.fase.min,\r\n              igual: chosen\r\n             };\r\n            newArr.push(obj);\r\n            }\r\n          }\r\n          else if (resta <0){\r\n            newArr = newArr.splice(0, props.fase.bins);\r\n          }\r\n          changeEstructuraGrupo(newArr);\r\n          setListaOpciones(ltemp.map(x=>transformToSelect(x)));\r\n      }, [props.fase,props.fase.bins]);\r\n      \r\n\r\n    useEffect(()=>{\r\n    },[props.fases]);\r\n\r\n    const changeEstructuraGrupo = (value) => {\r\n      let newArr = Object.assign([],props.fases);\r\n        for(let i=0; i<newArr.length; i++){\r\n          if(newArr[i].fase === props.fase.fase){\r\n            newArr[i].estructura_grupo= value;\r\n            break;\r\n          }\r\n        }\r\n      props.setFases(newArr);\r\n    };\r\n\r\n    const handleSubmit = (values,i,o) => {};\r\n\r\n    const changeBins = (value) => {\r\n      let newArr = Object.assign([],props.fases);\r\n        for(let i=0; i<newArr.length; i++){\r\n          if(newArr[i].fase === props.fase.fase){\r\n            newArr[i].bins= parseInt(value);\r\n            break;\r\n          }\r\n        }\r\n      props.setFases(newArr);\r\n    };\r\n    /**\r\n    const schema = Yup.object().shape({\r\n      numero_bins: Yup.number().min(2), // mayor o igual que 2, menor que 10\r\n      tipodivision: Yup.boolean().required(),//solo default o la otra\r\n      estructura_grupos: Yup.array().of(\r\n        Yup.object().shape({\r\n          numerogrupo:Yup.string(),//requerido\r\n          limitesup: Yup.number(),//mayor o igual que limiteinf, puede ser nulo\r\n          limiteinf: Yup.number().when(\"limitesup\", {\r\n            is: (x) =>{x < 8},\r\n            then: Yup.number().required(\"Debe ingresar un máximo mayor que el mínimo\")\r\n          }),//menor o igual que limitesup, puede ser nulo\r\n          igual: Yup.string(),//debe ser una lista de valores\r\n        })\r\n      )}\r\n    );\r\n     */\r\n\r\n    const handleClose = () => props.setShow((s)=> ({...s,show:false}));\r\n\r\n    return (\r\n        <>\r\n          <Modal show={props.show} onHide={handleClose} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Editar nivel</Modal.Title>\r\n            </Modal.Header>\r\n            <Formik\r\n                onSubmit={handleSubmit}\r\n                initialValues={{\r\n                numero_bins: 2,\r\n                estructura_grupos: [],\r\n                }}\r\n              >\r\n              {({ handleSubmit, handleChange, values, errors, setFieldValue }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Modal.Body>\r\n                      <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontal\">\r\n                          <Form.Label column sm={4}>\r\n                            ¿cómo desea manejar las divisiones?\r\n                          </Form.Label>\r\n                          <Col sm={8}>\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Por defecto\"\r\n                            name=\"tipodivision\"\r\n                            id=\"formHorizontalRadios1\"\r\n                            defaultChecked ={props.fase.tipodivision ===\"default\"}\r\n                            defaultValue={props.fase.tipodivision ===\"default\"}\r\n                            value={props.fase.tipodivision ===\"default\"}\r\n                            onChange={(d)=>{\r\n                              if(d.target.checked===true){\r\n                                changeTipoDivision(\"default\");\r\n                              }\r\n                            }}\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Especificar los rangos\"\r\n                            name=\"tipodivision\"\r\n                            defaultChecked ={props.fase.tipodivision !== \"default\"}\r\n                            defaultValue={props.fase.tipodivision !==\"default\"}\r\n                            id=\"formHorizontalRadios2\"\r\n                            value={props.fase.tipodivision !== \"default\"}\r\n                            onChange={(d)=>{\r\n                              if(d.target.checked===true){\r\n                                changeTipoDivision(\"nodefault\");\r\n                              }\r\n                            }}\r\n                            />\r\n                          </Col>\r\n                      </Form.Group>\r\n                      <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontal\">\r\n                          <Form.Label column sm={4}>\r\n                            Número de divisiones\r\n                          </Form.Label>\r\n                          <Col sm={8}>\r\n                            <Form.Control\r\n                            maxLength=\"10\"\r\n                            type=\"number\"\r\n                            name=\"numero_bins\"\r\n                            placeholder={2}\r\n                            defaultValue={props.fase.bins}\r\n                            onKeyPress={(event) => {\r\n                              if (event.key === \"Enter\") {\r\n                                changeBins(event.target.value);\r\n                              }\r\n                            }}\r\n                            />\r\n                          </Col>\r\n                      </Form.Group>\r\n                      <Form.Group>\r\n                        {props.fase.tipodivision !== \"default\"?\r\n                          <div>\r\n                          {props.fase.tipo === 2?\r\n                          props.fase.estructura_grupo.map((x,index)=>{\r\n                              return (<Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontal\" key={index}>\r\n                                  <Form.Label column sm={4}>\r\n                                      grupo {x.numerogrupo}\r\n                                  </Form.Label>\r\n                                  <Col sm={8}>\r\n                                      <Select\r\n                                      isMulti={true}\r\n                                      name={`${index}|igual`}\r\n                                      onChange={changeSelect}\r\n                                      defaultValue={x.igual? x.igual\r\n                                        .toString()\r\n                                        .split(\"|\")\r\n                                        .map(\r\n                                          y=>{\r\n                                            let foo = props.fase.significados.filter((d)=>(d.valor_db.toString() === y))[0];\r\n                                            return foo? transformToSelect(foo):\"\";\r\n                                          \r\n                                          }):[]}\r\n                                      className=\"select-optional\"\r\n                                      isClearable={true}\r\n                                      aria-labelledby=\"aria-label\"\r\n                                      inputId=\"aria-example-input\"\r\n                                      options={props.fase.significados.map(x=>transformToSelect(x))}\r\n                                      />\r\n                                  </Col>\r\n                              </Form.Group>)\r\n                          }):null}\r\n                          {props.fase.tipo === 1? props.fase.estructura_grupo.map((x,index)=>{\r\n                              return (\r\n                              <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontal\" key={index}>\r\n                                <Form.Label column sm={4}>\r\n                                  grupo {x.numerogrupo}\r\n                                </Form.Label>\r\n                                <Col sm={7}>\r\n                                  <Row>\r\n                                    <Range\r\n                                    allowCross={false}\r\n                                    defaultValue={[x.limiteinf, x.limitesup]}\r\n                                    min={props.fase.min}\r\n                                    max={props.fase.max}\r\n                                    disabled={false}\r\n                                    step={5}\r\n                                    onChange={()=>{}}\r\n                                    onAfterChange={value => {changeRange(value,index)}}\r\n                                    />\r\n                                  </Row>\r\n                                  <Row>\r\n                                    <div>\r\n                                      <div className=\"left\">\r\n                                      <div className=\"fases\">\r\n                                        <p className=\"margin-right\">Min:</p>\r\n                                        <Form.Control\r\n                                        type=\"number\"\r\n                                        name=\"min\"\r\n                                        size=\"sm\"\r\n                                        value={x.limiteinf}\r\n                                        className=\"size-small\"\r\n                                        width=\"50px\"\r\n                                        onChange={() => {}}/>\r\n                                      </div>\r\n                                      </div>\r\n                                      <div className=\"right\">\r\n                                        <div className=\"fases\">\r\n                                          <p className=\"margin-right\">Max:</p>\r\n                                          <Form.Control\r\n                                          type=\"number\"\r\n                                          value={x.limitesup}\r\n                                          name=\"max\"\r\n                                          size=\"sm\"\r\n                                          width=\"50px\"\r\n                                          className=\"right size-small\"\r\n                                          onChange={(x,i) => {console.log(\"\",x,i)}}/>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </Row>\r\n                                </Col>\r\n                              </Form.Group>)\r\n                          }):null}\r\n                          {props.fase.tipo !== 1 && props.fase.tipo !== 2 ? \r\n                          <Alert key={props.fase.variable_real} variant=\"danger\">\r\n                              No ha seleccionado ninguna variable\r\n                          </Alert>:null}\r\n                        </div>:null}\r\n                      </Form.Group>\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                      Cancelar\r\n                    </Button>\r\n                    <Button variant=\"primary\" type=\"button\"  onClick={() => handleButtonClick(values)}>\r\n                      Editar divisiones\r\n                    </Button>\r\n                  </Modal.Footer>\r\n                </Form>\r\n              )}\r\n              </Formik>\r\n          </Modal>\r\n        </>\r\n  );\r\n};\r\n\r\nexport default FaseSettingsModal;","\r\nclass TreeClass{\r\n    constructor(root) {\r\n        this.root = root;\r\n    };\r\n\r\n    getRoot(){\r\n        return this.root;\r\n    };\r\n\r\n    getTipo(){\r\n        return this.root.tipo_arbol;\r\n    };\r\n\r\n    //encuentra el primer nodo que cumpla la condición\r\n    findChildren(node, condition, action){\r\n        if (condition(node)){\r\n            action(node);\r\n            return node;\r\n        }\r\n        else if(node.children === null) return null;\r\n        else if(node.children.length <= 0) return null;\r\n        else{\r\n            var lista = [];\r\n            for( let c of node.children){\r\n              lista.push(this.findChildren(c, condition, action));\r\n            }\r\n            let v = lista.find(d => d !== null);\r\n            return v;\r\n        }\r\n    }\r\n\r\n    addChildren(node,children){\r\n        this.findChildren(this.root,(d)=>{return d.uid===node.uid} ,(n)=>{\r\n            n.children = children;\r\n        });\r\n    }\r\n\r\n    hideChildren(node){\r\n        this.findChildren(this.root, (d)=>{return d.uid===node.uid}, (n) =>{\r\n            if(n.children){\r\n                n.oculto = true;\r\n                let temp = n.children;\r\n                n._children = temp;\r\n                n.children = null;                \r\n            }\r\n            else{\r\n                n.oculto =false;\r\n                let temp = n._children;\r\n                n.children = temp;\r\n                n._children = null;\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    cleanTree(node){\r\n        if(node === null){\r\n            return;\r\n        }\r\n        else if(node.children === null || node.children.length === 0){\r\n            return;\r\n        }\r\n        else{\r\n            node.children = node.children.filter((d)=>(d.uid !== \"delete\"));\r\n            for(let child of node.children){\r\n                this.cleanTree(child);\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteNode(node){\r\n        this.findChildren(this.root,(d)=>{return d.uid===node.uid},(n)=>{\r\n            n.uid = \"delete\";\r\n        });\r\n        this.cleanTree(this.root);\r\n\r\n    }\r\n\r\n    //devuelve los nodos en un nivel\r\n    getNodesInLevel(fase,node){\r\n        let rta = [];\r\n        if (node.fase === fase){\r\n            rta.push(node);\r\n        }\r\n        if(node.children !== null && node.children !== undefined && node.children.length >0){\r\n            for(let n of node.children){\r\n                let temprta = this.getNodesInLevel(fase,n);\r\n                for(let item of temprta){\r\n                    rta.push(item);\r\n                }\r\n            }\r\n        }\r\n        return rta;\r\n    };\r\n\r\n};\r\n\r\nexport default TreeClass;","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { saveAs } from 'file-saver';\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { getBins } from \"../../services/gruposUtils.js\";\r\nimport CreateGroupTree from \"../tree/createGroupTree.js\";\r\nimport FaseSettingsModal from \"../tree/faseSettingsModal.js\";\r\nimport { FcSettings } from 'react-icons/fc';\r\nimport { HiSave } from 'react-icons/hi';\r\nimport { AiOutlineReload } from 'react-icons/ai';\r\nimport Select from \"react-select\";\r\nimport TreeClass from \"./TreeClass.js\";\r\n\r\n\r\nfunction Tree(props) {\r\n\r\n  const d3ToPng = require('d3-svg-to-png');\r\n\r\n  const [listaTrees, setListaTrees] = useState({lista:{},flag:{}});\r\n  const [listaTreesC, setListaTreesC] = useState({lista:{},flag:{}});\r\n\r\n  var JSZip = require(\"jszip\");\r\n  let zip = new JSZip();\r\n  let photoZip = zip.folder(`arboles.zip`);\r\n\r\n  const customStyles = {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      background: '#fff',\r\n      borderColor: '#9e9e9e',\r\n      minHeight: '30px',\r\n      height: '30px',\r\n      width: '227px',\r\n      boxShadow: state.isFocused ? null : null,\r\n    }),\r\n\r\n    valueContainer: (provided, state) => ({\r\n      ...provided,\r\n      height: '30px',\r\n      width: '227px',\r\n      padding: '0 6px'\r\n    }),\r\n\r\n    input: (provided, state) => ({\r\n      ...provided,\r\n      margin: '0px',\r\n    }),\r\n    indicatorSeparator: state => ({\r\n      display: 'none',\r\n    }),\r\n    indicatorsContainer: (provided, state) => ({\r\n      ...provided,\r\n      height: '30px',\r\n    }),\r\n  };\r\n\r\n  const customStylesEtapas = {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      background: '#fff',\r\n      borderColor: '#9e9e9e',\r\n      minHeight: '30px',\r\n      height: '30px',\r\n      width: '197px',\r\n      boxShadow: state.isFocused ? null : null,\r\n    }),\r\n\r\n    valueContainer: (provided, state) => ({\r\n      ...provided,\r\n      height: '30px',\r\n      width: '197px',\r\n      padding: '0 6px'\r\n    }),\r\n\r\n    input: (provided, state) => ({\r\n      ...provided,\r\n      margin: '0px',\r\n    }),\r\n    indicatorSeparator: state => ({\r\n      display: 'none',\r\n    }),\r\n    indicatorsContainer: (provided, state) => ({\r\n      ...provided,\r\n      height: '30px',\r\n    }),\r\n  };\r\n\r\n  const [fase0, setFase0] = useState({fase:\"fase0\",grupos:[]});\r\n  const [fases, setFases] = useState([\r\n    {fase:\"fase1\", variable_real: null, tipo: null, significados: [], min: 0, max: 10000, variable: null, etapa:null, tipodivision:\"default\", bins:2, estructura_grupo:[], lista_etapas:[]},\r\n    {fase:\"fase2\", variable_real: null, tipo: null, significados: [], min: 0, max: 10000, variable: null, etapa:null, tipodivision:\"default\", bins:2, estructura_grupo:[], lista_etapas:[]},\r\n    {fase:\"fase3\", variable_real: null, tipo: null, significados: [], min: 0, max: 10000, variable: null, etapa:null, tipodivision:\"default\", bins:2, estructura_grupo:[], lista_etapas:[]},\r\n    {fase:\"fase4\", variable_real: null, tipo: null, significados: [], min: 0, max: 10000, variable: null, etapa:null, tipodivision:\"default\", bins:2, estructura_grupo:[], lista_etapas:[]}\r\n  ]);\r\n  \r\n  const [show, setShow] = useState({show:false,data:[],significados:[],datasource:null,estadisticas:{}});\r\n  const [showFaseSettings, setShowFaseSettings] = useState({show:false,fase:{}});\r\n  const canvas = useRef();\r\n  const canvasDownload= useRef();\r\n\r\n  const handleShow = (selectedGroup,significados,datasource,estadisticas) => setShow(s=> ({data:selectedGroup,show:true,significados:significados,datasource:datasource,estadisticas:estadisticas}));\r\n  const handleShowFaseSettingsModal = (pFase) => {setShowFaseSettings({show:true,fase:pFase})};\r\n\r\n  const geteventosTemporales = (fase,etapas) => {\r\n    return (\r\n      <Select\r\n        onChange={(value) => {\r\n          if(value){\r\n            updateFase(\"changeEvent\",fase, null, value.value, null);\r\n          }\r\n        }}\r\n        className=\"select-optional\"\r\n        isClearable={true}\r\n        aria-labelledby=\"aria-label\"\r\n        inputId=\"aria-example-input\"\r\n        name=\"aria-live-color\"\r\n        placeholder=\"etapa/evento\"\r\n        options={etapas}\r\n        styles={customStylesEtapas}\r\n        />\r\n    );\r\n  };\r\n\r\n\r\n  const getVariables = (fase) => {\r\n    return (\r\n      <Select\r\n      onChange={(value) => {\r\n        if(value){\r\n          updateFase(\"changeVar\",fase, value.value, null, null);\r\n        }\r\n      }}\r\n      className=\"select-optional\"\r\n      isClearable={true}\r\n      aria-labelledby=\"aria-label\"\r\n      inputId=\"aria-example-input\"\r\n      name=\"aria-live-color\"\r\n      placeholder=\"Ingresar variable\"\r\n      options={props.variables}\r\n      styles={customStyles}\r\n      />\r\n    );\r\n  };\r\n\r\n  const cleanRequest = (x) => {\r\n    let rta = {\r\n      limiteinf: x.limiteinf ? parseFloat(x.limiteinf):null,\r\n      limitesup: x.limitesup ? parseFloat(x.limitesup):null,\r\n      igual: x.igual,\r\n      variable: x.variable,\r\n      tipo: x.tipo\r\n    };\r\n    return rta;\r\n  };\r\n\r\n  const convertToTree = (x,fase,parent,conditions, meaning,datasource,tipo) => {\r\n    let newArr = conditions ? JSON.parse(JSON.stringify(conditions)) : [];\r\n    newArr.push(cleanRequest(x));\r\n    x.children = [];\r\n    x.fase = fase;\r\n    x.grupo = newArr;\r\n    x.tipo = tipo;\r\n    x.datasource = datasource;\r\n    x.oculto = false;\r\n    x.id = (parent ? parent.id : \"null\")+\"inf\"+(x.limiteinf ? x.limiteinf.toString() : \"null\")+\"sup\"+(x.limitesup ? x.limitesup.toString() : \"null\")+\"igual\"+(x.igual ? x.igual.toString() : \"null\");\r\n    x.uid = Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n    x.color = \"#\"+Math.floor(Math.random()*16777215).toString(16);\r\n    x.traduccion = meaning ? meaning : x.igual;\r\n    return x\r\n  };\r\n  \r\n  const label = (d) => {\r\n    let r=\"\";\r\n    if (d.limiteinf && d.limitesup) r=` [ ${d.limiteinf} , ${d.limitesup} ]`;\r\n    else if (d.limiteinf) r=`${d.variable} > ${d.limiteinf}`;\r\n    else if(d.limitesup) r=`${d.variable} < ${d.limitesup}`;\r\n    else if(d.igual || (d.nombre && d.id)) r=`${d.traduccion}`;\r\n    return r;\r\n  };\r\n\r\n  const getColor = (d) => {\r\n    return d.parent == null ? \"#19c2bf\" : d.parent.data.color;\r\n  }\r\n\r\n  const convertConditionsToRequest = (x,y) => {\r\n    var neww = {\r\n      condiciones_previas:x,\r\n      estructura_grupos:y\r\n    }\r\n    return neww;\r\n  };\r\n\r\n  const downloadSVG = () => {\r\n    d3.selectAll(`.listaTreeDownload`).remove();\r\n    for (let i of Object.keys(listaTrees.lista)){\r\n      let h = d3.hierarchy(listaTrees.lista[i].getRoot(), function(d){return d.children});\r\n      graphDownload(h,`svgD${i}`,i,{\r\n        xScale : props.groupsCluster.length >0? (j) => 267+j*0.5: (j) => 32+j*0.5 ,\r\n        descXScale: props.groupsCluster.length >0? (j) => 235+(235*j-9):(j) => (235*j-9),\r\n        class_name: \"listaTreeDownload\"});\r\n    }\r\n    d3.selectAll(`.listaTreeCDownload`).remove();\r\n    for (let i of Object.keys(listaTreesC.lista)){\r\n      if( props.groupsCluster.filter((d)=>(d.nombre === listaTreesC.lista[i].getRoot().traduccion))[0]){\r\n        let h = d3.hierarchy(listaTreesC.lista[i].getRoot(), function(d){return d.children});\r\n        graphDownload(h,`svgCD${i}`,i,{\r\n          descXScale: props.groupsCluster.length >0? (j) => 235+(235*j-9):(j) => (235*j-9),\r\n          class_name: \"listaTreeCDownload\"\r\n        });\r\n      }\r\n    }\r\n    for (let i of Object.keys(listaTrees.lista)){\r\n      d3ToPng(`#svgD${i}`, `diagrama arbol ${i}`, {\r\n        scale: 1,\r\n        format: 'png',\r\n        quality: 0.92,\r\n        ignore: null,\r\n        download: false,\r\n        width:900,\r\n        cssinline: 1\r\n      }).then(fileData => {\r\n        photoZip.file(`diagrama arbol ${i}.png`,fileData.split('base64,')[1],{base64: true});\r\n        if(Object.keys(listaTreesC.lista).length === 0 && parseInt(i) === (Object.keys(listaTrees.lista).length-1)){\r\n          downloadZip();\r\n          d3.selectAll(\".listaTreeDownload\").remove();\r\n          d3.selectAll(\".listaTreeCDownload\").remove();\r\n        }\r\n      });\r\n    }\r\n    for (let i of Object.keys(listaTreesC.lista)){\r\n      d3ToPng(`#svgCD${i}`, `diagrama arbol grupo ${i}`, {\r\n        scale: 1,\r\n        format: 'png',\r\n        quality: 0.92,\r\n        ignore: null,\r\n        download:false,\r\n        width:900,\r\n        cssinline: 1\r\n      }).then(fileData => {\r\n        photoZip.file(`diagrama arbol grupo ${i}.png`,fileData.split('base64,')[1],{base64: true});\r\n        if(parseInt(i) === (Object.keys(listaTreesC.lista).length-1)){\r\n          downloadZip();\r\n          d3.selectAll(\".listaTreeDownload\").remove();\r\n          d3.selectAll(\".listaTreeCDownload\").remove();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const downloadZip = () => {\r\n    zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n      saveAs(content, `arboles.zip`);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFase0(s=>({...s,grupos:props.groupsCluster}))\r\n  }, [props.groupsCluster]);\r\n\r\n  useEffect(()=>{\r\n    buildArbol(\"fase0\");\r\n  },[fase0]);\r\n\r\n  const updateFase = (source, pFase, pVariable, pEtapa, bins) => {\r\n    let newArr = Object.assign([],fases);\r\n    for (let i = 0; i< newArr.length; i++){\r\n      if (newArr[i].fase === pFase){\r\n        if(source === \"changeEvent\"){\r\n          if(newArr[i].variable !== null){//ya tiene una variable asignada\r\n            let f = props.data_real.filter(s=> (s.nombre_general === newArr[i].variable && (s.evento === pEtapa || s.etapa === pEtapa)));\r\n            if (f.length > 0){\r\n              newArr[i].variable_real = f[0].nombre_real;\r\n              newArr[i].tipo = f[0].tipo;\r\n              newArr[i].min = f[0].min;\r\n              newArr[i].max = f[0].max;\r\n              newArr[i].significados = f[0].significados;\r\n              setFases(newArr);\r\n              buildArbol(pFase);\r\n              //SI EXISTE SE ACTUALIZA EL ARBOL\r\n            }\r\n            else{//EXCEPCIÓN PORQUE NO EXISTE\r\n              newArr[i].variable_real = null;\r\n              newArr[i].tipo = null;\r\n              newArr[i].min = 0;\r\n              newArr[i].max = 10000;\r\n              newArr[i].significados = [];\r\n              setFases(newArr);\r\n            }\r\n          }\r\n          newArr[i].etapa = pEtapa;\r\n        }\r\n        else if(source === \"changeVar\"){\r\n          let tapas = props.variables_real.filter((d)=>(d.title === pVariable))[0];\r\n          if(newArr[i].etapa !== null){//ya tiene una etapa asignada\r\n            let f = props.data_real.filter(s=> (s.nombre_general === pVariable && (s.evento === newArr[i].etapa || s.etapa === newArr[i].etapa)));\r\n            if (f.length > 0){\r\n              newArr[i].variable_real = f[0].nombre_real;\r\n              newArr[i].tipo = f[0].tipo;\r\n              newArr[i].min = f[0].min;\r\n              newArr[i].max = f[0].max;\r\n              newArr[i].significados = f[0].significados;\r\n              newArr[i].lista_etapas = tapas?tapas.etapa:[];\r\n              setFases(newArr);\r\n              buildArbol(pFase);\r\n              //SI EXISTE SE ACTUALIZA EL ARBOL\r\n            }\r\n            else{\r\n              newArr[i].variable_real = null;\r\n              newArr[i].tipo = null;\r\n              newArr[i].min = 0;\r\n              newArr[i].max = 10000;\r\n              newArr[i].significados = [];\r\n              newArr[i].lista_etapas = tapas?tapas.etapa:[];\r\n              setFases(newArr);\r\n            }\r\n          }\r\n          else{\r\n            newArr[i].lista_etapas = tapas?tapas.etapa:[];\r\n            setFases(newArr);\r\n          }\r\n          newArr[i].variable = pVariable;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const clickMinus = (node,index) => {\r\n    if(node.data.tipo ===1){\r\n      listaTrees.lista[index].hideChildren(node.data);\r\n    }\r\n    else{\r\n      listaTreesC.lista[index].hideChildren(node.data);\r\n    }\r\n    \r\n    redrawTree();\r\n  }\r\n\r\n  const addGroup = (d,i) => {\r\n    let sigs = [];\r\n    if(i.data.tipo !== 2){\r\n      let t = props.data_real.filter((d)=>(d.nombre_real === i.data.variable))[0];\r\n      if(t){\r\n        sigs = t.significado;\r\n      }\r\n    }\r\n    handleShow(i.data.grupo,sigs,i.data.datasource,{conteo:i.data.conteo, percentage:i.data.percentage});\r\n  }\r\n\r\n  const clickCancel = (node,index) => {\r\n    if(node.data.tipo ===1){\r\n      listaTrees.lista[index].deleteNode(node.data);\r\n    }\r\n    else{\r\n      listaTreesC.lista[index].deleteNode(node.data);\r\n    }\r\n    redrawTree();\r\n  };\r\n\r\n  function graphDownload(rot,svgid,index,{\r\n    highlight = () => false,\r\n    marginLeft = 40,\r\n    width= 900,\r\n    xScale = (j) => 32+j*0.5,\r\n    yScale = (j) => j*0.7,\r\n    descXScale = (j) => (235*j-9),\r\n    class_name= \"\"\r\n  } = {}) {\r\n\r\n    let depthScale = 470; //fase 3: 350, fase 3:\r\n    let dx=100;\r\n    let dy=25;\r\n    let treeLink = d3.linkHorizontal().x(d => (xScale(d.y))).y(d => (yScale(d.x)));\r\n    let tre = d3.tree().nodeSize([dx,dy]);\r\n    rot = tre(rot);\r\n\r\n    rot.each(function(d) { d.y = d.depth * depthScale; });\r\n\r\n    let x0 = Infinity;\r\n    let x1 = -x0;\r\n    rot.each(d => {\r\n      if (d.x > x1) x1 = d.x;\r\n      if (d.x < x0) x0 = d.x;\r\n    });\r\n\r\n    const svg = d3.select(canvasDownload.current)\r\n        .append(\"svg\")\r\n        .attr(\"viewBox\", [0, 0, width, (x1 - x0 + dx * 2)])\r\n        .attr(\"id\",svgid)\r\n        .attr(\"class\",class_name)\r\n        .style(\"overflow\", \"visible\");\r\n\r\n    const g = svg.append(\"g\")\r\n        .attr(\"font-family\", \"sans-serif\")\r\n        .attr(\"font-size\", 10)\r\n        .attr(\"transform\", `translate(${marginLeft},${dx - x0})`);\r\n\r\n    g.append(\"g\")\r\n    .attr(\"fill\",\"none\")\r\n    .selectAll(\"g\")\r\n    .data(fases.filter((d)=> (d.variable_real!=null)))\r\n    .join(enter =>{\r\n      let desc = enter\r\n        .append(\"g\");\r\n      desc.append(\"rect\")\r\n      .attr(\"width\", 227)\r\n      .attr(\"height\",1)\r\n      .attr(\"y\",x0-15)\r\n      .attr(\"fill\",\"black\")\r\n      .attr(\"x\",(d,i)=>descXScale(i));\r\n      desc.append(\"text\")\r\n      .attr(\"fill\",\"black\")\r\n      .attr(\"y\",x0-30)\r\n      .attr(\"x\",(d,i)=>descXScale(i))\r\n      .attr(\"text-anchor\", \"start\")\r\n      .style(\"font-weight\",700)\r\n      .text(d =>d.variable);\r\n      desc.append(\"text\")\r\n      .attr(\"fill\",\"black\")\r\n      .attr(\"y\",x0-19)\r\n      .attr(\"x\",(d,i)=>descXScale(i))\r\n      .attr(\"text-anchor\", \"start\")\r\n      .text(d => d.etapa);\r\n      return desc;\r\n    });\r\n      \r\n    const link = g.append(\"g\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"#555\")\r\n      .attr(\"stroke-opacity\", 0.4)\r\n      .attr(\"stroke-width\", 1.5)\r\n      .selectAll(\"path\")\r\n      .data(rot.links())\r\n      .join(\"path\")\r\n        .attr(\"stroke\", d => highlight(d.source) && highlight(d.target) ? \"red\" : null)\r\n        .attr(\"stroke-opacity\", d => highlight(d.source) && highlight(d.target) ? 1 : null)\r\n        .attr(\"d\", treeLink);\r\n    \r\n    const node = g.append(\"g\")\r\n      .attr(\"stroke-linejoin\", \"round\")\r\n      .attr(\"stroke-width\", 3)\r\n      .selectAll(\"g\")\r\n      .data(rot.descendants())\r\n      .join(enter => {\r\n              var nodeEnter = enter\r\n              .append(\"g\")\r\n              .attr(\"class\", \"node\");\r\n              nodeEnter.append(\"rect\")\r\n              .attr(\"width\", 100)\r\n              .attr(\"height\",25)\r\n              .attr('class', 'rect0')\r\n              nodeEnter.append(\"rect\")\r\n              .attr(\"width\", d => d.data.percentage)\r\n              .attr(\"height\",25)\r\n              .attr('class', 'rect')\r\n              .attr(\"fill\",d => getColor(d));\r\n              nodeEnter.append(\"rect\")\r\n              .attr(\"width\", 100)\r\n              .attr(\"height\",25)\r\n              .attr('class', 'rect2')\r\n              .on(\"click\",(d,i)=>addGroup(d,i));\r\n              nodeEnter.append(\"text\")\r\n              .attr(\"x\", d => d.children ? 0:102)\r\n              .attr(\"font-weight\", 700)\r\n              .attr(\"y\",d => d.children ?-7:22)\r\n              .text(d => `(${parseFloat(d.data.percentage).toFixed(2)}%)`);\r\n              nodeEnter.append(\"text\")\r\n              .attr(\"fill\", d => highlight(d) ? \"red\" : null)\r\n              .attr(\"y\", d => d.children ? -19:10)\r\n              .attr(\"x\", d => d.children ? 0 : 102)\r\n              .attr(\"text-anchor\", d => d.children ? \"center\" : \"start\")\r\n              .text(d => label(d.data));\r\n              return nodeEnter;\r\n      })\r\n        .attr(\"transform\", d => `translate(${xScale(d.y)-40},${yScale(d.x)-12})`);\r\n\r\n    return svg.node();\r\n  }\r\n\r\n  function graph(rot,svgid,index,{\r\n    highlight = () => false,\r\n    marginLeft = 40,\r\n    width= 900,\r\n    xScale = (j) => 32+j*0.5,\r\n    yScale = (j) => j*0.7,\r\n    class_name= \"\"\r\n  } = {}) {\r\n\r\n    let depthScale = 470; //fase 3: 350, fase 3:\r\n    let dx=100;\r\n    let dy=25;\r\n    let treeLink = d3.linkHorizontal().x(d => (xScale(d.y))).y(d => (yScale(d.x)));\r\n    let tre = d3.tree().nodeSize([dx,dy]);\r\n    rot = tre(rot);\r\n\r\n    rot.each(function(d) { d.y = d.depth * depthScale; });\r\n\r\n    let x0 = Infinity;\r\n    let x1 = -x0;\r\n    rot.each(d => {\r\n      if (d.x > x1) x1 = d.x;\r\n      if (d.x < x0) x0 = d.x;\r\n    });\r\n\r\n    const svg = d3.select(canvas.current)\r\n        .append(\"svg\")\r\n        .attr(\"viewBox\", [0, 0, width, (x1 - x0 + dx * 2)])\r\n        .attr(\"id\",svgid)\r\n        .attr(\"class\",class_name)\r\n        .style(\"overflow\", \"visible\");\r\n\r\n    const g = svg.append(\"g\")\r\n        .attr(\"font-family\", \"sans-serif\")\r\n        .attr(\"font-size\", 10)\r\n        .attr(\"transform\", `translate(${marginLeft},${dx - x0})`);\r\n      \r\n    const link = g.append(\"g\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"#555\")\r\n      .attr(\"stroke-opacity\", 0.4)\r\n      .attr(\"stroke-width\", 1.5)\r\n      .selectAll(\"path\")\r\n      .data(rot.links())\r\n      .join(\"path\")\r\n        .attr(\"stroke\", d => highlight(d.source) && highlight(d.target) ? \"red\" : null)\r\n        .attr(\"stroke-opacity\", d => highlight(d.source) && highlight(d.target) ? 1 : null)\r\n        .attr(\"d\", treeLink);\r\n    \r\n    const node = g.append(\"g\")\r\n      .attr(\"stroke-linejoin\", \"round\")\r\n      .attr(\"stroke-width\", 3)\r\n      .selectAll(\"g\")\r\n      .data(rot.descendants())\r\n      .join(enter => {\r\n              var nodeEnter = enter\r\n              .append(\"g\")\r\n              .attr(\"class\", \"node\");\r\n              nodeEnter.append(\"rect\")\r\n              .attr(\"width\", 100)\r\n              .attr(\"height\",25)\r\n              .attr('class', 'rect0');\r\n              nodeEnter.append(\"rect\")\r\n              .attr(\"width\", d => d.data.percentage)\r\n              .attr(\"height\",25)\r\n              .attr('class', 'rect')\r\n              .attr(\"fill\",d => getColor(d));\r\n              nodeEnter.append(\"rect\")\r\n              .attr(\"width\", 100)\r\n              .attr(\"height\",25)\r\n              .attr('class', 'rect2')\r\n              .on(\"click\",(d,i)=>addGroup(d,i));\r\n              nodeEnter.append(\"text\")\r\n              .attr(\"x\", d => d.children ? 0:106)\r\n              .attr(\"font-weight\", 700)\r\n              .attr(\"y\",d => d.children ?-7:22)\r\n              .text(d => `(${parseFloat(d.data.percentage).toFixed(2)}%)`);\r\n              nodeEnter.append(\"text\")\r\n              .attr(\"fill\", d => highlight(d) ? \"red\" : null)\r\n              .attr(\"y\", d => d.children ? -19:10)\r\n              .attr(\"x\", d => d.children ? 0 : 106)\r\n              .attr(\"text-anchor\", d => d.children ? \"center\" : \"start\")\r\n              .text(d => label(d.data));\r\n              nodeEnter.append(\"circle\")\r\n              .attr(\"r\",(d)=> d.parent? 8:0)\r\n              .attr(\"fill\",\"gray\")\r\n              .attr(\"cx\",(d)=> d.parent? 98:0)\r\n              .attr(\"id\", (d,i) => {return \"a\"+parseInt(d.x).toString()+parseInt(d.y).toString();})\r\n              .on(\"mouseover\", (event, [a]) => {nodeEnter.select(\"#a\"+parseInt(a.x).toString()+parseInt(a.y).toString()).style(\"fill\",\"red\");})\r\n              .on(\"mouseout\",  (event, [a]) => {nodeEnter.select(\"#a\"+parseInt(a.x).toString()+parseInt(a.y).toString()).style(\"fill\",\"gray\");})\r\n              .on(\"click\", (d,i) => clickCancel(i,index));\r\n              nodeEnter.append(\"image\")\r\n              .attr(\"xlink:href\",(d)=> d.parent? \"https://www.svgrepo.com/show/104330/cancel.svg\":null)\r\n              .attr(\"width\", (d)=> d.parent? 8: 0)\r\n              .attr(\"height\", (d)=> d.parent? 8:0)\r\n              .attr(\"x\",(d)=> d.parent? 94:0)\r\n              .attr(\"y\",(d)=> d.parent? -4:0)\r\n              .attr(\"color\",\"white\");\r\n              let nodeMinus = nodeEnter.append(\"circle\")\r\n              .attr(\"r\", 8)\r\n              .style(\"fill\",d => d.data.oculto?\"blue\":\"lightgray\")\r\n              .attr(\"cx\", (d)=> d.parent? 82: 98)\r\n              .attr(\"id\", (d,i) => {return \"b\"+parseInt(d.x).toString()+parseInt(d.y).toString();})\r\n              .on(\"mouseover\", (event, [a]) => {\r\n                if(a.data.oculto === false)nodeEnter.select(\"#b\"+parseInt(a.x).toString()+parseInt(a.y).toString()).style(\"fill\",\"blue\");\r\n              })\r\n              .on(\"mouseout\",  (event, [a]) => {\r\n                if(a.data.oculto === false)nodeEnter.select(\"#b\"+parseInt(a.x).toString()+parseInt(a.y).toString()).style(\"fill\",\"lightgray\");\r\n              })\r\n              .on(\"click\", (d,i) => clickMinus(i,index));\r\n              nodeEnter.append(\"image\")\r\n              .attr(\"xlink:href\",\"https://www.svgrepo.com/show/376008/dash.svg\")\r\n              .attr(\"width\", 10)\r\n              .attr(\"height\", 10)\r\n              .attr(\"x\",(d)=> d.parent? 77:93)\r\n              .attr(\"y\",-5)\r\n              .attr(\"color\",\"white\");\r\n              nodeEnter.append(\"title\")\r\n              .text(d => `${parseFloat(d.data.percentage).toFixed(2)}%\\nConteo: ${parseFloat(d.data.conteo)}`);\r\n              return nodeEnter;\r\n      })\r\n        .attr(\"transform\", d => `translate(${xScale(d.y)-40},${yScale(d.x)-12})`);\r\n    return svg.node();\r\n  }\r\n\r\n  const redrawTree = ({\r\n    xScale = (j) => 32+j*0.5,\r\n    yScale = (j) => j*0.7\r\n  }={}) => {\r\n    d3.selectAll(`.listaTree`).remove();\r\n    for (let i of Object.keys(listaTrees.lista)){\r\n      let h = d3.hierarchy(listaTrees.lista[i].getRoot(), function(d){return d.children});\r\n      graph(h,`svg${i}`,i,{\r\n        xScale : fase0.grupos.length > 0? (j)=>267+j*0.5:xScale,\r\n        yScale : yScale,\r\n        class_name: \"listaTree\"\r\n      });\r\n    }\r\n    d3.selectAll(`.listaTreeC`).remove();\r\n    for (let i of Object.keys(listaTreesC.lista)){\r\n      if( props.groupsCluster.filter((d)=>(d.nombre === listaTreesC.lista[i].getRoot().traduccion))[0]){\r\n        d3.selectAll(`#svgC${i}`).remove();\r\n        let h = d3.hierarchy(listaTreesC.lista[i].getRoot(), function(d){return d.children});\r\n        graph(h,`svgC${i}`,i,{\r\n          class_name: \"listaTreeC\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    redrawTree();\r\n  },[listaTrees.lista,listaTreesC.lista]);\r\n\r\n\r\n  const loadOtherFases = (numFaseActual,item,var_act,tipos_permitidos,avaliable_lists) =>{\r\n    let faseAnterior = \"fase\"+(numFaseActual-1).toString();\r\n    for(let itemm of avaliable_lists){\r\n      let temArr = itemm ===\"a\"? Object.assign([],listaTrees.lista):Object.assign([],listaTreesC.lista);\r\n      for(let arbol of temArr){\r\n        var listaConHojas = arbol.getNodesInLevel(faseAnterior, arbol.getRoot());\r\n        for(let hoja of listaConHojas){\r\n          let tipo_arb= hoja.tipo_arbol;\r\n          if(tipos_permitidos.indexOf(tipo_arb) !== -1){\r\n            getBins(item.bins,item.variable_real,item.tipo,convertConditionsToRequest(hoja.grupo,item.estructura_grupo),tipo_arb === \"tipo0\"?hoja.datasource:\"data\").then((res) => {\r\n              if(res){\r\n                res = res.filter((d)=>(d.igual!==\"no hay dato\"));//o no está en significados\r\n                let tempArr2 = [];\r\n                for (let response of res){\r\n                  let traduccion = \"\";\r\n                  if(item.tipo === 2 && var_act[0]){\r\n                    let listaigual = response.igual.toString().split(\"|\");\r\n                    for (let itemigual of listaigual){\r\n                      let lista_respuestas = var_act[0].significados.filter((f)=>(parseInt(f.valor_db) === parseInt(itemigual)));\r\n                      if(lista_respuestas[0])traduccion+=lista_respuestas[0].valor_traducido+\"\\n\";\r\n                    }\r\n                  }\r\n                  let r = JSON.parse(JSON.stringify(convertToTree(response,item.fase,hoja,hoja.grupo,traduccion,hoja.tipo_arbol,hoja.datasource)));\r\n                  tempArr2.push(r);\r\n                }\r\n                hoja.children = tempArr2;\r\n                //itemm ===\"a\"? setListaTrees((s)=>temArr):setListaTreesC((s)=>temArr);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //fase 1\r\n  //recursiveBins(1,pBins,pVar,pTipo,[],[],\"data\",null,null,null,1)\r\n\r\n  function recursiveBins(numFaseActual,pBins,pVar,pTipo,pGrupoNodoPadre,pEstructuraGrupo,pDataSource,pPadre,pIndex,pRoot,pTipoArbol){\r\n    getBins(pBins,pVar,pTipo,convertConditionsToRequest(pGrupoNodoPadre,pEstructuraGrupo),pDataSource).then((res)=>{\r\n      if(res){\r\n        //TRANFORMAR LOS NODOS Y LIMPIARLOS \r\n        let varObject = props.data_real.filter((d)=>(d.nombre_real === pVar))[0];\r\n        let listaNewNodos = [];\r\n        for (let nodo of res){\r\n          let traduccion = \"\";\r\n          if(pTipo === 2 && varObject){\r\n            let listaigual = nodo.igual.toString().split(\"|\");\r\n            for(let itemigual of listaigual){\r\n              let significado = varObject.significados.filter((f)=>( (f.valor_db).toString() === (itemigual).toString() ))[0];\r\n              if(significado)traduccion+=significado.valor_traducido+\"\\n\";\r\n            }\r\n          }\r\n          if((pTipo === 1 && nodo.igual !== \"no hay dato\")||(pTipo === 2 && traduccion !== null && traduccion !== \"\"  && nodo.igual !== \"no hay dato\")){\r\n            let r = JSON.parse(JSON.stringify(convertToTree(nodo,`fase${numFaseActual}`,pPadre,pGrupoNodoPadre,traduccion,pDataSource,pTipoArbol)));\r\n            listaNewNodos.push(r);\r\n          }\r\n        }\r\n        let tempRoots={};//Este arreglo es necesario si solo se activa la fase 1\r\n        if(pRoot){\r\n          pRoot.addChildren(pPadre,listaNewNodos);\r\n        }\r\n        else if(pTipoArbol === 1){\r\n          for(let j=0;j<listaNewNodos.length;j++){\r\n            tempRoots[j]=new TreeClass(listaNewNodos[j]);\r\n          }\r\n        }\r\n\r\n        let nextFase = `fase${numFaseActual+1}`;\r\n        let faseFound = fases.filter((d)=>(d.fase===nextFase));\r\n        if(faseFound[0] && listaNewNodos.length>0){//existe una fase siguiente\r\n          if(faseFound[0].variable_real){//existe una fase siguiente y ya se le asignó una variable\r\n            let i = 0;\r\n            for (let child of listaNewNodos){//BUSCAR LOS HIJOS DE LOS NODOS YA AÑADIDOS AL ARBOL\r\n              if(pRoot){\r\n                recursiveBins(numFaseActual+1,faseFound[0].bins,faseFound[0].variable_real,faseFound[0].tipo,child.grupo,faseFound[0].estructura_grupo,pDataSource,child,pIndex,pRoot,pTipoArbol);\r\n              }\r\n              else if(pTipoArbol === 1){\r\n                recursiveBins(numFaseActual+1,faseFound[0].bins,faseFound[0].variable_real,faseFound[0].tipo,child.grupo,faseFound[0].estructura_grupo,pDataSource,child,i,tempRoots[i],pTipoArbol);\r\n              }\r\n            i+=1;\r\n            }\r\n          }\r\n          else{\r\n            if(pTipoArbol === 1){\r\n              if(pRoot!==null){\r\n                let tempArr = Object.assign({},listaTrees.lista);\r\n                tempArr[pIndex] = pRoot;\r\n                setListaTrees((s)=>({...s,lista:tempArr}));\r\n              }\r\n              else{\r\n                setListaTrees((s)=>({...s,lista:tempRoots}));\r\n              }\r\n            }\r\n            else if(pTipoArbol === 2){\r\n              if(pRoot && pIndex){\r\n                let tempArr = Object.assign({},listaTreesC.lista);\r\n                tempArr[pIndex] = pRoot;\r\n                setListaTreesC((s)=>({...s,lista:tempArr}));\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else{\r\n          if(pTipoArbol === 1){\r\n            if(pIndex && pRoot){\r\n              let tempArr = Object.assign({},listaTrees.lista);\r\n              tempArr[pIndex] = pRoot;\r\n              setListaTrees((s)=>({...s,lista:tempArr}));\r\n            }\r\n            else{\r\n              setListaTrees((s)=>({...s,lista:tempRoots}));\r\n            }\r\n          }\r\n          else if(pTipoArbol === 2){\r\n            if(pRoot && pIndex){\r\n              let tempArr = Object.assign({},listaTreesC.lista);\r\n              tempArr[pIndex] = pRoot;\r\n              setListaTreesC((s)=>({...s,lista:tempArr}));\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n      else{\r\n        //mostrar mensaje de error\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    let fase1temp = fases.filter((d)=>(d.fase===\"fase1\"))[0];\r\n    if(fase0.grupos && fase1temp.variable_real){\r\n      for (let i of Object.keys(listaTreesC.lista)){\r\n        let refRoot = Object.assign([],[listaTreesC.lista[i]]);\r\n        let refHoja = Object.assign({},listaTreesC.lista[i].getRoot());\r\n        recursiveBins(1,fase1temp.bins,fase1temp.variable_real,fase1temp.tipo,[],fase1temp.estructura_grupo,refHoja.datasource,refHoja,i,refRoot[0],2);\r\n      }\r\n    }\r\n  },[listaTreesC.flag]);\r\n\r\n  useEffect(()=>{\r\n    let fase1temp = fases.filter((d)=>(d.fase===\"fase1\"))[0];\r\n    if(fase1temp.variable_real){\r\n        recursiveBins(1,fase1temp.bins,fase1temp.variable_real,fase1temp.tipo,[],fase1temp.estructura_grupo,\"data\",null,null,null,1);\r\n    }\r\n  },[listaTrees.flag]);\r\n\r\n  function buildArbol(faseComienzo) {\r\n    let numFaseComienzo = parseInt(faseComienzo.slice(-1));\r\n    let fase = fases.filter((d)=>(d.fase===faseComienzo));\r\n    if(faseComienzo ===\"fase0\"){\r\n      let tArr = {};\r\n      let gr = JSON.parse(JSON.stringify(fase0.grupos));\r\n      let indx = 0;\r\n      for (let gr_item2 of gr){\r\n        let gr_item= Object.assign({},gr_item2);\r\n        let r = convertToTree(gr_item,\"fase0\",null,null, gr_item.nombre,gr_item.nombre,2);\r\n        tArr[indx]=new TreeClass(r);\r\n        indx+=1;\r\n      }\r\n      setListaTreesC((s)=>({ lista:tArr, flag:!(s.flag) }));\r\n    }\r\n    if(fase[0]){\r\n      if(faseComienzo ===\"fase1\"){\r\n        setListaTrees((s)=>({ lista:{}, flag:!(s.flag) }));\r\n        for (let i of Object.keys(listaTreesC.lista)){\r\n          let refRoot = Object.assign([],[listaTreesC.lista[i]]);\r\n          let hojas = listaTreesC.lista[i].getNodesInLevel(`fase${numFaseComienzo-1}`,listaTreesC.lista[i].getRoot());\r\n          for(let hoja of hojas){\r\n            recursiveBins(numFaseComienzo,fase[0].bins,fase[0].variable_real,fase[0].tipo,[],fase[0].estructura_grupo,hoja.datasource,hoja,i,refRoot[0],2);\r\n          }\r\n        }  \r\n\r\n      }\r\n      else{\r\n        for (let i of Object.keys(listaTrees.lista)){\r\n          let refRoot = Object.assign([],[listaTrees.lista[i]]);\r\n          let hojas = listaTrees.lista[i].getNodesInLevel(`fase${numFaseComienzo-1}`,listaTrees.lista[i].getRoot());\r\n          for(let hoja of hojas){\r\n            recursiveBins(numFaseComienzo,fase[0].bins,fase[0].variable_real,fase[0].tipo,hoja.grupo,fase[0].estructura_grupo,hoja.datasource,hoja,i,refRoot[0],1);\r\n          }\r\n        }\r\n        for (let i of Object.keys(listaTreesC.lista)){\r\n          let refRoot = Object.assign([],[listaTreesC.lista[i]]);\r\n          let hojas = listaTreesC.lista[i].getNodesInLevel(`fase${numFaseComienzo-1}`,listaTreesC.lista[i].getRoot());\r\n          for(let hoja of hojas){\r\n            recursiveBins(numFaseComienzo,fase[0].bins,fase[0].variable_real,fase[0].tipo,hoja.grupo,fase[0].estructura_grupo,hoja.datasource,hoja,i,refRoot[0],2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const refresh = () =>{\r\n    setFases([\r\n      {fase:\"fase1\", variable_real: null, tipo: null, significados: [], min: 0, max: 10000, variable: null, etapa:null, tipodivision:\"default\", bins:2, estructura_grupo:[], lista_etapas:[]},\r\n      {fase:\"fase2\", variable_real: null, tipo: null, significados: [], min: 0, max: 10000, variable: null, etapa:null, tipodivision:\"default\", bins:2, estructura_grupo:[], lista_etapas:[]},\r\n      {fase:\"fase3\", variable_real: null, tipo: null, significados: [], min: 0, max: 10000, variable: null, etapa:null, tipodivision:\"default\", bins:2, estructura_grupo:[], lista_etapas:[]},\r\n      {fase:\"fase4\", variable_real: null, tipo: null, significados: [], min: 0, max: 10000, variable: null, etapa:null, tipodivision:\"default\", bins:2, estructura_grupo:[], lista_etapas:[]}\r\n    ]);\r\n    setFase0({fase:\"fase0\",grupos:[]});\r\n    setListaTrees({lista:{},flag:{}});\r\n    setListaTreesC({lista:{},flag:{}});\r\n    d3.selectAll(`.listaTree`).remove();\r\n    d3.selectAll(`.listaTreeC`).remove();\r\n    d3.selectAll(\".listaTreeDownload\").remove();\r\n    d3.selectAll(\".listaTreeCDownload\").remove();\r\n  };\r\n\r\n  const addFase = () => {\r\n    let newFase = \"fase\"+ (fases.length+1).toString();\r\n    setFases([...fases,{fase:newFase, variable_real: null, significados:[], tipo: null, min: 0, max: 10000,variable: null, etapa:null, tipodivision:\"default\", bins:2, estructura_grupo:[]}]);\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <div className=\"fases fixed-fases\">\r\n    <div>\r\n      <button className=\"settingsArbol\" onClick={() => {downloadSVG()}}><HiSave/></button>\r\n      <button className=\"settingsArbol\" onClick={() => {refresh()}}><AiOutlineReload/></button>\r\n    </div>\r\n      {fase0.grupos.length > 0? (\r\n        <div>\r\n          <div  className=\"fase0\"></div>\r\n        </div>): null\r\n      }    \r\n      {\r\n        fases.map(fase => {\r\n          return (\r\n            <div>\r\n                {getVariables(fase.fase)}\r\n                <div className=\"fases\">\r\n                  {geteventosTemporales(fase.fase,fase.lista_etapas)}\r\n                  <button\r\n                  className=\"settingsFase\"\r\n                  onClick={() => {\r\n                    handleShowFaseSettingsModal(fase)\r\n                  }}\r\n                  >\r\n                    <FcSettings/>\r\n                  </button>\r\n                </div>\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n      <button typr=\"button\" className=\"buttonAddPhase\" onClick= {() => addFase()}>+</button>\r\n    </div>\r\n    <div ref={canvas} id=\"canvas\"></div>\r\n    <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n    <div ref={canvasDownload}></div>\r\n    <CreateGroupTree setGroupCreated={props.setGroupCreated} show={show.show} setShow={setShow} data={show.data} significados={show.significados} datasource={show.datasource} estadisticas={show.estadisticas} data_real={props.data_real}/>\r\n    <FaseSettingsModal show={showFaseSettings.show} setShow={setShowFaseSettings} fase={showFaseSettings.fase} setFases={setFases} fases={fases} buildArbol={buildArbol}/>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Tree;","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport {Row, Col, Form, Button} from 'react-bootstrap';\r\nimport ConditionPanelCrearGrupo from \"../tree/ConditionPanelCrearGrupo.js\";\r\nimport { Formik, Field, ErrorMessage, FieldArray } from \"formik\";\r\nimport {updateGroup} from \"../../services/gruposUtils.js\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst GrupoTreeDetail = (props) => {\r\n\r\n    const [body,setBody]=useState({});\r\n\r\n    const notify = (m,d) => {\r\n        if(m===\"error\")toast.error(d);\r\n        else if(m===\"success\")toast.success(d);\r\n        else toast(d);\r\n    }\r\n\r\n    const testCondiciones = (conds) => {\r\n        let rta = false;\r\n        for(let c of conds){\r\n            if(c.igual === null && c.limitesup === null && c.limiteinf === null){\r\n                rta = true;\r\n                break;\r\n            }\r\n        }\r\n        return rta;\r\n    };\r\n\r\n    const handleButtonClick = (values) => {\r\n        let request = {\r\n            nombregrupo:values.nombregrupo?values.nombregrupo:props.grupo.nombre,\r\n            datasource:\"data\",\r\n            variables:body.condiciones\r\n        }\r\n        if(!(/^[a-z_](?:[a-z0-9_]{0,30})?$/.test(request.nombregrupo))){\r\n            notify(\"error\",\"El nombre solo puede contener minúsculas, digitos o guiones bajos (_). No puede comenzar por digitos\");\r\n        }\r\n        else if(testCondiciones(request.variables) === true){\r\n            notify(\"error\",\"Las variables deben tener por lo menos un valor asignado\");\r\n        }\r\n        else{\r\n            updateGroup(props.grupo.id,request).then(res => {\r\n                if(res){\r\n                    if(res[\"error\"]){\r\n                        props.notify(\"error\",res[\"error\"].replace(\"404 Not Found: \",\"\"));\r\n                    }\r\n                    else{\r\n                        props.setEdited(true);\r\n                        props.setHide(\"\");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.setEdited(false);\r\n        setBody(Object.assign({},props.grupo));\r\n    }, [props.grupo]);\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <h1>Editar</h1>\r\n            </Row>\r\n            <Row>\r\n            <Formik\r\n                initialValues={{\r\n                nombregrupo: body.nombre,\r\n                }}\r\n              >\r\n              {({ handleSubmit, handleChange, values, errors, setFieldValue }) => (\r\n                <Col md={12}>\r\n                    <Form>\r\n                        <Form.Group as={Row} className=\"mb-3\" controlId=\"formGridState\">\r\n                            <Form.Label as=\"legend\" column sm={2}>\r\n                                Nombre:\r\n                            </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                name=\"nombregrupo\"\r\n                                value={values.nombregrupo}\r\n                                onChange={handleChange}\r\n                                placeholder={body.nombre}\r\n                                />\r\n                            </Col>\r\n                        </Form.Group>\r\n                      </Form>\r\n                    <Row>\r\n                        <br /> \r\n                        <div className=\"fases\">\r\n                            <p>Número de neonatos: {body.conteo}</p>\r\n                        </div>\r\n                        <br /> \r\n                        <div className=\"fases\">\r\n                            <p>Porcentaje: {parseFloat(body.percentage).toFixed(2)}% de 57216</p>\r\n                        </div>\r\n                    </Row>\r\n                    <ConditionPanelCrearGrupo setGrupo={setBody} data={body.condiciones?body.condiciones:[]} data_real={props.data_real}/>\r\n                    <Button onClick={() => handleButtonClick(values)} variant=\"primary\" type=\"button\">Editar</Button>\r\n                </Col>\r\n              )}\r\n              </Formik>\r\n            </Row>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default GrupoTreeDetail;","import React from \"react\";\r\nimport SidebarContent from \"./sidebar/sidebarContent\";\r\nimport Tree from \"./tree/tree.js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getVariables } from \"../services/variablesUtils.js\";\r\nimport GrupoTreeDetail from \"./tree/GrupoTreeDetail.js\";\r\nimport {Modal, Button} from 'react-bootstrap';\r\n\r\n\r\nconst Inicio = () => {\r\n\r\n  const [state,setState] = useState({data_real:[], variables:[], etapas: [\"parto y post-parto\",\"entorno\",\"nacimiento\",\"salida hospitalización\",\"entrada Programa canguro\",\"semana 40\",\"mes 3\",\"mes 6\",\"mes 9\",\"mes 12\",\"entrada posición canguro\",\"salida posición canguro\"]});\r\n  const [groupsCluster, setGroupsCluster] = useState([]);\r\n  const [hide, setHide] = useState(\"\");\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [aux, setAux] = useState({});\r\n  const [show, setShow] = useState({value:false,grupo:{}});\r\n  const [deleted, setDeleted] = useState({});\r\n  const [edited, setEdited] = useState(false);\r\n  const [groupCreated,setGroupCreated] = useState(null);\r\n\r\n  const handleClose = () => setShow({value:false,grupo:{}});\r\n  const handleShow = (groupInfo) => setShow({value:true,grupo:groupInfo});\r\n\r\n  const selectItem= (item) => {\r\n      setSelectedItem(item);\r\n      setHide(\"hideEditDisplay\");\r\n  };\r\n\r\n  const unSelectItem= (item) => {\r\n      setAux(item);\r\n      setSelectedItem({});\r\n      setHide(\"\");\r\n  };\r\n\r\n  function groupBy(arr, criteria) {\r\n    const newObj = arr.reduce(function (acc, currentValue) {\r\n      if (!acc[currentValue[criteria]]) {\r\n        acc[currentValue[criteria]] = [];\r\n      }\r\n      acc[currentValue[criteria]].push({...currentValue, name: currentValue[\"nombre_general\"]+\" \"+currentValue[\"evento\"]});\r\n      return acc;\r\n   }, {});\r\n   return newObj;\r\n  };\r\n\r\n  function getEtapa(r){\r\n    let x = r.etapa?r.etapa:r.evento;\r\n    return { value: x, label: x };\r\n  }\r\n\r\n  useEffect(() => {\r\n    getVariables().then((res) => {\r\n      let r = groupBy(res, \"nombre_general\");\r\n      var arr = [];\r\n      for (var key in r) {\r\n        if (r.hasOwnProperty(key)) {\r\n          arr.push(\r\n            {\r\n              title: key,\r\n              values: r[key],\r\n              etapa : r[key].map(x=>{\r\n                return getEtapa(x)\r\n              })\r\n            }\r\n          );\r\n        }\r\n      }\r\n      setState(s => ({...state, variables:arr, data_real: res}));\r\n    });\r\n  }, []);\r\n\r\n  const transformToSelect = (x) =>{\r\n    return { value: x.title, label: x.title };\r\n  };\r\n\r\n  const transformToSelectEtapas = (x) =>{\r\n    return { value: x, label: x};\r\n  };\r\n\r\n  return (\r\n    <div className=\"row mx-1\">\r\n      <SidebarContent groupCreated={groupCreated} edited={edited} deleted={deleted} handleShow={handleShow} selectItem={selectItem} className=\"col\" setGroupsCluster={setGroupsCluster} groupsCluster={groupsCluster}/>\r\n      <div className=\"col-8\">\r\n        <Tree setGroupCreated={setGroupCreated} groupsCluster={groupsCluster} variables_real={state.variables} variables={state.variables.map(x => transformToSelect(x))} etapas={state.etapas.map(x => transformToSelectEtapas(x))} data_real={state.data_real}/>\r\n        <div className={\"fixedEditPanel \"+hide}>\r\n          <div className={\"scroll-panel variableEditAbsolute \" +hide}>\r\n            <button onClick={() => setHide(\"\")} className=\"cancelEditButton\">X</button>   \r\n            <div className=\"marginEditAbsolute\">\r\n              <GrupoTreeDetail setHide={setHide} setEdited={setEdited} grupo={selectedItem} nombre={selectedItem.nombre} data_real={state.data_real} unSelectItem={unSelectItem} setSelectedItem={setSelectedItem}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal show={show.value} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Eliminar grupo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>¿Está seguro de que desea eliminar el grupo: {show.grupo.nombre}?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={()=>{\r\n            setDeleted(show.grupo);\r\n            handleClose();\r\n          }}>\r\n            Eliminar grupo\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inicio;\r\n","export default __webpack_public_path__ + \"static/media/index.2090c3e2.less\";","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport GroupManage from \"./components/groupManage\";\r\nimport VariableManage from \"./components/variableManage\";\r\nimport TemasManage from \"./components/TemasManage\";\r\nimport Inicio from \"./components/inicio\";\r\nimport \"./assets/index.less\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\">FC</a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarTogglerDemo02\"\r\n              aria-controls=\"navbarTogglerDemo02\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                    Inicio\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/groupManage\">\r\n                    Gestión de grupos\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/variableManage\">\r\n                    Gestión de variables\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Inicio} />\r\n        <Route exact path=\"/groupManage\" component={GroupManage} />\r\n        <Route exact path=\"/variableManage\" component={VariableManage} />\r\n        <Route exact path=\"/TemasManage\" component={TemasManage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport 'rc-slider/assets/index.css'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}